{"pol": ["RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.4, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=7, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.45), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.4, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=7, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(MaxAbsScaler(Normalizer(data, Normalizer.norm='max')), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=4, ExtraTreesRegressor.min_samples_split=7, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(Normalizer(data, Normalizer.norm='max'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=4, ExtraTreesRegressor.min_samples_split=7, ExtraTreesRegressor.n_estimators=100)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.7500000000000001, GradientBoostingRegressor.min_samples_leaf=13, GradientBoostingRegressor.min_samples_split=18, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.4)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.4, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=6, RandomForestRegressor.n_estimators=100)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.7500000000000001, GradientBoostingRegressor.min_samples_leaf=13, GradientBoostingRegressor.min_samples_split=18, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.4)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.45), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6000000000000001, RandomForestRegressor.min_samples_leaf=4, RandomForestRegressor.min_samples_split=7, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7000000000000001, RandomForestRegressor.min_samples_leaf=4, RandomForestRegressor.min_samples_split=8, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7000000000000001, RandomForestRegressor.min_samples_leaf=4, RandomForestRegressor.min_samples_split=8, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(MaxAbsScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(Normalizer(data, Normalizer.norm='max'), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MinMaxScaler(Normalizer(data, Normalizer.norm='max')), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(Normalizer(data, Normalizer.norm='max'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(StandardScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.8, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(Normalizer(Normalizer(data, Normalizer.norm='l2'), Normalizer.norm='max'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7000000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=9, RandomForestRegressor.n_estimators=100)", "GradientBoostingRegressor(Normalizer(data, Normalizer.norm='max'), GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.4, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(Normalizer(data, Normalizer.norm='max'), GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.4, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(Normalizer(data, Normalizer.norm='max'), GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.7000000000000001, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(Normalizer(data, Normalizer.norm='max'), GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.4, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.7000000000000001, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.7000000000000001, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(MaxAbsScaler(data), GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.7000000000000001, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.7000000000000001), GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.7000000000000001, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(RobustScaler(Normalizer(data, Normalizer.norm='max')), GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.4, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(MaxAbsScaler(data), GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.7000000000000001, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='max'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.4, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.4, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.4, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=6, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.9000000000000001), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.3), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(StandardScaler(MinMaxScaler(data)), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=4, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.35000000000000003, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=17, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=4, ExtraTreesRegressor.min_samples_split=17, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=4, ExtraTreesRegressor.min_samples_split=20, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=4, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PolynomialFeatures(Normalizer(data, Normalizer.norm='max'), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=4, ExtraTreesRegressor.min_samples_split=17, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=5, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6000000000000001, RandomForestRegressor.min_samples_leaf=6, RandomForestRegressor.min_samples_split=15, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.5, RandomForestRegressor.min_samples_leaf=6, RandomForestRegressor.min_samples_split=15, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=4, ExtraTreesRegressor.min_samples_split=17, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RobustScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.5, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=13, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.3, RandomForestRegressor.min_samples_leaf=4, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.5, RandomForestRegressor.min_samples_leaf=4, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=4, RandomForestRegressor.min_samples_split=10, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=4, RandomForestRegressor.min_samples_split=13, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=14, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=20, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=10, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='max'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.3, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='max'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.4, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.4, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.9500000000000001), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6000000000000001, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6000000000000001, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.4, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.3, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.3, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.4, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(RobustScaler(data), VarianceThreshold.threshold=0.35000000000000003), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=12, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(SelectPercentile(data, SelectPercentile.percentile=93, SelectPercentile.score_func=f_regression)), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=12, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6000000000000001, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=12, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.5, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=12, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(StandardScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.8500000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=8, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=93, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6000000000000001, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=12, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6000000000000001, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=12, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=93, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=12, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=71, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=12, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=12, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False)), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.3, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.3, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(StandardScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.05), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.05), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(StandardScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)"], "wine_quality": ["ExtraTreesRegressor(StandardScaler(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False)), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.2, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.25, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.3, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.15000000000000002, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.3, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.1, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.15000000000000002, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.2, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PolynomialFeatures(MaxAbsScaler(data), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.25, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.45, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(StandardScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.3, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(StandardScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.3, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(StandardScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(RobustScaler(data)), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(MinMaxScaler(data)), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(RobustScaler(data)), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(StandardScaler(MinMaxScaler(data)), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(MaxAbsScaler(data)), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.05, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.05, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.05, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.05, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False)), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.05, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.25, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.2, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.2, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.1, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.15000000000000002, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MaxAbsScaler(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False)), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.15000000000000002, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.1, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.15000000000000002, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PolynomialFeatures(MinMaxScaler(data), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.2, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=5, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PolynomialFeatures(MinMaxScaler(MaxAbsScaler(data)), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.25, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.1, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(StandardScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.35000000000000003, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(StandardScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.35000000000000003, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(StandardScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(MinMaxScaler(data)), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.35000000000000003, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(StandardScaler(data), VarianceThreshold.threshold=0.35000000000000003), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(RobustScaler(data)), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PolynomialFeatures(MinMaxScaler(data), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PolynomialFeatures(MinMaxScaler(data), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PolynomialFeatures(MaxAbsScaler(data), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(StandardScaler(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False)), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(StandardScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.3, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(StandardScaler(data)), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.3, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)"], "Mercedes_Benz_Greener_Manufacturing": ["AdaBoostRegressor(Binarizer(data, Binarizer.threshold=0.0), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='linear', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(Binarizer(data, Binarizer.threshold=0.75), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='square', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(Binarizer(MaxAbsScaler(data), Binarizer.threshold=0.75), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='square', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(StandardScaler(Binarizer(data, Binarizer.threshold=0.9)), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='square', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(MaxAbsScaler(Binarizer(data, Binarizer.threshold=0.75)), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='square', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(RobustScaler(Binarizer(data, Binarizer.threshold=0.75)), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='square', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(MinMaxScaler(Binarizer(data, Binarizer.threshold=0.75)), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='linear', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(SelectPercentile(Binarizer(data, Binarizer.threshold=0.5), SelectPercentile.percentile=79, SelectPercentile.score_func=f_regression), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='linear', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(Binarizer(data, Binarizer.threshold=0.0), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='exponential', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(Binarizer(data, Binarizer.threshold=0.75), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='linear', AdaBoostRegressor.n_estimators=100)", "LassoLarsCV(Binarizer(StandardScaler(data), Binarizer.threshold=0.9), LassoLarsCV.normalize=False)", "AdaBoostRegressor(Binarizer(MaxAbsScaler(data), Binarizer.threshold=0.5), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='square', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(Binarizer(data, Binarizer.threshold=0.5), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='linear', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(Binarizer(data, Binarizer.threshold=0.5), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='square', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(Binarizer(MaxAbsScaler(data), Binarizer.threshold=0.05), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='square', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(Binarizer(data, Binarizer.threshold=0.8), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='square', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(Binarizer(data, Binarizer.threshold=0.30000000000000004), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='exponential', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(SelectFwe(data, SelectFwe.alpha=0.042, SelectFwe.score_func=f_regression), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='exponential', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(SelectFwe(data, SelectFwe.alpha=0.026000000000000002, SelectFwe.score_func=f_regression), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='square', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(SelectFwe(data, SelectFwe.alpha=0.026000000000000002, SelectFwe.score_func=f_regression), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='exponential', AdaBoostRegressor.n_estimators=100)", "LassoLarsCV(MinMaxScaler(SelectPercentile(data, SelectPercentile.percentile=87, SelectPercentile.score_func=f_regression)), LassoLarsCV.normalize=True)", "LassoLarsCV(SelectFwe(data, SelectFwe.alpha=0.02, SelectFwe.score_func=f_regression), LassoLarsCV.normalize=True)", "LassoLarsCV(StandardScaler(data), LassoLarsCV.normalize=False)", "LassoLarsCV(StandardScaler(SelectPercentile(data, SelectPercentile.percentile=70, SelectPercentile.score_func=f_regression)), LassoLarsCV.normalize=True)", "LassoLarsCV(SelectFwe(data, SelectFwe.alpha=0.017, SelectFwe.score_func=f_regression), LassoLarsCV.normalize=True)", "LassoLarsCV(Binarizer(RobustScaler(data), Binarizer.threshold=0.6000000000000001), LassoLarsCV.normalize=True)", "LassoLarsCV(SelectFwe(SelectPercentile(data, SelectPercentile.percentile=86, SelectPercentile.score_func=f_regression), SelectFwe.alpha=0.011, SelectFwe.score_func=f_regression), LassoLarsCV.normalize=True)", "LassoLarsCV(SelectFwe(data, SelectFwe.alpha=0.026000000000000002, SelectFwe.score_func=f_regression), LassoLarsCV.normalize=True)", "LassoLarsCV(SelectFwe(data, SelectFwe.alpha=0.025, SelectFwe.score_func=f_regression), LassoLarsCV.normalize=True)", "LassoLarsCV(SelectFwe(SelectFwe(data, SelectFwe.alpha=0.017, SelectFwe.score_func=f_regression), SelectFwe.alpha=0.002, SelectFwe.score_func=f_regression), LassoLarsCV.normalize=True)", "AdaBoostRegressor(MinMaxScaler(SelectFwe(data, SelectFwe.alpha=0.008, SelectFwe.score_func=f_regression)), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='exponential', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(SelectFwe(data, SelectFwe.alpha=0.034, SelectFwe.score_func=f_regression), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='exponential', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(SelectPercentile(data, SelectPercentile.percentile=43, SelectPercentile.score_func=f_regression), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='exponential', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(SelectFwe(Binarizer(data, Binarizer.threshold=0.15000000000000002), SelectFwe.alpha=0.043000000000000003, SelectFwe.score_func=f_regression), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='linear', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(MinMaxScaler(SelectFwe(data, SelectFwe.alpha=0.049, SelectFwe.score_func=f_regression)), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='linear', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(SelectPercentile(data, SelectPercentile.percentile=40, SelectPercentile.score_func=f_regression), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='exponential', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(SelectFwe(data, SelectFwe.alpha=0.008, SelectFwe.score_func=f_regression), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='exponential', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(SelectFwe(SelectFwe(data, SelectFwe.alpha=0.034, SelectFwe.score_func=f_regression), SelectFwe.alpha=0.005, SelectFwe.score_func=f_regression), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='exponential', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(SelectFwe(data, SelectFwe.alpha=0.049, SelectFwe.score_func=f_regression), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='linear', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(Binarizer(data, Binarizer.threshold=0.1), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='linear', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(Binarizer(SelectFwe(data, SelectFwe.alpha=0.002, SelectFwe.score_func=f_regression), Binarizer.threshold=0.05), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='linear', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(Binarizer(SelectFwe(data, SelectFwe.alpha=0.029, SelectFwe.score_func=f_regression), Binarizer.threshold=0.7000000000000001), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='linear', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(SelectFwe(Binarizer(data, Binarizer.threshold=0.4), SelectFwe.alpha=0.041, SelectFwe.score_func=f_regression), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='linear', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(SelectFwe(Binarizer(data, Binarizer.threshold=0.6000000000000001), SelectFwe.alpha=0.041, SelectFwe.score_func=f_regression), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='linear', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(Binarizer(SelectFwe(data, SelectFwe.alpha=0.041, SelectFwe.score_func=f_regression), Binarizer.threshold=0.05), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='linear', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(Binarizer(data, Binarizer.threshold=0.7000000000000001), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='linear', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(Binarizer(data, Binarizer.threshold=0.7000000000000001), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='exponential', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(Binarizer(data, Binarizer.threshold=0.55), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='linear', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(Binarizer(data, Binarizer.threshold=0.15000000000000002), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='linear', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(MinMaxScaler(Binarizer(data, Binarizer.threshold=0.15000000000000002)), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='square', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(SelectFwe(Binarizer(data, Binarizer.threshold=0.6000000000000001), SelectFwe.alpha=0.005, SelectFwe.score_func=f_regression), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='linear', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(Binarizer(SelectFwe(data, SelectFwe.alpha=0.024, SelectFwe.score_func=f_regression), Binarizer.threshold=0.65), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='linear', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(SelectFwe(Binarizer(data, Binarizer.threshold=0.7000000000000001), SelectFwe.alpha=0.014, SelectFwe.score_func=f_regression), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='linear', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(Binarizer(SelectFwe(data, SelectFwe.alpha=0.041, SelectFwe.score_func=f_regression), Binarizer.threshold=0.7000000000000001), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='square', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(Binarizer(SelectFwe(data, SelectFwe.alpha=0.024, SelectFwe.score_func=f_regression), Binarizer.threshold=0.8500000000000001), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='linear', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(Binarizer(data, Binarizer.threshold=0.0), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='linear', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(Binarizer(data, Binarizer.threshold=0.7000000000000001), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='linear', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(Binarizer(data, Binarizer.threshold=0.75), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='exponential', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(Binarizer(MaxAbsScaler(data), Binarizer.threshold=0.0), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='exponential', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(Binarizer(data, Binarizer.threshold=0.0), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='square', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(Binarizer(SelectFwe(data, SelectFwe.alpha=0.018000000000000002, SelectFwe.score_func=f_regression), Binarizer.threshold=0.9500000000000001), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='exponential', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(StandardScaler(Binarizer(SelectFwe(data, SelectFwe.alpha=0.02, SelectFwe.score_func=f_regression), Binarizer.threshold=0.9500000000000001)), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='exponential', AdaBoostRegressor.n_estimators=100)", "DecisionTreeRegressor(Binarizer(SelectFwe(data, SelectFwe.alpha=0.04, SelectFwe.score_func=f_regression), Binarizer.threshold=0.1), DecisionTreeRegressor.max_depth=3, DecisionTreeRegressor.min_samples_leaf=2, DecisionTreeRegressor.min_samples_split=13)", "AdaBoostRegressor(Binarizer(data, Binarizer.threshold=0.9500000000000001), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='exponential', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(Binarizer(data, Binarizer.threshold=0.25), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='exponential', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(Binarizer(data, Binarizer.threshold=0.8500000000000001), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='exponential', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(StandardScaler(Binarizer(data, Binarizer.threshold=0.9500000000000001)), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='exponential', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(Binarizer(data, Binarizer.threshold=0.8), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='linear', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(Binarizer(data, Binarizer.threshold=0.9500000000000001), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='linear', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(Binarizer(data, Binarizer.threshold=0.7000000000000001), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='exponential', AdaBoostRegressor.n_estimators=100)", "DecisionTreeRegressor(StandardScaler(Binarizer(data, Binarizer.threshold=0.5)), DecisionTreeRegressor.max_depth=4, DecisionTreeRegressor.min_samples_leaf=9, DecisionTreeRegressor.min_samples_split=13)", "DecisionTreeRegressor(Binarizer(data, Binarizer.threshold=0.5), DecisionTreeRegressor.max_depth=4, DecisionTreeRegressor.min_samples_leaf=9, DecisionTreeRegressor.min_samples_split=13)", "DecisionTreeRegressor(Binarizer(data, Binarizer.threshold=0.5), DecisionTreeRegressor.max_depth=4, DecisionTreeRegressor.min_samples_leaf=9, DecisionTreeRegressor.min_samples_split=2)", "DecisionTreeRegressor(Binarizer(data, Binarizer.threshold=0.4), DecisionTreeRegressor.max_depth=4, DecisionTreeRegressor.min_samples_leaf=5, DecisionTreeRegressor.min_samples_split=16)", "DecisionTreeRegressor(SelectPercentile(Binarizer(data, Binarizer.threshold=0.5), SelectPercentile.percentile=41, SelectPercentile.score_func=f_regression), DecisionTreeRegressor.max_depth=4, DecisionTreeRegressor.min_samples_leaf=9, DecisionTreeRegressor.min_samples_split=13)", "DecisionTreeRegressor(Binarizer(SelectPercentile(data, SelectPercentile.percentile=29, SelectPercentile.score_func=f_regression), Binarizer.threshold=0.4), DecisionTreeRegressor.max_depth=3, DecisionTreeRegressor.min_samples_leaf=1, DecisionTreeRegressor.min_samples_split=8)", "DecisionTreeRegressor(Binarizer(SelectFwe(data, SelectFwe.alpha=0.008, SelectFwe.score_func=f_regression), Binarizer.threshold=0.05), DecisionTreeRegressor.max_depth=3, DecisionTreeRegressor.min_samples_leaf=1, DecisionTreeRegressor.min_samples_split=17)", "DecisionTreeRegressor(SelectFwe(Binarizer(data, Binarizer.threshold=0.25), SelectFwe.alpha=0.025, SelectFwe.score_func=f_regression), DecisionTreeRegressor.max_depth=3, DecisionTreeRegressor.min_samples_leaf=1, DecisionTreeRegressor.min_samples_split=8)", "DecisionTreeRegressor(SelectPercentile(Binarizer(data, Binarizer.threshold=0.6000000000000001), SelectPercentile.percentile=44, SelectPercentile.score_func=f_regression), DecisionTreeRegressor.max_depth=3, DecisionTreeRegressor.min_samples_leaf=1, DecisionTreeRegressor.min_samples_split=8)", "DecisionTreeRegressor(Binarizer(SelectFwe(data, SelectFwe.alpha=0.04, SelectFwe.score_func=f_regression), Binarizer.threshold=0.4), DecisionTreeRegressor.max_depth=3, DecisionTreeRegressor.min_samples_leaf=5, DecisionTreeRegressor.min_samples_split=16)", "DecisionTreeRegressor(SelectPercentile(Binarizer(data, Binarizer.threshold=0.7000000000000001), SelectPercentile.percentile=14, SelectPercentile.score_func=f_regression), DecisionTreeRegressor.max_depth=3, DecisionTreeRegressor.min_samples_leaf=17, DecisionTreeRegressor.min_samples_split=8)", "DecisionTreeRegressor(SelectPercentile(Binarizer(data, Binarizer.threshold=0.7000000000000001), SelectPercentile.percentile=11, SelectPercentile.score_func=f_regression), DecisionTreeRegressor.max_depth=3, DecisionTreeRegressor.min_samples_leaf=3, DecisionTreeRegressor.min_samples_split=9)", "DecisionTreeRegressor(SelectFwe(Binarizer(data, Binarizer.threshold=0.05), SelectFwe.alpha=0.001, SelectFwe.score_func=f_regression), DecisionTreeRegressor.max_depth=3, DecisionTreeRegressor.min_samples_leaf=1, DecisionTreeRegressor.min_samples_split=8)", "DecisionTreeRegressor(Binarizer(data, Binarizer.threshold=0.0), DecisionTreeRegressor.max_depth=3, DecisionTreeRegressor.min_samples_leaf=5, DecisionTreeRegressor.min_samples_split=19)", "DecisionTreeRegressor(Binarizer(data, Binarizer.threshold=0.7000000000000001), DecisionTreeRegressor.max_depth=3, DecisionTreeRegressor.min_samples_leaf=5, DecisionTreeRegressor.min_samples_split=9)", "DecisionTreeRegressor(Binarizer(Binarizer(data, Binarizer.threshold=0.30000000000000004), Binarizer.threshold=0.1), DecisionTreeRegressor.max_depth=3, DecisionTreeRegressor.min_samples_leaf=5, DecisionTreeRegressor.min_samples_split=9)", "DecisionTreeRegressor(Binarizer(data, Binarizer.threshold=0.1), DecisionTreeRegressor.max_depth=3, DecisionTreeRegressor.min_samples_leaf=5, DecisionTreeRegressor.min_samples_split=9)", "DecisionTreeRegressor(Binarizer(MinMaxScaler(data), Binarizer.threshold=0.0), DecisionTreeRegressor.max_depth=3, DecisionTreeRegressor.min_samples_leaf=5, DecisionTreeRegressor.min_samples_split=4)", "DecisionTreeRegressor(Binarizer(MaxAbsScaler(data), Binarizer.threshold=0.0), DecisionTreeRegressor.max_depth=3, DecisionTreeRegressor.min_samples_leaf=5, DecisionTreeRegressor.min_samples_split=4)", "DecisionTreeRegressor(Binarizer(Binarizer(data, Binarizer.threshold=0.2), Binarizer.threshold=0.05), DecisionTreeRegressor.max_depth=3, DecisionTreeRegressor.min_samples_leaf=5, DecisionTreeRegressor.min_samples_split=3)"], "QSAR-TID-11": [], "house_sales": ["GradientBoostingRegressor(MaxAbsScaler(data), GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.6500000000000001, GradientBoostingRegressor.min_samples_leaf=2, GradientBoostingRegressor.min_samples_split=17, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.55)", "GradientBoostingRegressor(RobustScaler(data), GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.6500000000000001, GradientBoostingRegressor.min_samples_leaf=8, GradientBoostingRegressor.min_samples_split=17, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.55)", "GradientBoostingRegressor(MaxAbsScaler(data), GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.6500000000000001, GradientBoostingRegressor.min_samples_leaf=8, GradientBoostingRegressor.min_samples_split=17, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.55)", "GradientBoostingRegressor(MaxAbsScaler(data), GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.6500000000000001, GradientBoostingRegressor.min_samples_leaf=8, GradientBoostingRegressor.min_samples_split=17, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=1.0)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.6500000000000001, GradientBoostingRegressor.min_samples_leaf=8, GradientBoostingRegressor.min_samples_split=17, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=1.0)", "GradientBoostingRegressor(MaxAbsScaler(data), GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.6500000000000001, GradientBoostingRegressor.min_samples_leaf=2, GradientBoostingRegressor.min_samples_split=17, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.55)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.6500000000000001, GradientBoostingRegressor.min_samples_leaf=8, GradientBoostingRegressor.min_samples_split=17, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=1.0)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=4, GradientBoostingRegressor.max_features=0.6500000000000001, GradientBoostingRegressor.min_samples_leaf=8, GradientBoostingRegressor.min_samples_split=17, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=1.0)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.6500000000000001, GradientBoostingRegressor.min_samples_leaf=8, GradientBoostingRegressor.min_samples_split=17, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.55)", "GradientBoostingRegressor(RobustScaler(RobustScaler(data)), GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.6500000000000001, GradientBoostingRegressor.min_samples_leaf=8, GradientBoostingRegressor.min_samples_split=17, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.55)", "GradientBoostingRegressor(StandardScaler(data), GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.6500000000000001, GradientBoostingRegressor.min_samples_leaf=20, GradientBoostingRegressor.min_samples_split=4, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.6500000000000001, GradientBoostingRegressor.min_samples_leaf=20, GradientBoostingRegressor.min_samples_split=4, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(RobustScaler(data), GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.6500000000000001, GradientBoostingRegressor.min_samples_leaf=20, GradientBoostingRegressor.min_samples_split=4, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.6500000000000001, GradientBoostingRegressor.min_samples_leaf=19, GradientBoostingRegressor.min_samples_split=4, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(MinMaxScaler(data), GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.6500000000000001, GradientBoostingRegressor.min_samples_leaf=20, GradientBoostingRegressor.min_samples_split=4, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(RobustScaler(data), GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.6500000000000001, GradientBoostingRegressor.min_samples_leaf=8, GradientBoostingRegressor.min_samples_split=4, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(RobustScaler(data), GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.6500000000000001, GradientBoostingRegressor.min_samples_leaf=20, GradientBoostingRegressor.min_samples_split=4, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(MinMaxScaler(RobustScaler(data)), GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.6500000000000001, GradientBoostingRegressor.min_samples_leaf=18, GradientBoostingRegressor.min_samples_split=15, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(RobustScaler(data), GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.6500000000000001, GradientBoostingRegressor.min_samples_leaf=18, GradientBoostingRegressor.min_samples_split=15, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(RobustScaler(data), GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.6500000000000001, GradientBoostingRegressor.min_samples_leaf=11, GradientBoostingRegressor.min_samples_split=2, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "RandomForestRegressor(RobustScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(StandardScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(StandardScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(MinMaxScaler(data), SelectPercentile.percentile=89, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(StandardScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=89, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(StandardScaler(data)), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(StandardScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=6, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MinMaxScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=7, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MaxAbsScaler(MinMaxScaler(data)), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=8, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(StandardScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=7, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MinMaxScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=8, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=6, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectPercentile(data, SelectPercentile.percentile=95, SelectPercentile.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=6, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MinMaxScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=7, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MinMaxScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=7, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(StandardScaler(MinMaxScaler(data)), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=6, ExtraTreesRegressor.n_estimators=100)", "GradientBoostingRegressor(RobustScaler(data), GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.4, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=8, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.4, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9500000000000001)", "GradientBoostingRegressor(RobustScaler(data), GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.4, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9500000000000001)", "GradientBoostingRegressor(MaxAbsScaler(data), GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.4, GradientBoostingRegressor.min_samples_leaf=7, GradientBoostingRegressor.min_samples_split=3, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.4, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=7, GradientBoostingRegressor.max_features=0.4, GradientBoostingRegressor.min_samples_leaf=7, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(MaxAbsScaler(data), GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.4, GradientBoostingRegressor.min_samples_leaf=7, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(MinMaxScaler(data), GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.4, GradientBoostingRegressor.min_samples_leaf=7, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.4, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.4)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.4, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=8, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "ExtraTreesRegressor(MinMaxScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.8, ExtraTreesRegressor.min_samples_leaf=4, ExtraTreesRegressor.min_samples_split=7, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(data), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.7000000000000001, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.7000000000000001, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=7, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(StandardScaler(MaxAbsScaler(data)), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.7000000000000001, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=8, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(StandardScaler(data), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.7000000000000001, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(RobustScaler(data)), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.7000000000000001, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.4, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "GradientBoostingRegressor(StandardScaler(data), GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=4, GradientBoostingRegressor.max_features=0.3, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=5, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9000000000000001)", "GradientBoostingRegressor(MaxAbsScaler(data), GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=4, GradientBoostingRegressor.max_features=0.9000000000000001, GradientBoostingRegressor.min_samples_leaf=9, GradientBoostingRegressor.min_samples_split=5, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=6, GradientBoostingRegressor.max_features=0.9000000000000001, GradientBoostingRegressor.min_samples_leaf=20, GradientBoostingRegressor.min_samples_split=16, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='absolute_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.6500000000000001, GradientBoostingRegressor.min_samples_leaf=20, GradientBoostingRegressor.min_samples_split=16, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9000000000000001)", "GradientBoostingRegressor(MaxAbsScaler(data), GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=4, GradientBoostingRegressor.max_features=0.9000000000000001, GradientBoostingRegressor.min_samples_leaf=20, GradientBoostingRegressor.min_samples_split=5, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9000000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.9000000000000001, GradientBoostingRegressor.min_samples_leaf=20, GradientBoostingRegressor.min_samples_split=16, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9000000000000001)", "GradientBoostingRegressor(MaxAbsScaler(data), GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=6, GradientBoostingRegressor.max_features=0.9000000000000001, GradientBoostingRegressor.min_samples_leaf=20, GradientBoostingRegressor.min_samples_split=16, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.9000000000000001, GradientBoostingRegressor.min_samples_leaf=20, GradientBoostingRegressor.min_samples_split=5, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9000000000000001)", "GradientBoostingRegressor(MaxAbsScaler(data), GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=4, GradientBoostingRegressor.max_features=0.9000000000000001, GradientBoostingRegressor.min_samples_leaf=9, GradientBoostingRegressor.min_samples_split=5, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(RobustScaler(data), GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.9000000000000001, GradientBoostingRegressor.min_samples_leaf=20, GradientBoostingRegressor.min_samples_split=5, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9000000000000001)", "GradientBoostingRegressor(MinMaxScaler(data), GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=6, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=1, GradientBoostingRegressor.min_samples_split=13, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='absolute_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=10, GradientBoostingRegressor.min_samples_split=13, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "RandomForestRegressor(RobustScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.3, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=6, GradientBoostingRegressor.max_features=0.9500000000000001, GradientBoostingRegressor.min_samples_leaf=10, GradientBoostingRegressor.min_samples_split=13, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=10, GradientBoostingRegressor.min_samples_split=13, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.3, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=8, RandomForestRegressor.n_estimators=100)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=0.7500000000000001, GradientBoostingRegressor.min_samples_leaf=10, GradientBoostingRegressor.min_samples_split=19, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(MinMaxScaler(data), GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=10, GradientBoostingRegressor.min_samples_split=13, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=1.0)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=0.9500000000000001, GradientBoostingRegressor.min_samples_leaf=10, GradientBoostingRegressor.min_samples_split=13, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='absolute_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.6000000000000001, GradientBoostingRegressor.min_samples_leaf=12, GradientBoostingRegressor.min_samples_split=14, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9000000000000001)", "RandomForestRegressor(MaxAbsScaler(MinMaxScaler(data)), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.4, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='absolute_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.6000000000000001, GradientBoostingRegressor.min_samples_leaf=12, GradientBoostingRegressor.min_samples_split=14, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9000000000000001)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.4, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(MaxAbsScaler(data)), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.4, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.4, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.4, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=7, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.4, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.4, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6000000000000001, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=9, RandomForestRegressor.n_estimators=100)"], "Brazilian_houses": ["LassoLarsCV(SelectPercentile(SelectFwe(data, SelectFwe.alpha=0.018000000000000002, SelectFwe.score_func=f_regression), SelectPercentile.percentile=39, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(VarianceThreshold(SelectPercentile(data, SelectPercentile.percentile=38, SelectPercentile.score_func=f_regression), VarianceThreshold.threshold=0.7000000000000001), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(data, SelectPercentile.percentile=38, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(data, SelectPercentile.percentile=35, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(VarianceThreshold(SelectPercentile(data, SelectPercentile.percentile=35, SelectPercentile.score_func=f_regression), VarianceThreshold.threshold=0.1), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(data, SelectPercentile.percentile=40, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(VarianceThreshold(SelectPercentile(data, SelectPercentile.percentile=40, SelectPercentile.score_func=f_regression), VarianceThreshold.threshold=0.25), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectFwe(SelectPercentile(data, SelectPercentile.percentile=38, SelectPercentile.score_func=f_regression), SelectFwe.alpha=0.013000000000000001, SelectFwe.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(data, SelectPercentile.percentile=34, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(data, SelectPercentile.percentile=39, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(data, SelectPercentile.percentile=33, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(data, SelectPercentile.percentile=31, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(data, SelectPercentile.percentile=32, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(SelectPercentile(data, SelectPercentile.percentile=97, SelectPercentile.score_func=f_regression), SelectPercentile.percentile=31, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(VarianceThreshold(SelectPercentile(data, SelectPercentile.percentile=31, SelectPercentile.score_func=f_regression), VarianceThreshold.threshold=0.9000000000000001), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectFwe(SelectPercentile(data, SelectPercentile.percentile=31, SelectPercentile.score_func=f_regression), SelectFwe.alpha=0.005, SelectFwe.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectFwe(SelectPercentile(data, SelectPercentile.percentile=31, SelectPercentile.score_func=f_regression), SelectFwe.alpha=0.045, SelectFwe.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(VarianceThreshold(SelectPercentile(data, SelectPercentile.percentile=32, SelectPercentile.score_func=f_regression), VarianceThreshold.threshold=0.7000000000000001), LassoLarsCV.normalize=False)", "LassoLarsCV(VarianceThreshold(SelectPercentile(data, SelectPercentile.percentile=32, SelectPercentile.score_func=f_regression), VarianceThreshold.threshold=1.0), LassoLarsCV.normalize=False)", "LassoLarsCV(VarianceThreshold(SelectPercentile(data, SelectPercentile.percentile=31, SelectPercentile.score_func=f_regression), VarianceThreshold.threshold=0.55), LassoLarsCV.normalize=False)", "LinearSVR(SelectFwe(SelectPercentile(data, SelectPercentile.percentile=46, SelectPercentile.score_func=f_regression), SelectFwe.alpha=0.039, SelectFwe.score_func=f_regression), LinearSVR.C=0.01, LinearSVR.dual=True, LinearSVR.epsilon=0.001, LinearSVR.loss='epsilon_insensitive', LinearSVR.tol=0.01)", "LinearSVR(SelectPercentile(data, SelectPercentile.percentile=46, SelectPercentile.score_func=f_regression), LinearSVR.C=0.01, LinearSVR.dual=True, LinearSVR.epsilon=0.001, LinearSVR.loss='epsilon_insensitive', LinearSVR.tol=0.01)", "LassoLarsCV(PCA(SelectPercentile(data, SelectPercentile.percentile=33, SelectPercentile.score_func=f_regression), PCA.iterated_power=9, PCA.svd_solver='randomized'), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(PCA(data, PCA.iterated_power=10, PCA.svd_solver='randomized'), SelectPercentile.percentile=36, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(data, SelectPercentile.percentile=46, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectFwe(SelectPercentile(data, SelectPercentile.percentile=46, SelectPercentile.score_func=f_regression), SelectFwe.alpha=0.011, SelectFwe.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(data, SelectPercentile.percentile=41, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(VarianceThreshold(SelectPercentile(data, SelectPercentile.percentile=46, SelectPercentile.score_func=f_regression), VarianceThreshold.threshold=1.0), LassoLarsCV.normalize=False)", "LassoLarsCV(VarianceThreshold(SelectPercentile(data, SelectPercentile.percentile=46, SelectPercentile.score_func=f_regression), VarianceThreshold.threshold=0.45), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(SelectPercentile(data, SelectPercentile.percentile=98, SelectPercentile.score_func=f_regression), SelectPercentile.percentile=46, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(SelectFwe(data, SelectFwe.alpha=0.023, SelectFwe.score_func=f_regression), SelectPercentile.percentile=39, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(data, SelectPercentile.percentile=37, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(data, SelectPercentile.percentile=39, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(data, SelectPercentile.percentile=35, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectFwe(SelectPercentile(data, SelectPercentile.percentile=39, SelectPercentile.score_func=f_regression), SelectFwe.alpha=0.036000000000000004, SelectFwe.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(VarianceThreshold(SelectPercentile(data, SelectPercentile.percentile=39, SelectPercentile.score_func=f_regression), VarianceThreshold.threshold=0.25), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(SelectPercentile(data, SelectPercentile.percentile=87, SelectPercentile.score_func=f_regression), SelectPercentile.percentile=39, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectFwe(SelectPercentile(data, SelectPercentile.percentile=39, SelectPercentile.score_func=f_regression), SelectFwe.alpha=0.032, SelectFwe.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectFwe(SelectPercentile(data, SelectPercentile.percentile=39, SelectPercentile.score_func=f_regression), SelectFwe.alpha=0.008, SelectFwe.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(data, SelectPercentile.percentile=34, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(RobustScaler(data), SelectPercentile.percentile=47, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=True)", "LassoLarsCV(SelectPercentile(RobustScaler(data), SelectPercentile.percentile=52, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=True)", "LassoLarsCV(RobustScaler(SelectPercentile(data, SelectPercentile.percentile=50, SelectPercentile.score_func=f_regression)), LassoLarsCV.normalize=True)", "LassoLarsCV(RobustScaler(SelectPercentile(data, SelectPercentile.percentile=53, SelectPercentile.score_func=f_regression)), LassoLarsCV.normalize=True)", "LassoLarsCV(SelectPercentile(RobustScaler(data), SelectPercentile.percentile=53, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=True)", "LassoLarsCV(SelectPercentile(RobustScaler(data), SelectPercentile.percentile=50, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=True)", "LassoLarsCV(RobustScaler(SelectPercentile(data, SelectPercentile.percentile=52, SelectPercentile.score_func=f_regression)), LassoLarsCV.normalize=True)", "LassoLarsCV(SelectPercentile(data, SelectPercentile.percentile=52, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=True)", "LassoLarsCV(SelectPercentile(data, SelectPercentile.percentile=50, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=True)", "LassoLarsCV(SelectFwe(SelectPercentile(data, SelectPercentile.percentile=50, SelectPercentile.score_func=f_regression), SelectFwe.alpha=0.028, SelectFwe.score_func=f_regression), LassoLarsCV.normalize=True)", "LassoLarsCV(PCA(SelectPercentile(data, SelectPercentile.percentile=35, SelectPercentile.score_func=f_regression), PCA.iterated_power=9, PCA.svd_solver='randomized'), LassoLarsCV.normalize=True)", "LassoLarsCV(PCA(SelectPercentile(data, SelectPercentile.percentile=35, SelectPercentile.score_func=f_regression), PCA.iterated_power=8, PCA.svd_solver='randomized'), LassoLarsCV.normalize=True)", "LassoLarsCV(PCA(SelectPercentile(data, SelectPercentile.percentile=49, SelectPercentile.score_func=f_regression), PCA.iterated_power=1, PCA.svd_solver='randomized'), LassoLarsCV.normalize=True)", "LassoLarsCV(PCA(SelectPercentile(data, SelectPercentile.percentile=49, SelectPercentile.score_func=f_regression), PCA.iterated_power=10, PCA.svd_solver='randomized'), LassoLarsCV.normalize=True)", "LassoLarsCV(PCA(SelectPercentile(data, SelectPercentile.percentile=49, SelectPercentile.score_func=f_regression), PCA.iterated_power=4, PCA.svd_solver='randomized'), LassoLarsCV.normalize=True)", "LassoLarsCV(PCA(SelectPercentile(data, SelectPercentile.percentile=53, SelectPercentile.score_func=f_regression), PCA.iterated_power=9, PCA.svd_solver='randomized'), LassoLarsCV.normalize=True)", "LassoLarsCV(PCA(SelectPercentile(data, SelectPercentile.percentile=53, SelectPercentile.score_func=f_regression), PCA.iterated_power=8, PCA.svd_solver='randomized'), LassoLarsCV.normalize=True)", "LassoLarsCV(PCA(SelectPercentile(data, SelectPercentile.percentile=49, SelectPercentile.score_func=f_regression), PCA.iterated_power=8, PCA.svd_solver='randomized'), LassoLarsCV.normalize=True)", "LassoLarsCV(PCA(SelectPercentile(data, SelectPercentile.percentile=52, SelectPercentile.score_func=f_regression), PCA.iterated_power=10, PCA.svd_solver='randomized'), LassoLarsCV.normalize=True)", "LassoLarsCV(PCA(SelectPercentile(data, SelectPercentile.percentile=53, SelectPercentile.score_func=f_regression), PCA.iterated_power=7, PCA.svd_solver='randomized'), LassoLarsCV.normalize=True)", "LassoLarsCV(StandardScaler(SelectPercentile(data, SelectPercentile.percentile=36, SelectPercentile.score_func=f_regression)), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(StandardScaler(data), SelectPercentile.percentile=46, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(StandardScaler(data), SelectPercentile.percentile=41, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(PCA(SelectPercentile(data, SelectPercentile.percentile=37, SelectPercentile.score_func=f_regression), PCA.iterated_power=1, PCA.svd_solver='randomized'), LassoLarsCV.normalize=True)", "LassoLarsCV(PCA(SelectPercentile(data, SelectPercentile.percentile=36, SelectPercentile.score_func=f_regression), PCA.iterated_power=7, PCA.svd_solver='randomized'), LassoLarsCV.normalize=True)", "LassoLarsCV(MaxAbsScaler(SelectPercentile(data, SelectPercentile.percentile=36, SelectPercentile.score_func=f_regression)), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(MaxAbsScaler(data), SelectPercentile.percentile=42, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=True)", "LassoLarsCV(SelectPercentile(MaxAbsScaler(data), SelectPercentile.percentile=46, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=True)", "LassoLarsCV(SelectPercentile(MaxAbsScaler(data), SelectPercentile.percentile=44, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=True)", "LassoLarsCV(MaxAbsScaler(SelectPercentile(data, SelectPercentile.percentile=46, SelectPercentile.score_func=f_regression)), LassoLarsCV.normalize=True)", "LassoLarsCV(SelectPercentile(SelectFwe(data, SelectFwe.alpha=0.045, SelectFwe.score_func=f_regression), SelectPercentile.percentile=43, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(SelectFwe(data, SelectFwe.alpha=0.024, SelectFwe.score_func=f_regression), SelectPercentile.percentile=50, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(data, SelectPercentile.percentile=39, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(data, SelectPercentile.percentile=35, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectFwe(SelectPercentile(data, SelectPercentile.percentile=39, SelectPercentile.score_func=f_regression), SelectFwe.alpha=0.035, SelectFwe.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectFwe(SelectPercentile(data, SelectPercentile.percentile=39, SelectPercentile.score_func=f_regression), SelectFwe.alpha=0.047, SelectFwe.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(VarianceThreshold(SelectPercentile(data, SelectPercentile.percentile=39, SelectPercentile.score_func=f_regression), VarianceThreshold.threshold=0.5), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(data, SelectPercentile.percentile=37, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(data, SelectPercentile.percentile=40, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(SelectPercentile(data, SelectPercentile.percentile=98, SelectPercentile.score_func=f_regression), SelectPercentile.percentile=39, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LinearSVR(StandardScaler(data), LinearSVR.C=5.0, LinearSVR.dual=True, LinearSVR.epsilon=0.0001, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.0001)", "LinearSVR(RobustScaler(data), LinearSVR.C=15.0, LinearSVR.dual=True, LinearSVR.epsilon=0.01, LinearSVR.loss='epsilon_insensitive', LinearSVR.tol=0.001)", "LinearSVR(SelectFwe(data, SelectFwe.alpha=0.015, SelectFwe.score_func=f_regression), LinearSVR.C=0.001, LinearSVR.dual=True, LinearSVR.epsilon=0.01, LinearSVR.loss='epsilon_insensitive', LinearSVR.tol=0.001)", "LinearSVR(StandardScaler(data), LinearSVR.C=5.0, LinearSVR.dual=True, LinearSVR.epsilon=0.1, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.0001)", "LinearSVR(RobustScaler(RobustScaler(data)), LinearSVR.C=25.0, LinearSVR.dual=True, LinearSVR.epsilon=0.1, LinearSVR.loss='epsilon_insensitive', LinearSVR.tol=1e-05)", "LinearSVR(RobustScaler(data), LinearSVR.C=20.0, LinearSVR.dual=True, LinearSVR.epsilon=0.0001, LinearSVR.loss='epsilon_insensitive', LinearSVR.tol=0.0001)", "LinearSVR(data, LinearSVR.C=0.001, LinearSVR.dual=True, LinearSVR.epsilon=0.0001, LinearSVR.loss='epsilon_insensitive', LinearSVR.tol=1e-05)", "LinearSVR(VarianceThreshold(data, VarianceThreshold.threshold=0.9500000000000001), LinearSVR.C=0.001, LinearSVR.dual=True, LinearSVR.epsilon=0.0001, LinearSVR.loss='epsilon_insensitive', LinearSVR.tol=1e-05)", "LinearSVR(StandardScaler(data), LinearSVR.C=5.0, LinearSVR.dual=True, LinearSVR.epsilon=0.001, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.0001)", "LinearSVR(StandardScaler(data), LinearSVR.C=5.0, LinearSVR.dual=True, LinearSVR.epsilon=0.1, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.001)"], "nyc-taxi-green-dec-2016": ["GradientBoostingRegressor(SelectPercentile(data, SelectPercentile.percentile=33, SelectPercentile.score_func=f_regression), GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=1.0, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=4, GradientBoostingRegressor.max_features=0.7500000000000001, GradientBoostingRegressor.min_samples_leaf=7, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.55)", "GradientBoostingRegressor(SelectFwe(SelectPercentile(data, SelectPercentile.percentile=33, SelectPercentile.score_func=f_regression), SelectFwe.alpha=0.036000000000000004, SelectFwe.score_func=f_regression), GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=1.0, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=4, GradientBoostingRegressor.max_features=0.7500000000000001, GradientBoostingRegressor.min_samples_leaf=7, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.55)", "DecisionTreeRegressor(MinMaxScaler(RobustScaler(data)), DecisionTreeRegressor.max_depth=10, DecisionTreeRegressor.min_samples_leaf=5, DecisionTreeRegressor.min_samples_split=7)", "DecisionTreeRegressor(MinMaxScaler(data), DecisionTreeRegressor.max_depth=10, DecisionTreeRegressor.min_samples_leaf=5, DecisionTreeRegressor.min_samples_split=7)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=10, DecisionTreeRegressor.min_samples_leaf=5, DecisionTreeRegressor.min_samples_split=7)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=10, DecisionTreeRegressor.min_samples_leaf=5, DecisionTreeRegressor.min_samples_split=12)", "DecisionTreeRegressor(SelectPercentile(data, SelectPercentile.percentile=59, SelectPercentile.score_func=f_regression), DecisionTreeRegressor.max_depth=10, DecisionTreeRegressor.min_samples_leaf=5, DecisionTreeRegressor.min_samples_split=7)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=10, DecisionTreeRegressor.min_samples_leaf=15, DecisionTreeRegressor.min_samples_split=17)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=10, DecisionTreeRegressor.min_samples_leaf=5, DecisionTreeRegressor.min_samples_split=17)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=10, DecisionTreeRegressor.min_samples_leaf=7, DecisionTreeRegressor.min_samples_split=7)", "DecisionTreeRegressor(MaxAbsScaler(SelectPercentile(data, SelectPercentile.percentile=51, SelectPercentile.score_func=f_regression)), DecisionTreeRegressor.max_depth=9, DecisionTreeRegressor.min_samples_leaf=8, DecisionTreeRegressor.min_samples_split=16)", "DecisionTreeRegressor(MaxAbsScaler(SelectPercentile(data, SelectPercentile.percentile=51, SelectPercentile.score_func=f_regression)), DecisionTreeRegressor.max_depth=9, DecisionTreeRegressor.min_samples_leaf=8, DecisionTreeRegressor.min_samples_split=15)", "DecisionTreeRegressor(SelectPercentile(data, SelectPercentile.percentile=51, SelectPercentile.score_func=f_regression), DecisionTreeRegressor.max_depth=9, DecisionTreeRegressor.min_samples_leaf=8, DecisionTreeRegressor.min_samples_split=16)", "DecisionTreeRegressor(SelectFwe(MaxAbsScaler(SelectPercentile(data, SelectPercentile.percentile=51, SelectPercentile.score_func=f_regression)), SelectFwe.alpha=0.045, SelectFwe.score_func=f_regression), DecisionTreeRegressor.max_depth=9, DecisionTreeRegressor.min_samples_leaf=8, DecisionTreeRegressor.min_samples_split=16)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=9, DecisionTreeRegressor.min_samples_leaf=4, DecisionTreeRegressor.min_samples_split=6)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=9, DecisionTreeRegressor.min_samples_leaf=13, DecisionTreeRegressor.min_samples_split=15)", "DecisionTreeRegressor(MinMaxScaler(data), DecisionTreeRegressor.max_depth=9, DecisionTreeRegressor.min_samples_leaf=13, DecisionTreeRegressor.min_samples_split=15)", "DecisionTreeRegressor(MinMaxScaler(data), DecisionTreeRegressor.max_depth=9, DecisionTreeRegressor.min_samples_leaf=8, DecisionTreeRegressor.min_samples_split=18)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=9, DecisionTreeRegressor.min_samples_leaf=8, DecisionTreeRegressor.min_samples_split=14)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=9, DecisionTreeRegressor.min_samples_leaf=8, DecisionTreeRegressor.min_samples_split=16)", "DecisionTreeRegressor(PCA(PCA(data, PCA.iterated_power=1, PCA.svd_solver='randomized'), PCA.iterated_power=3, PCA.svd_solver='randomized'), DecisionTreeRegressor.max_depth=7, DecisionTreeRegressor.min_samples_leaf=7, DecisionTreeRegressor.min_samples_split=5)", "DecisionTreeRegressor(PCA(data, PCA.iterated_power=1, PCA.svd_solver='randomized'), DecisionTreeRegressor.max_depth=7, DecisionTreeRegressor.min_samples_leaf=7, DecisionTreeRegressor.min_samples_split=5)", "DecisionTreeRegressor(PCA(data, PCA.iterated_power=10, PCA.svd_solver='randomized'), DecisionTreeRegressor.max_depth=6, DecisionTreeRegressor.min_samples_leaf=12, DecisionTreeRegressor.min_samples_split=19)", "DecisionTreeRegressor(PCA(data, PCA.iterated_power=1, PCA.svd_solver='randomized'), DecisionTreeRegressor.max_depth=7, DecisionTreeRegressor.min_samples_leaf=11, DecisionTreeRegressor.min_samples_split=5)", "DecisionTreeRegressor(FastICA(data, FastICA.tol=0.45, FastICA.whiten='unit-variance'), DecisionTreeRegressor.max_depth=9, DecisionTreeRegressor.min_samples_leaf=8, DecisionTreeRegressor.min_samples_split=20)", "DecisionTreeRegressor(PCA(data, PCA.iterated_power=1, PCA.svd_solver='randomized'), DecisionTreeRegressor.max_depth=6, DecisionTreeRegressor.min_samples_leaf=11, DecisionTreeRegressor.min_samples_split=5)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=3, GradientBoostingRegressor.max_features=0.55, GradientBoostingRegressor.min_samples_leaf=6, GradientBoostingRegressor.min_samples_split=15, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=7, DecisionTreeRegressor.min_samples_leaf=11, DecisionTreeRegressor.min_samples_split=12)", "DecisionTreeRegressor(MaxAbsScaler(data), DecisionTreeRegressor.max_depth=7, DecisionTreeRegressor.min_samples_leaf=11, DecisionTreeRegressor.min_samples_split=5)", "DecisionTreeRegressor(RobustScaler(data), DecisionTreeRegressor.max_depth=7, DecisionTreeRegressor.min_samples_leaf=11, DecisionTreeRegressor.min_samples_split=12)", "DecisionTreeRegressor(SelectPercentile(data, SelectPercentile.percentile=89, SelectPercentile.score_func=f_regression), DecisionTreeRegressor.max_depth=9, DecisionTreeRegressor.min_samples_leaf=13, DecisionTreeRegressor.min_samples_split=4)", "DecisionTreeRegressor(SelectPercentile(data, SelectPercentile.percentile=51, SelectPercentile.score_func=f_regression), DecisionTreeRegressor.max_depth=9, DecisionTreeRegressor.min_samples_leaf=13, DecisionTreeRegressor.min_samples_split=4)", "DecisionTreeRegressor(SelectPercentile(data, SelectPercentile.percentile=51, SelectPercentile.score_func=f_regression), DecisionTreeRegressor.max_depth=9, DecisionTreeRegressor.min_samples_leaf=13, DecisionTreeRegressor.min_samples_split=15)", "DecisionTreeRegressor(SelectPercentile(data, SelectPercentile.percentile=51, SelectPercentile.score_func=f_regression), DecisionTreeRegressor.max_depth=9, DecisionTreeRegressor.min_samples_leaf=13, DecisionTreeRegressor.min_samples_split=14)", "DecisionTreeRegressor(SelectFwe(data, SelectFwe.alpha=0.034, SelectFwe.score_func=f_regression), DecisionTreeRegressor.max_depth=9, DecisionTreeRegressor.min_samples_leaf=13, DecisionTreeRegressor.min_samples_split=14)", "DecisionTreeRegressor(RobustScaler(data), DecisionTreeRegressor.max_depth=9, DecisionTreeRegressor.min_samples_leaf=13, DecisionTreeRegressor.min_samples_split=14)", "DecisionTreeRegressor(MinMaxScaler(data), DecisionTreeRegressor.max_depth=9, DecisionTreeRegressor.min_samples_leaf=13, DecisionTreeRegressor.min_samples_split=15)", "DecisionTreeRegressor(MaxAbsScaler(data), DecisionTreeRegressor.max_depth=9, DecisionTreeRegressor.min_samples_leaf=13, DecisionTreeRegressor.min_samples_split=14)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=9, DecisionTreeRegressor.min_samples_leaf=13, DecisionTreeRegressor.min_samples_split=14)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=9, DecisionTreeRegressor.min_samples_leaf=13, DecisionTreeRegressor.min_samples_split=4)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=10, DecisionTreeRegressor.min_samples_leaf=12, DecisionTreeRegressor.min_samples_split=16)", "DecisionTreeRegressor(MinMaxScaler(data), DecisionTreeRegressor.max_depth=10, DecisionTreeRegressor.min_samples_leaf=12, DecisionTreeRegressor.min_samples_split=16)", "DecisionTreeRegressor(MinMaxScaler(data), DecisionTreeRegressor.max_depth=10, DecisionTreeRegressor.min_samples_leaf=12, DecisionTreeRegressor.min_samples_split=10)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=8, DecisionTreeRegressor.min_samples_leaf=13, DecisionTreeRegressor.min_samples_split=2)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=8, DecisionTreeRegressor.min_samples_leaf=14, DecisionTreeRegressor.min_samples_split=6)", "DecisionTreeRegressor(MinMaxScaler(data), DecisionTreeRegressor.max_depth=7, DecisionTreeRegressor.min_samples_leaf=12, DecisionTreeRegressor.min_samples_split=10)", "DecisionTreeRegressor(SelectFwe(data, SelectFwe.alpha=0.01, SelectFwe.score_func=f_regression), DecisionTreeRegressor.max_depth=8, DecisionTreeRegressor.min_samples_leaf=4, DecisionTreeRegressor.min_samples_split=15)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=8, DecisionTreeRegressor.min_samples_leaf=4, DecisionTreeRegressor.min_samples_split=15)", "DecisionTreeRegressor(Normalizer(data, Normalizer.norm='max'), DecisionTreeRegressor.max_depth=8, DecisionTreeRegressor.min_samples_leaf=14, DecisionTreeRegressor.min_samples_split=16)", "DecisionTreeRegressor(SelectPercentile(data, SelectPercentile.percentile=34, SelectPercentile.score_func=f_regression), DecisionTreeRegressor.max_depth=8, DecisionTreeRegressor.min_samples_leaf=1, DecisionTreeRegressor.min_samples_split=15)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=8, DecisionTreeRegressor.min_samples_leaf=14, DecisionTreeRegressor.min_samples_split=8)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=8, DecisionTreeRegressor.min_samples_leaf=12, DecisionTreeRegressor.min_samples_split=17)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=8, DecisionTreeRegressor.min_samples_leaf=19, DecisionTreeRegressor.min_samples_split=17)", "DecisionTreeRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.15000000000000002), DecisionTreeRegressor.max_depth=8, DecisionTreeRegressor.min_samples_leaf=14, DecisionTreeRegressor.min_samples_split=8)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=44, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.05, RandomForestRegressor.min_samples_leaf=6, RandomForestRegressor.min_samples_split=10, RandomForestRegressor.n_estimators=100)", "LassoLarsCV(data, LassoLarsCV.normalize=True)", "LinearSVR(data, LinearSVR.C=10.0, LinearSVR.dual=False, LinearSVR.epsilon=0.001, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=1e-05)", "LinearSVR(SelectPercentile(data, SelectPercentile.percentile=76, SelectPercentile.score_func=f_regression), LinearSVR.C=0.1, LinearSVR.dual=False, LinearSVR.epsilon=0.001, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=1e-05)", "LassoLarsCV(SelectPercentile(data, SelectPercentile.percentile=86, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=True)", "LassoLarsCV(data, LassoLarsCV.normalize=False)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=10, DecisionTreeRegressor.min_samples_leaf=17, DecisionTreeRegressor.min_samples_split=12)", "DecisionTreeRegressor(StandardScaler(data), DecisionTreeRegressor.max_depth=10, DecisionTreeRegressor.min_samples_leaf=17, DecisionTreeRegressor.min_samples_split=13)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=10, DecisionTreeRegressor.min_samples_leaf=17, DecisionTreeRegressor.min_samples_split=13)", "DecisionTreeRegressor(StandardScaler(data), DecisionTreeRegressor.max_depth=10, DecisionTreeRegressor.min_samples_leaf=17, DecisionTreeRegressor.min_samples_split=8)", "DecisionTreeRegressor(SelectFwe(data, SelectFwe.alpha=0.048, SelectFwe.score_func=f_regression), DecisionTreeRegressor.max_depth=8, DecisionTreeRegressor.min_samples_leaf=15, DecisionTreeRegressor.min_samples_split=5)", "DecisionTreeRegressor(SelectFwe(data, SelectFwe.alpha=0.023, SelectFwe.score_func=f_regression), DecisionTreeRegressor.max_depth=8, DecisionTreeRegressor.min_samples_leaf=15, DecisionTreeRegressor.min_samples_split=5)", "DecisionTreeRegressor(MaxAbsScaler(data), DecisionTreeRegressor.max_depth=8, DecisionTreeRegressor.min_samples_leaf=13, DecisionTreeRegressor.min_samples_split=5)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=8, DecisionTreeRegressor.min_samples_leaf=15, DecisionTreeRegressor.min_samples_split=5)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=8, DecisionTreeRegressor.min_samples_leaf=13, DecisionTreeRegressor.min_samples_split=5)", "DecisionTreeRegressor(MinMaxScaler(MaxAbsScaler(data)), DecisionTreeRegressor.max_depth=10, DecisionTreeRegressor.min_samples_leaf=10, DecisionTreeRegressor.min_samples_split=4)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=9, DecisionTreeRegressor.min_samples_leaf=9, DecisionTreeRegressor.min_samples_split=4)", "DecisionTreeRegressor(RobustScaler(RobustScaler(data)), DecisionTreeRegressor.max_depth=9, DecisionTreeRegressor.min_samples_leaf=20, DecisionTreeRegressor.min_samples_split=8)", "DecisionTreeRegressor(RobustScaler(data), DecisionTreeRegressor.max_depth=9, DecisionTreeRegressor.min_samples_leaf=9, DecisionTreeRegressor.min_samples_split=4)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=7, DecisionTreeRegressor.min_samples_leaf=18, DecisionTreeRegressor.min_samples_split=7)", "DecisionTreeRegressor(VarianceThreshold(StandardScaler(data), VarianceThreshold.threshold=0.3), DecisionTreeRegressor.max_depth=7, DecisionTreeRegressor.min_samples_leaf=19, DecisionTreeRegressor.min_samples_split=7)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=7, DecisionTreeRegressor.min_samples_leaf=19, DecisionTreeRegressor.min_samples_split=7)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=9, DecisionTreeRegressor.min_samples_leaf=4, DecisionTreeRegressor.min_samples_split=4)", "DecisionTreeRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), DecisionTreeRegressor.max_depth=7, DecisionTreeRegressor.min_samples_leaf=19, DecisionTreeRegressor.min_samples_split=7)", "DecisionTreeRegressor(VarianceThreshold(RobustScaler(data), VarianceThreshold.threshold=0.7000000000000001), DecisionTreeRegressor.max_depth=9, DecisionTreeRegressor.min_samples_leaf=20, DecisionTreeRegressor.min_samples_split=8)", "DecisionTreeRegressor(VarianceThreshold(RobustScaler(data), VarianceThreshold.threshold=1.0), DecisionTreeRegressor.max_depth=9, DecisionTreeRegressor.min_samples_leaf=20, DecisionTreeRegressor.min_samples_split=8)", "RandomForestRegressor(SelectFwe(SelectPercentile(data, SelectPercentile.percentile=3, SelectPercentile.score_func=f_regression), SelectFwe.alpha=0.019, SelectFwe.score_func=f_regression), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.6000000000000001, RandomForestRegressor.min_samples_leaf=19, RandomForestRegressor.min_samples_split=16, RandomForestRegressor.n_estimators=100)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=10, DecisionTreeRegressor.min_samples_leaf=18, DecisionTreeRegressor.min_samples_split=18)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=9, DecisionTreeRegressor.min_samples_leaf=18, DecisionTreeRegressor.min_samples_split=18)", "DecisionTreeRegressor(RobustScaler(data), DecisionTreeRegressor.max_depth=9, DecisionTreeRegressor.min_samples_leaf=18, DecisionTreeRegressor.min_samples_split=18)", "DecisionTreeRegressor(PCA(data, PCA.iterated_power=9, PCA.svd_solver='randomized'), DecisionTreeRegressor.max_depth=9, DecisionTreeRegressor.min_samples_leaf=18, DecisionTreeRegressor.min_samples_split=18)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=9, DecisionTreeRegressor.min_samples_leaf=13, DecisionTreeRegressor.min_samples_split=17)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=9, DecisionTreeRegressor.min_samples_leaf=13, DecisionTreeRegressor.min_samples_split=16)", "DecisionTreeRegressor(SelectFwe(data, SelectFwe.alpha=0.033, SelectFwe.score_func=f_regression), DecisionTreeRegressor.max_depth=8, DecisionTreeRegressor.min_samples_leaf=13, DecisionTreeRegressor.min_samples_split=17)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=8, DecisionTreeRegressor.min_samples_leaf=13, DecisionTreeRegressor.min_samples_split=11)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=8, DecisionTreeRegressor.min_samples_leaf=13, DecisionTreeRegressor.min_samples_split=17)"], "black_friday": ["ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6500000000000001, ExtraTreesRegressor.min_samples_leaf=20, ExtraTreesRegressor.min_samples_split=12, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.6500000000000001, ExtraTreesRegressor.min_samples_leaf=20, ExtraTreesRegressor.min_samples_split=12, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6500000000000001, ExtraTreesRegressor.min_samples_leaf=10, ExtraTreesRegressor.min_samples_split=12, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7000000000000001, RandomForestRegressor.min_samples_leaf=16, RandomForestRegressor.min_samples_split=13, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7000000000000001, RandomForestRegressor.min_samples_leaf=16, RandomForestRegressor.min_samples_split=20, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(data), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.8, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=19, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.8, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=19, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6500000000000001, ExtraTreesRegressor.min_samples_leaf=5, ExtraTreesRegressor.min_samples_split=12, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.15000000000000002)), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.8, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=19, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(SelectFwe(data, SelectFwe.alpha=0.04, SelectFwe.score_func=f_regression)), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.8, RandomForestRegressor.min_samples_leaf=15, RandomForestRegressor.min_samples_split=12, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.5, RandomForestRegressor.min_samples_leaf=12, RandomForestRegressor.min_samples_split=11, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.3, RandomForestRegressor.min_samples_leaf=14, RandomForestRegressor.min_samples_split=9, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=77, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.5, RandomForestRegressor.min_samples_leaf=12, RandomForestRegressor.min_samples_split=11, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=77, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.5, RandomForestRegressor.min_samples_leaf=12, RandomForestRegressor.min_samples_split=14, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.3, RandomForestRegressor.min_samples_leaf=16, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.55, ExtraTreesRegressor.min_samples_leaf=20, ExtraTreesRegressor.min_samples_split=11, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=77, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.35000000000000003, RandomForestRegressor.min_samples_leaf=12, RandomForestRegressor.min_samples_split=11, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.3, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=19, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.3, RandomForestRegressor.min_samples_leaf=14, RandomForestRegressor.min_samples_split=8, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.3, RandomForestRegressor.min_samples_leaf=14, RandomForestRegressor.min_samples_split=9, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=12, RandomForestRegressor.min_samples_split=13, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=12, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=12, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6000000000000001, RandomForestRegressor.min_samples_leaf=13, RandomForestRegressor.min_samples_split=13, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.3, RandomForestRegressor.min_samples_leaf=9, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=13, RandomForestRegressor.min_samples_split=13, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.3, RandomForestRegressor.min_samples_leaf=9, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(data), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.3, RandomForestRegressor.min_samples_leaf=9, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(StandardScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.3, RandomForestRegressor.min_samples_leaf=20, RandomForestRegressor.min_samples_split=20, RandomForestRegressor.n_estimators=100)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=10, GradientBoostingRegressor.min_samples_split=13, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(RobustScaler(data), GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.4, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.7000000000000001, RandomForestRegressor.min_samples_leaf=13, RandomForestRegressor.min_samples_split=19, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.9500000000000001, RandomForestRegressor.min_samples_leaf=17, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=6, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(data), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=6, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=7, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=7, RandomForestRegressor.min_samples_split=16, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=7, RandomForestRegressor.min_samples_split=9, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(MinMaxScaler(data), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.55, ExtraTreesRegressor.min_samples_leaf=18, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MaxAbsScaler(data), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.55, ExtraTreesRegressor.min_samples_leaf=18, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.4, RandomForestRegressor.min_samples_leaf=14, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "DecisionTreeRegressor(SelectPercentile(data, SelectPercentile.percentile=74, SelectPercentile.score_func=f_regression), DecisionTreeRegressor.max_depth=10, DecisionTreeRegressor.min_samples_leaf=17, DecisionTreeRegressor.min_samples_split=7)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.4, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=14, RandomForestRegressor.n_estimators=100)", "DecisionTreeRegressor(StandardScaler(data), DecisionTreeRegressor.max_depth=10, DecisionTreeRegressor.min_samples_leaf=17, DecisionTreeRegressor.min_samples_split=11)", "DecisionTreeRegressor(StandardScaler(data), DecisionTreeRegressor.max_depth=10, DecisionTreeRegressor.min_samples_leaf=15, DecisionTreeRegressor.min_samples_split=6)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=10, DecisionTreeRegressor.min_samples_leaf=10, DecisionTreeRegressor.min_samples_split=6)", "DecisionTreeRegressor(StandardScaler(data), DecisionTreeRegressor.max_depth=10, DecisionTreeRegressor.min_samples_leaf=7, DecisionTreeRegressor.min_samples_split=6)", "DecisionTreeRegressor(MaxAbsScaler(data), DecisionTreeRegressor.max_depth=10, DecisionTreeRegressor.min_samples_leaf=7, DecisionTreeRegressor.min_samples_split=3)", "DecisionTreeRegressor(MaxAbsScaler(data), DecisionTreeRegressor.max_depth=10, DecisionTreeRegressor.min_samples_leaf=7, DecisionTreeRegressor.min_samples_split=6)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=10, DecisionTreeRegressor.min_samples_leaf=7, DecisionTreeRegressor.min_samples_split=2)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=20, ExtraTreesRegressor.min_samples_split=6, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MinMaxScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7000000000000001, ExtraTreesRegressor.min_samples_leaf=18, ExtraTreesRegressor.min_samples_split=14, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7000000000000001, ExtraTreesRegressor.min_samples_leaf=18, ExtraTreesRegressor.min_samples_split=14, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MinMaxScaler(data), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.7000000000000001, ExtraTreesRegressor.min_samples_leaf=18, ExtraTreesRegressor.min_samples_split=14, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MinMaxScaler(data), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.7000000000000001, ExtraTreesRegressor.min_samples_leaf=18, ExtraTreesRegressor.min_samples_split=10, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.8500000000000001, ExtraTreesRegressor.min_samples_leaf=13, ExtraTreesRegressor.min_samples_split=7, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7000000000000001, RandomForestRegressor.min_samples_leaf=15, RandomForestRegressor.min_samples_split=20, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.45, ExtraTreesRegressor.min_samples_leaf=11, ExtraTreesRegressor.min_samples_split=11, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.45, ExtraTreesRegressor.min_samples_leaf=20, ExtraTreesRegressor.min_samples_split=6, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.45, ExtraTreesRegressor.min_samples_leaf=20, ExtraTreesRegressor.min_samples_split=12, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(data), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=15, RandomForestRegressor.min_samples_split=7, RandomForestRegressor.n_estimators=100)", "GradientBoostingRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.05, GradientBoostingRegressor.min_samples_leaf=20, GradientBoostingRegressor.min_samples_split=4, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "ExtraTreesRegressor(VarianceThreshold(StandardScaler(data), VarianceThreshold.threshold=0.8500000000000001), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.8500000000000001, ExtraTreesRegressor.min_samples_leaf=15, ExtraTreesRegressor.min_samples_split=11, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=15, RandomForestRegressor.min_samples_split=18, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=15, RandomForestRegressor.min_samples_split=6, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=15, RandomForestRegressor.min_samples_split=7, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(RobustScaler(RobustScaler(data))), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=15, RandomForestRegressor.min_samples_split=7, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=15, RandomForestRegressor.min_samples_split=7, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(RobustScaler(data)), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=15, RandomForestRegressor.min_samples_split=7, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=15, RandomForestRegressor.min_samples_split=20, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(RobustScaler(data)), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.8, RandomForestRegressor.min_samples_leaf=19, RandomForestRegressor.min_samples_split=15, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.7000000000000001, ExtraTreesRegressor.min_samples_leaf=16, ExtraTreesRegressor.min_samples_split=8, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7000000000000001, ExtraTreesRegressor.min_samples_leaf=16, ExtraTreesRegressor.min_samples_split=8, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.8500000000000001, ExtraTreesRegressor.min_samples_leaf=16, ExtraTreesRegressor.min_samples_split=8, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PCA(data, PCA.iterated_power=10, PCA.svd_solver='randomized'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7000000000000001, ExtraTreesRegressor.min_samples_leaf=16, ExtraTreesRegressor.min_samples_split=8, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PCA(data, PCA.iterated_power=1, PCA.svd_solver='randomized'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=18, ExtraTreesRegressor.min_samples_split=6, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MinMaxScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=18, ExtraTreesRegressor.min_samples_split=6, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=13, RandomForestRegressor.min_samples_split=17, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=13, RandomForestRegressor.min_samples_split=17, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=14, ExtraTreesRegressor.min_samples_split=17, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(data), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=12, RandomForestRegressor.min_samples_split=11, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=16, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=12, RandomForestRegressor.min_samples_split=11, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(RobustScaler(data), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.7000000000000001, ExtraTreesRegressor.min_samples_leaf=9, ExtraTreesRegressor.min_samples_split=13, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RobustScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7000000000000001, ExtraTreesRegressor.min_samples_leaf=17, ExtraTreesRegressor.min_samples_split=13, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(data), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.9000000000000001, RandomForestRegressor.min_samples_leaf=15, RandomForestRegressor.min_samples_split=7, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.9000000000000001, RandomForestRegressor.min_samples_leaf=15, RandomForestRegressor.min_samples_split=7, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.7000000000000001, ExtraTreesRegressor.min_samples_leaf=17, ExtraTreesRegressor.min_samples_split=13, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RobustScaler(data), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.7000000000000001, ExtraTreesRegressor.min_samples_leaf=17, ExtraTreesRegressor.min_samples_split=13, ExtraTreesRegressor.n_estimators=100)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=6, GradientBoostingRegressor.max_features=0.7500000000000001, GradientBoostingRegressor.min_samples_leaf=13, GradientBoostingRegressor.min_samples_split=18, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.4)"], "Yolanda": ["LassoLarsCV(Normalizer(StandardScaler(data), Normalizer.norm='l2'), LassoLarsCV.normalize=False)", "LassoLarsCV(Normalizer(StandardScaler(data), Normalizer.norm='l2'), LassoLarsCV.normalize=True)", "LassoLarsCV(PCA(data, PCA.iterated_power=9, PCA.svd_solver='randomized'), LassoLarsCV.normalize=False)", "LassoLarsCV(MaxAbsScaler(data), LassoLarsCV.normalize=True)", "LassoLarsCV(data, LassoLarsCV.normalize=True)", "LassoLarsCV(data, LassoLarsCV.normalize=False)", "LassoLarsCV(MinMaxScaler(MaxAbsScaler(data)), LassoLarsCV.normalize=False)", "LassoLarsCV(MinMaxScaler(data), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectFwe(data, SelectFwe.alpha=0.009000000000000001, SelectFwe.score_func=f_regression), LassoLarsCV.normalize=True)", "LassoLarsCV(SelectFwe(MinMaxScaler(data), SelectFwe.alpha=0.017, SelectFwe.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(data, LassoLarsCV.normalize=True)", "LassoLarsCV(FastICA(data, FastICA.tol=0.30000000000000004, FastICA.whiten='unit-variance'), LassoLarsCV.normalize=True)", "LassoLarsCV(data, LassoLarsCV.normalize=False)", "LassoLarsCV(PCA(data, PCA.iterated_power=2, PCA.svd_solver='randomized'), LassoLarsCV.normalize=True)", "ElasticNetCV(data, ElasticNetCV.l1_ratio=1.0, ElasticNetCV.tol=1e-05)", "ElasticNetCV(VarianceThreshold(VarianceThreshold(data, VarianceThreshold.threshold=0.8500000000000001), VarianceThreshold.threshold=0.7500000000000001), ElasticNetCV.l1_ratio=0.9500000000000001, ElasticNetCV.tol=0.01)", "LinearSVR(FastICA(data, FastICA.tol=0.05, FastICA.whiten='unit-variance'), LinearSVR.C=0.1, LinearSVR.dual=False, LinearSVR.epsilon=1.0, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.1)", "ElasticNetCV(PCA(SelectPercentile(data, SelectPercentile.percentile=78, SelectPercentile.score_func=f_regression), PCA.iterated_power=9, PCA.svd_solver='randomized'), ElasticNetCV.l1_ratio=0.25, ElasticNetCV.tol=0.001)", "LinearSVR(VarianceThreshold(StandardScaler(data), VarianceThreshold.threshold=0.15000000000000002), LinearSVR.C=25.0, LinearSVR.dual=False, LinearSVR.epsilon=0.0001, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.01)", "LassoLarsCV(SelectFwe(SelectPercentile(data, SelectPercentile.percentile=6, SelectPercentile.score_func=f_regression), SelectFwe.alpha=0.035, SelectFwe.score_func=f_regression), LassoLarsCV.normalize=True)", "LassoLarsCV(FastICA(data, FastICA.tol=0.15000000000000002, FastICA.whiten='unit-variance'), LassoLarsCV.normalize=True)", "LassoLarsCV(MinMaxScaler(RobustScaler(data)), LassoLarsCV.normalize=False)", "LassoLarsCV(MinMaxScaler(data), LassoLarsCV.normalize=False)", "ElasticNetCV(FastICA(data, FastICA.tol=0.4, FastICA.whiten='unit-variance'), ElasticNetCV.l1_ratio=0.5, ElasticNetCV.tol=0.01)", "LassoLarsCV(data, LassoLarsCV.normalize=False)", "ElasticNetCV(RobustScaler(data), ElasticNetCV.l1_ratio=0.5, ElasticNetCV.tol=0.0001)", "ElasticNetCV(RobustScaler(RobustScaler(RobustScaler(data))), ElasticNetCV.l1_ratio=0.5, ElasticNetCV.tol=0.0001)", "ElasticNetCV(RobustScaler(RobustScaler(data)), ElasticNetCV.l1_ratio=0.5, ElasticNetCV.tol=0.0001)", "LassoLarsCV(SelectPercentile(data, SelectPercentile.percentile=86, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=True)", "ElasticNetCV(data, ElasticNetCV.l1_ratio=0.9500000000000001, ElasticNetCV.tol=0.0001)", "LassoLarsCV(VarianceThreshold(data, VarianceThreshold.threshold=0.2), LassoLarsCV.normalize=False)", "LassoLarsCV(VarianceThreshold(data, VarianceThreshold.threshold=0.7000000000000001), LassoLarsCV.normalize=False)", "LassoLarsCV(data, LassoLarsCV.normalize=False)", "LassoLarsCV(VarianceThreshold(data, VarianceThreshold.threshold=0.15000000000000002), LassoLarsCV.normalize=False)", "LassoLarsCV(RobustScaler(data), LassoLarsCV.normalize=False)", "LassoLarsCV(RobustScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.15000000000000002)), LassoLarsCV.normalize=False)", "LassoLarsCV(MaxAbsScaler(MinMaxScaler(data)), LassoLarsCV.normalize=True)", "LassoLarsCV(StandardScaler(MinMaxScaler(data)), LassoLarsCV.normalize=True)", "LassoLarsCV(MinMaxScaler(data), LassoLarsCV.normalize=False)", "ElasticNetCV(StandardScaler(MinMaxScaler(data)), ElasticNetCV.l1_ratio=0.55, ElasticNetCV.tol=0.0001)", "LassoLarsCV(RobustScaler(FastICA(data, FastICA.tol=0.65, FastICA.whiten='unit-variance')), LassoLarsCV.normalize=True)", "LassoLarsCV(MinMaxScaler(data), LassoLarsCV.normalize=False)", "LassoLarsCV(RobustScaler(data), LassoLarsCV.normalize=False)", "LassoLarsCV(data, LassoLarsCV.normalize=False)", "LassoLarsCV(data, LassoLarsCV.normalize=True)", "LassoLarsCV(VarianceThreshold(data, VarianceThreshold.threshold=0.9000000000000001), LassoLarsCV.normalize=True)", "LassoLarsCV(RobustScaler(data), LassoLarsCV.normalize=True)", "LassoLarsCV(RobustScaler(RobustScaler(data)), LassoLarsCV.normalize=True)", "LassoLarsCV(VarianceThreshold(data, VarianceThreshold.threshold=0.45), LassoLarsCV.normalize=True)", "ElasticNetCV(StandardScaler(data), ElasticNetCV.l1_ratio=0.4, ElasticNetCV.tol=0.001)", "LassoLarsCV(data, LassoLarsCV.normalize=True)", "ElasticNetCV(MaxAbsScaler(data), ElasticNetCV.l1_ratio=0.9, ElasticNetCV.tol=0.0001)", "LassoLarsCV(SelectFwe(data, SelectFwe.alpha=0.02, SelectFwe.score_func=f_regression), LassoLarsCV.normalize=True)", "LassoLarsCV(SelectFwe(data, SelectFwe.alpha=0.002, SelectFwe.score_func=f_regression), LassoLarsCV.normalize=True)", "ElasticNetCV(data, ElasticNetCV.l1_ratio=0.9, ElasticNetCV.tol=0.01)", "ElasticNetCV(data, ElasticNetCV.l1_ratio=0.9, ElasticNetCV.tol=0.0001)", "ElasticNetCV(data, ElasticNetCV.l1_ratio=0.8, ElasticNetCV.tol=0.001)", "ElasticNetCV(PCA(data, PCA.iterated_power=1, PCA.svd_solver='randomized'), ElasticNetCV.l1_ratio=0.9, ElasticNetCV.tol=0.01)", "ElasticNetCV(data, ElasticNetCV.l1_ratio=0.65, ElasticNetCV.tol=0.0001)", "ElasticNetCV(VarianceThreshold(data, VarianceThreshold.threshold=0.9500000000000001), ElasticNetCV.l1_ratio=0.35000000000000003, ElasticNetCV.tol=0.0001)", "LassoLarsCV(data, LassoLarsCV.normalize=True)", "LassoLarsCV(PCA(data, PCA.iterated_power=1, PCA.svd_solver='randomized'), LassoLarsCV.normalize=False)", "LassoLarsCV(PCA(data, PCA.iterated_power=4, PCA.svd_solver='randomized'), LassoLarsCV.normalize=False)", "LassoLarsCV(data, LassoLarsCV.normalize=False)", "ElasticNetCV(StandardScaler(PCA(data, PCA.iterated_power=2, PCA.svd_solver='randomized')), ElasticNetCV.l1_ratio=0.55, ElasticNetCV.tol=0.0001)", "LassoLarsCV(MinMaxScaler(PCA(data, PCA.iterated_power=7, PCA.svd_solver='randomized')), LassoLarsCV.normalize=True)", "LassoLarsCV(PCA(data, PCA.iterated_power=2, PCA.svd_solver='randomized'), LassoLarsCV.normalize=True)", "LassoLarsCV(SelectPercentile(data, SelectPercentile.percentile=89, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=True)", "ElasticNetCV(data, ElasticNetCV.l1_ratio=0.9500000000000001, ElasticNetCV.tol=0.0001)", "ElasticNetCV(data, ElasticNetCV.l1_ratio=0.8500000000000001, ElasticNetCV.tol=0.1)", "LassoLarsCV(VarianceThreshold(data, VarianceThreshold.threshold=0.4), LassoLarsCV.normalize=False)", "LassoLarsCV(data, LassoLarsCV.normalize=False)", "LassoLarsCV(VarianceThreshold(data, VarianceThreshold.threshold=0.8500000000000001), LassoLarsCV.normalize=False)", "LassoLarsCV(VarianceThreshold(data, VarianceThreshold.threshold=0.35000000000000003), LassoLarsCV.normalize=False)", "LassoLarsCV(MaxAbsScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.9500000000000001)), LassoLarsCV.normalize=False)", "LassoLarsCV(MaxAbsScaler(data), LassoLarsCV.normalize=False)", "LassoLarsCV(RobustScaler(data), LassoLarsCV.normalize=False)", "LassoLarsCV(VarianceThreshold(RobustScaler(data), VarianceThreshold.threshold=0.35000000000000003), LassoLarsCV.normalize=False)", "LassoLarsCV(MinMaxScaler(MinMaxScaler(data)), LassoLarsCV.normalize=False)", "LassoLarsCV(MinMaxScaler(data), LassoLarsCV.normalize=False)"], "MIP-2016-regression": ["ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.1, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.1, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectPercentile(data, SelectPercentile.percentile=54, SelectPercentile.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.1, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectPercentile(data, SelectPercentile.percentile=90, SelectPercentile.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.1, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=5, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectPercentile(data, SelectPercentile.percentile=53, SelectPercentile.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.1, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectPercentile(data, SelectPercentile.percentile=63, SelectPercentile.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.1, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=5, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.1, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=5, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectPercentile(RobustScaler(data), SelectPercentile.percentile=85, SelectPercentile.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.1, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RobustScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.1, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.1, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=80, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.1), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=7, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=64, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=67, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=6, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(StandardScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.15000000000000002), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=8, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=6, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=7, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.05), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(StandardScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=8, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(StandardScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=9, RandomForestRegressor.n_estimators=100)", "GradientBoostingRegressor(RobustScaler(data), GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=4, GradientBoostingRegressor.max_features=0.35000000000000003, GradientBoostingRegressor.min_samples_leaf=5, GradientBoostingRegressor.min_samples_split=13, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9500000000000001)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=8, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=8, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=12, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=39, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.3, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.3, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=63, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.3, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=48, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=6, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.3, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=65, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.3, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=44, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=6, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=6, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=7, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.1), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(StandardScaler(data), SelectPercentile.percentile=61, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=8, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(StandardScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=8, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=40, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=62, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(RobustScaler(data), SelectPercentile.percentile=58, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=58, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=8, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=27, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=61, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=56, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(SelectPercentile(data, SelectPercentile.percentile=75, SelectPercentile.score_func=f_regression)), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(StandardScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)"], "SAT11-HAND-runtime-regression": ["GradientBoostingRegressor(MaxAbsScaler(RobustScaler(data)), GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.8, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=9, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9000000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.9500000000000001, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=9, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9000000000000001)", "GradientBoostingRegressor(SelectFwe(MaxAbsScaler(data), SelectFwe.alpha=0.043000000000000003, SelectFwe.score_func=f_regression), GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.8, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=9, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9000000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.8, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=10, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9000000000000001)", "GradientBoostingRegressor(MaxAbsScaler(data), GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.8, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=9, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9000000000000001)", "GradientBoostingRegressor(SelectPercentile(data, SelectPercentile.percentile=99, SelectPercentile.score_func=f_regression), GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.8, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=9, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9000000000000001)", "GradientBoostingRegressor(StandardScaler(data), GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.8, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=9, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9000000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.8, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=9, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9000000000000001)", "GradientBoostingRegressor(MaxAbsScaler(MinMaxScaler(data)), GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.8, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=9, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9000000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.8, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=16, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9000000000000001)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7500000000000001, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=13, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7500000000000001, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=12, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7500000000000001, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=13, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.35000000000000003), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7500000000000001, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=12, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7500000000000001, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=16, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7000000000000001, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=13, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.8500000000000001, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=14, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7500000000000001, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=10, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7000000000000001, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=13, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.8500000000000001, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=16, RandomForestRegressor.n_estimators=100)", "DecisionTreeRegressor(RobustScaler(data), DecisionTreeRegressor.max_depth=10, DecisionTreeRegressor.min_samples_leaf=7, DecisionTreeRegressor.min_samples_split=14)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=10, DecisionTreeRegressor.min_samples_leaf=7, DecisionTreeRegressor.min_samples_split=14)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=10, DecisionTreeRegressor.min_samples_leaf=7, DecisionTreeRegressor.min_samples_split=13)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=10, DecisionTreeRegressor.min_samples_leaf=7, DecisionTreeRegressor.min_samples_split=12)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=10, DecisionTreeRegressor.min_samples_leaf=7, DecisionTreeRegressor.min_samples_split=11)", "DecisionTreeRegressor(MaxAbsScaler(data), DecisionTreeRegressor.max_depth=10, DecisionTreeRegressor.min_samples_leaf=7, DecisionTreeRegressor.min_samples_split=11)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=10, DecisionTreeRegressor.min_samples_leaf=7, DecisionTreeRegressor.min_samples_split=7)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=10, DecisionTreeRegressor.min_samples_leaf=7, DecisionTreeRegressor.min_samples_split=8)", "DecisionTreeRegressor(MinMaxScaler(data), DecisionTreeRegressor.max_depth=10, DecisionTreeRegressor.min_samples_leaf=7, DecisionTreeRegressor.min_samples_split=8)", "DecisionTreeRegressor(StandardScaler(data), DecisionTreeRegressor.max_depth=10, DecisionTreeRegressor.min_samples_leaf=7, DecisionTreeRegressor.min_samples_split=13)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.45, GradientBoostingRegressor.min_samples_leaf=11, GradientBoostingRegressor.min_samples_split=20, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=1.0)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.7500000000000001, GradientBoostingRegressor.min_samples_leaf=11, GradientBoostingRegressor.min_samples_split=11, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9500000000000001)", "GradientBoostingRegressor(SelectPercentile(data, SelectPercentile.percentile=94, SelectPercentile.score_func=f_regression), GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.45, GradientBoostingRegressor.min_samples_leaf=11, GradientBoostingRegressor.min_samples_split=11, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=1.0)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.45, GradientBoostingRegressor.min_samples_leaf=11, GradientBoostingRegressor.min_samples_split=20, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=1.0)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.7500000000000001, GradientBoostingRegressor.min_samples_leaf=11, GradientBoostingRegressor.min_samples_split=11, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=7, GradientBoostingRegressor.max_features=0.7500000000000001, GradientBoostingRegressor.min_samples_leaf=11, GradientBoostingRegressor.min_samples_split=11, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9500000000000001)", "GradientBoostingRegressor(StandardScaler(data), GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.7000000000000001, GradientBoostingRegressor.min_samples_leaf=10, GradientBoostingRegressor.min_samples_split=20, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.7500000000000001, GradientBoostingRegressor.min_samples_leaf=11, GradientBoostingRegressor.min_samples_split=11, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9500000000000001)", "GradientBoostingRegressor(StandardScaler(data), GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.7000000000000001, GradientBoostingRegressor.min_samples_leaf=11, GradientBoostingRegressor.min_samples_split=20, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.6000000000000001), GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=7, GradientBoostingRegressor.max_features=0.7500000000000001, GradientBoostingRegressor.min_samples_leaf=11, GradientBoostingRegressor.min_samples_split=11, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9500000000000001)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7500000000000001, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=14, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectFwe(data, SelectFwe.alpha=0.023, SelectFwe.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7500000000000001, RandomForestRegressor.min_samples_leaf=6, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7500000000000001, RandomForestRegressor.min_samples_leaf=6, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7500000000000001, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7500000000000001, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=16, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectFwe(data, SelectFwe.alpha=0.018000000000000002, SelectFwe.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7500000000000001, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=16, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7500000000000001, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=10, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7500000000000001, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=16, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7500000000000001, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=11, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectFwe(data, SelectFwe.alpha=0.028, SelectFwe.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7500000000000001, RandomForestRegressor.min_samples_leaf=6, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7500000000000001, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=15, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(StandardScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.8, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=13, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.9000000000000001, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7000000000000001, RandomForestRegressor.min_samples_leaf=4, RandomForestRegressor.min_samples_split=15, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=1.0), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7000000000000001, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=15, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=1.0), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7000000000000001, RandomForestRegressor.min_samples_leaf=4, RandomForestRegressor.min_samples_split=15, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7500000000000001, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=16, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7500000000000001, RandomForestRegressor.min_samples_leaf=4, RandomForestRegressor.min_samples_split=15, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.1), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7500000000000001, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=11, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.8, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=13, RandomForestRegressor.n_estimators=100)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.9500000000000001, GradientBoostingRegressor.min_samples_leaf=15, GradientBoostingRegressor.min_samples_split=17, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=1.0, GradientBoostingRegressor.min_samples_leaf=15, GradientBoostingRegressor.min_samples_split=17, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.9500000000000001, GradientBoostingRegressor.min_samples_leaf=15, GradientBoostingRegressor.min_samples_split=17, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.9500000000000001, GradientBoostingRegressor.min_samples_leaf=10, GradientBoostingRegressor.min_samples_split=17, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(MinMaxScaler(data), GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.9500000000000001, GradientBoostingRegressor.min_samples_leaf=15, GradientBoostingRegressor.min_samples_split=17, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.9500000000000001, GradientBoostingRegressor.min_samples_leaf=15, GradientBoostingRegressor.min_samples_split=17, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=15, GradientBoostingRegressor.min_samples_split=17, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.6500000000000001, GradientBoostingRegressor.min_samples_leaf=18, GradientBoostingRegressor.min_samples_split=18, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=6, GradientBoostingRegressor.max_features=0.7000000000000001, GradientBoostingRegressor.min_samples_leaf=18, GradientBoostingRegressor.min_samples_split=15, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.6000000000000001), GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=6, GradientBoostingRegressor.max_features=0.7500000000000001, GradientBoostingRegressor.min_samples_leaf=18, GradientBoostingRegressor.min_samples_split=17, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=1.0, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=1.0, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=1.0, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=9, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.8, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=16, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.05), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=1.0, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7000000000000001, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=16, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7500000000000001, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=16, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.8, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=9, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.8, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=18, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.8, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=20, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7000000000000001, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=15, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7000000000000001, RandomForestRegressor.min_samples_leaf=4, RandomForestRegressor.min_samples_split=15, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.6500000000000001), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7500000000000001, RandomForestRegressor.min_samples_leaf=7, RandomForestRegressor.min_samples_split=7, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.6500000000000001), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7500000000000001, RandomForestRegressor.min_samples_leaf=7, RandomForestRegressor.min_samples_split=15, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7500000000000001, RandomForestRegressor.min_samples_leaf=7, RandomForestRegressor.min_samples_split=6, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.6500000000000001), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7500000000000001, RandomForestRegressor.min_samples_leaf=7, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.6500000000000001), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7500000000000001, RandomForestRegressor.min_samples_leaf=7, RandomForestRegressor.min_samples_split=10, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.6500000000000001), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7500000000000001, RandomForestRegressor.min_samples_leaf=7, RandomForestRegressor.min_samples_split=6, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.3), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7500000000000001, RandomForestRegressor.min_samples_leaf=7, RandomForestRegressor.min_samples_split=15, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7000000000000001, RandomForestRegressor.min_samples_leaf=6, RandomForestRegressor.min_samples_split=6, RandomForestRegressor.n_estimators=100)"], "house_prices_nominal": ["GradientBoostingRegressor(SelectPercentile(data, SelectPercentile.percentile=64, SelectPercentile.score_func=f_regression), GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=4, GradientBoostingRegressor.max_features=0.6000000000000001, GradientBoostingRegressor.min_samples_leaf=18, GradientBoostingRegressor.min_samples_split=3, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(MinMaxScaler(data), GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=4, GradientBoostingRegressor.max_features=0.45, GradientBoostingRegressor.min_samples_leaf=18, GradientBoostingRegressor.min_samples_split=12, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.7000000000000001)", "GradientBoostingRegressor(StandardScaler(data), GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=4, GradientBoostingRegressor.max_features=0.45, GradientBoostingRegressor.min_samples_leaf=18, GradientBoostingRegressor.min_samples_split=10, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.5)", "GradientBoostingRegressor(SelectPercentile(data, SelectPercentile.percentile=64, SelectPercentile.score_func=f_regression), GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=4, GradientBoostingRegressor.max_features=0.45, GradientBoostingRegressor.min_samples_leaf=18, GradientBoostingRegressor.min_samples_split=3, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.45, GradientBoostingRegressor.min_samples_leaf=18, GradientBoostingRegressor.min_samples_split=12, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.7000000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=4, GradientBoostingRegressor.max_features=0.7500000000000001, GradientBoostingRegressor.min_samples_leaf=18, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.5)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=4, GradientBoostingRegressor.max_features=0.9500000000000001, GradientBoostingRegressor.min_samples_leaf=18, GradientBoostingRegressor.min_samples_split=12, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.7000000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=4, GradientBoostingRegressor.max_features=0.45, GradientBoostingRegressor.min_samples_leaf=18, GradientBoostingRegressor.min_samples_split=12, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.5)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=4, GradientBoostingRegressor.max_features=0.9500000000000001, GradientBoostingRegressor.min_samples_leaf=18, GradientBoostingRegressor.min_samples_split=19, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.5)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=4, GradientBoostingRegressor.max_features=0.7000000000000001, GradientBoostingRegressor.min_samples_leaf=13, GradientBoostingRegressor.min_samples_split=13, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.5)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.3, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=8, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=7, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(StandardScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(StandardScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.3, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=6, RandomForestRegressor.n_estimators=100)", "GradientBoostingRegressor(MaxAbsScaler(data), GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.8, GradientBoostingRegressor.min_samples_leaf=20, GradientBoostingRegressor.min_samples_split=2, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.35000000000000003)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=6, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(MaxAbsScaler(data)), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=6, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.3, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=6, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.1), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.3, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=6, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.35000000000000003, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=6, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(SelectPercentile(data, SelectPercentile.percentile=18, SelectPercentile.score_func=f_regression)), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=6, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(StandardScaler(data), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.3, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(StandardScaler(data), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=7, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.4), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.3, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=9, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(StandardScaler(data), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.3, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=93, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.3, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=7, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.3, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(data), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.3, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=0.5, GradientBoostingRegressor.min_samples_leaf=2, GradientBoostingRegressor.min_samples_split=14, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(RobustScaler(data), GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=7, GradientBoostingRegressor.max_features=0.35000000000000003, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=19, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=0.35000000000000003, GradientBoostingRegressor.min_samples_leaf=2, GradientBoostingRegressor.min_samples_split=8, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=3, GradientBoostingRegressor.max_features=0.35000000000000003, GradientBoostingRegressor.min_samples_leaf=2, GradientBoostingRegressor.min_samples_split=5, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9500000000000001)", "GradientBoostingRegressor(StandardScaler(data), GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=3, GradientBoostingRegressor.max_features=0.35000000000000003, GradientBoostingRegressor.min_samples_leaf=2, GradientBoostingRegressor.min_samples_split=5, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=0.35000000000000003, GradientBoostingRegressor.min_samples_leaf=2, GradientBoostingRegressor.min_samples_split=2, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=4, GradientBoostingRegressor.max_features=0.35000000000000003, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=4, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=0.5, GradientBoostingRegressor.min_samples_leaf=2, GradientBoostingRegressor.min_samples_split=2, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=3, GradientBoostingRegressor.max_features=0.9000000000000001, GradientBoostingRegressor.min_samples_leaf=2, GradientBoostingRegressor.min_samples_split=5, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(StandardScaler(data), GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=3, GradientBoostingRegressor.max_features=0.35000000000000003, GradientBoostingRegressor.min_samples_leaf=2, GradientBoostingRegressor.min_samples_split=2, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "RandomForestRegressor(StandardScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=7, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.05), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(StandardScaler(data)), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=7, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(StandardScaler(StandardScaler(data)), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=7, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=6, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.05), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=8, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=0.15000000000000002, GradientBoostingRegressor.min_samples_leaf=10, GradientBoostingRegressor.min_samples_split=20, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.4)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=7, GradientBoostingRegressor.max_features=0.35000000000000003, GradientBoostingRegressor.min_samples_leaf=12, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.3)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=0.3, GradientBoostingRegressor.min_samples_leaf=10, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.4)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=0.25, GradientBoostingRegressor.min_samples_leaf=10, GradientBoostingRegressor.min_samples_split=6, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.3)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=0.15000000000000002, GradientBoostingRegressor.min_samples_leaf=10, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.4)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=7, GradientBoostingRegressor.max_features=0.7500000000000001, GradientBoostingRegressor.min_samples_leaf=12, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.3)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=0.25, GradientBoostingRegressor.min_samples_leaf=9, GradientBoostingRegressor.min_samples_split=6, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.3)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.7500000000000001, GradientBoostingRegressor.min_samples_leaf=12, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.4)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=0.5, GradientBoostingRegressor.min_samples_leaf=10, GradientBoostingRegressor.min_samples_split=20, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.3)", "GradientBoostingRegressor(StandardScaler(data), GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=0.6000000000000001, GradientBoostingRegressor.min_samples_leaf=10, GradientBoostingRegressor.min_samples_split=6, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.3)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=6, GradientBoostingRegressor.max_features=0.25, GradientBoostingRegressor.min_samples_leaf=2, GradientBoostingRegressor.min_samples_split=6, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6000000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=6, GradientBoostingRegressor.max_features=0.25, GradientBoostingRegressor.min_samples_leaf=2, GradientBoostingRegressor.min_samples_split=6, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6000000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=6, GradientBoostingRegressor.max_features=0.25, GradientBoostingRegressor.min_samples_leaf=2, GradientBoostingRegressor.min_samples_split=20, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=1.0)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.25, GradientBoostingRegressor.min_samples_leaf=2, GradientBoostingRegressor.min_samples_split=20, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6000000000000001)", "GradientBoostingRegressor(SelectPercentile(data, SelectPercentile.percentile=62, SelectPercentile.score_func=f_regression), GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=6, GradientBoostingRegressor.max_features=0.25, GradientBoostingRegressor.min_samples_leaf=2, GradientBoostingRegressor.min_samples_split=20, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=1.0)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.25, GradientBoostingRegressor.min_samples_leaf=2, GradientBoostingRegressor.min_samples_split=18, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6000000000000001)", "GradientBoostingRegressor(StandardScaler(StandardScaler(data)), GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=6, GradientBoostingRegressor.max_features=0.25, GradientBoostingRegressor.min_samples_leaf=2, GradientBoostingRegressor.min_samples_split=20, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6000000000000001)", "GradientBoostingRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.2), GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=0.4, GradientBoostingRegressor.min_samples_leaf=2, GradientBoostingRegressor.min_samples_split=20, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6000000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=0.25, GradientBoostingRegressor.min_samples_leaf=2, GradientBoostingRegressor.min_samples_split=12, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=1.0)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=0.25, GradientBoostingRegressor.min_samples_leaf=2, GradientBoostingRegressor.min_samples_split=20, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.5)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.3, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=7, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=91, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.3, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=6, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=8, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectFwe(data, SelectFwe.alpha=0.036000000000000004, SelectFwe.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.3, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.3, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.35000000000000003, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=6, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.3, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.3, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(StandardScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.3, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=8, RandomForestRegressor.n_estimators=100)"], "yprop_4_1": ["ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=5, ExtraTreesRegressor.min_samples_split=14, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.45, ExtraTreesRegressor.min_samples_leaf=5, ExtraTreesRegressor.min_samples_split=14, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=5, ExtraTreesRegressor.min_samples_split=5, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.25, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=14, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(StandardScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=5, ExtraTreesRegressor.min_samples_split=14, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RobustScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7000000000000001, ExtraTreesRegressor.min_samples_leaf=5, ExtraTreesRegressor.min_samples_split=8, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7000000000000001, ExtraTreesRegressor.min_samples_leaf=5, ExtraTreesRegressor.min_samples_split=5, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MaxAbsScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7000000000000001, ExtraTreesRegressor.min_samples_leaf=5, ExtraTreesRegressor.min_samples_split=8, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MinMaxScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.15000000000000002, ExtraTreesRegressor.min_samples_leaf=5, ExtraTreesRegressor.min_samples_split=8, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.2, ExtraTreesRegressor.min_samples_leaf=5, ExtraTreesRegressor.min_samples_split=14, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.2, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(Normalizer(data, Normalizer.norm='max'), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.8500000000000001, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MinMaxScaler(data), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.4, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MinMaxScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.4, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(StandardScaler(Normalizer(data, Normalizer.norm='max')), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.4, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(Normalizer(data, Normalizer.norm='max'), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.4, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.4, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=20, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.4, ExtraTreesRegressor.min_samples_leaf=5, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.4, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.4, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=14, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.05, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=8, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=15, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.05, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=8, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.35000000000000003, ExtraTreesRegressor.min_samples_leaf=7, ExtraTreesRegressor.min_samples_split=15, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MaxAbsScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.9000000000000001, ExtraTreesRegressor.min_samples_leaf=7, ExtraTreesRegressor.min_samples_split=13, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.9000000000000001, ExtraTreesRegressor.min_samples_leaf=7, ExtraTreesRegressor.min_samples_split=13, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=10, ExtraTreesRegressor.min_samples_split=7, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(StandardScaler(data)), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.05, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=8, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.9000000000000001, ExtraTreesRegressor.min_samples_leaf=10, ExtraTreesRegressor.min_samples_split=14, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MaxAbsScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.35000000000000003, ExtraTreesRegressor.min_samples_leaf=7, ExtraTreesRegressor.min_samples_split=15, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RobustScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.25, ExtraTreesRegressor.min_samples_leaf=4, ExtraTreesRegressor.min_samples_split=15, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.55, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=15, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RobustScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.55, ExtraTreesRegressor.min_samples_leaf=5, ExtraTreesRegressor.min_samples_split=15, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.8500000000000001, ExtraTreesRegressor.min_samples_leaf=4, ExtraTreesRegressor.min_samples_split=20, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RobustScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.55, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=19, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.45, ExtraTreesRegressor.min_samples_leaf=4, ExtraTreesRegressor.min_samples_split=20, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MaxAbsScaler(MaxAbsScaler(data)), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.8500000000000001, ExtraTreesRegressor.min_samples_leaf=4, ExtraTreesRegressor.min_samples_split=15, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.55, ExtraTreesRegressor.min_samples_leaf=4, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RobustScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.3, ExtraTreesRegressor.min_samples_leaf=6, ExtraTreesRegressor.min_samples_split=9, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.55, ExtraTreesRegressor.min_samples_leaf=4, ExtraTreesRegressor.min_samples_split=15, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MaxAbsScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.4, ExtraTreesRegressor.min_samples_leaf=6, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=7, ExtraTreesRegressor.min_samples_split=6, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(StandardScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.4, ExtraTreesRegressor.min_samples_leaf=7, ExtraTreesRegressor.min_samples_split=6, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.4, ExtraTreesRegressor.min_samples_leaf=6, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=7, ExtraTreesRegressor.min_samples_split=15, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(StandardScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=5, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectPercentile(MinMaxScaler(data), SelectPercentile.percentile=97, SelectPercentile.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.3, ExtraTreesRegressor.min_samples_leaf=7, ExtraTreesRegressor.min_samples_split=15, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.8500000000000001, ExtraTreesRegressor.min_samples_leaf=6, ExtraTreesRegressor.min_samples_split=13, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6500000000000001, ExtraTreesRegressor.min_samples_leaf=6, ExtraTreesRegressor.min_samples_split=5, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(StandardScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=7, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(StandardScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.2, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.2, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=13, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(StandardScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.2, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=13, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(StandardScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.2, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.2, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=8, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RobustScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.2, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=13, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.2, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=14, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.2, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.2, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(StandardScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.4, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=13, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=19, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.05, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=7, ExtraTreesRegressor.min_samples_split=19, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=7, ExtraTreesRegressor.min_samples_split=7, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(Normalizer(data, Normalizer.norm='max'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=19, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(Normalizer(data, Normalizer.norm='l1'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.3, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=19, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.05, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(MaxAbsScaler(MinMaxScaler(data)), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=19, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RobustScaler(MinMaxScaler(data)), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=19, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.35000000000000003, ExtraTreesRegressor.min_samples_leaf=7, ExtraTreesRegressor.min_samples_split=7, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=19, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MaxAbsScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=18, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MaxAbsScaler(data), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=12, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.7000000000000001, ExtraTreesRegressor.min_samples_leaf=5, ExtraTreesRegressor.min_samples_split=11, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MaxAbsScaler(data), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=11, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MaxAbsScaler(data), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=11, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.7000000000000001, ExtraTreesRegressor.min_samples_leaf=4, ExtraTreesRegressor.min_samples_split=11, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MaxAbsScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=19, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.7000000000000001, ExtraTreesRegressor.min_samples_leaf=5, ExtraTreesRegressor.min_samples_split=19, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MaxAbsScaler(RobustScaler(data)), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=19, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.1, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(data), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.3, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(data), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.35000000000000003, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=13, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(data), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.3, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.35000000000000003, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(data), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.3, RandomForestRegressor.min_samples_leaf=4, RandomForestRegressor.min_samples_split=7, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=13, ExtraTreesRegressor.min_samples_split=7, ExtraTreesRegressor.n_estimators=100)"], "elevators": ["GradientBoostingRegressor(FastICA(data, FastICA.tol=0.25, FastICA.whiten='unit-variance'), GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.9500000000000001, GradientBoostingRegressor.min_samples_leaf=20, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=4, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.9500000000000001, GradientBoostingRegressor.min_samples_leaf=20, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "RandomForestRegressor(FastICA(data, FastICA.tol=0.1, FastICA.whiten='unit-variance'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=9, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(FastICA(data, FastICA.tol=0.4, FastICA.whiten='unit-variance'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=9, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(FastICA(data, FastICA.tol=0.1, FastICA.whiten='unit-variance'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(FastICA(data, FastICA.tol=0.1, FastICA.whiten='unit-variance'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=6, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(FastICA(data, FastICA.tol=0.30000000000000004, FastICA.whiten='unit-variance'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=1.0, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(FastICA(data, FastICA.tol=0.4, FastICA.whiten='unit-variance'), VarianceThreshold.threshold=0.3), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=9, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(FastICA(data, FastICA.tol=0.4, FastICA.whiten='unit-variance'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=16, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(FastICA(data, FastICA.tol=0.1, FastICA.whiten='unit-variance'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=20, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(FastICA(data, FastICA.tol=0.35000000000000003, FastICA.whiten='unit-variance'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6000000000000001, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=9, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(FastICA(data, FastICA.tol=0.35000000000000003, FastICA.whiten='unit-variance'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6000000000000001, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=10, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(FastICA(data, FastICA.tol=0.35000000000000003, FastICA.whiten='unit-variance'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6000000000000001, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=10, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(FastICA(data, FastICA.tol=0.15000000000000002, FastICA.whiten='unit-variance'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.5, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(FastICA(data, FastICA.tol=0.35000000000000003, FastICA.whiten='unit-variance'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.6000000000000001, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=10, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(FastICA(data, FastICA.tol=0.35000000000000003, FastICA.whiten='unit-variance'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=20, ExtraTreesRegressor.n_estimators=100)", "GradientBoostingRegressor(FastICA(data, FastICA.tol=0.35000000000000003, FastICA.whiten='unit-variance'), GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=4, GradientBoostingRegressor.max_features=0.35000000000000003, GradientBoostingRegressor.min_samples_leaf=13, GradientBoostingRegressor.min_samples_split=18, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.5)", "ExtraTreesRegressor(PCA(data, PCA.iterated_power=7, PCA.svd_solver='randomized'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=6, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PCA(data, PCA.iterated_power=10, PCA.svd_solver='randomized'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=6, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=7, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(FastICA(MinMaxScaler(data), FastICA.tol=0.05, FastICA.whiten='unit-variance'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(StandardScaler(data), PCA.iterated_power=9, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=9, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(FastICA(data, FastICA.tol=0.7000000000000001, FastICA.whiten='unit-variance'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=6, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(data, PCA.iterated_power=9, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "LassoLarsCV(StandardScaler(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False)), LassoLarsCV.normalize=False)", "RandomForestRegressor(PCA(data, PCA.iterated_power=10, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), PCA.iterated_power=5, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(data, PCA.iterated_power=7, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=1.0, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(data, PCA.iterated_power=9, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=9, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(MaxAbsScaler(FastICA(data, FastICA.tol=0.45, FastICA.whiten='unit-variance')), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=7, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(FastICA(data, FastICA.tol=0.30000000000000004, FastICA.whiten='unit-variance'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=7, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PCA(data, PCA.iterated_power=3, PCA.svd_solver='randomized'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=7, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MaxAbsScaler(FastICA(data, FastICA.tol=0.30000000000000004, FastICA.whiten='unit-variance')), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=7, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(FastICA(data, FastICA.tol=0.30000000000000004, FastICA.whiten='unit-variance'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=7, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(FastICA(data, FastICA.tol=0.35000000000000003, FastICA.whiten='unit-variance'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=7, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PCA(data, PCA.iterated_power=3, PCA.svd_solver='randomized'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=7, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(FastICA(data, FastICA.tol=0.30000000000000004, FastICA.whiten='unit-variance'), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=7, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(FastICA(data, FastICA.tol=0.0, FastICA.whiten='unit-variance'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=7, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MinMaxScaler(FastICA(data, FastICA.tol=0.0, FastICA.whiten='unit-variance')), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=7, ExtraTreesRegressor.n_estimators=100)", "GradientBoostingRegressor(FastICA(StandardScaler(data), FastICA.tol=0.1, FastICA.whiten='unit-variance'), GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=7, GradientBoostingRegressor.max_features=0.3, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=6, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.4)", "GradientBoostingRegressor(MaxAbsScaler(FastICA(data, FastICA.tol=0.65, FastICA.whiten='unit-variance')), GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.6000000000000001, GradientBoostingRegressor.min_samples_leaf=15, GradientBoostingRegressor.min_samples_split=8, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.35000000000000003)", "GradientBoostingRegressor(FastICA(data, FastICA.tol=0.65, FastICA.whiten='unit-variance'), GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.6000000000000001, GradientBoostingRegressor.min_samples_leaf=15, GradientBoostingRegressor.min_samples_split=8, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.35000000000000003)", "GradientBoostingRegressor(FastICA(data, FastICA.tol=0.4, FastICA.whiten='unit-variance'), GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=7, GradientBoostingRegressor.max_features=0.3, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=6, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.35000000000000003)", "GradientBoostingRegressor(FastICA(data, FastICA.tol=0.4, FastICA.whiten='unit-variance'), GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.35000000000000003, GradientBoostingRegressor.min_samples_leaf=7, GradientBoostingRegressor.min_samples_split=14, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.5)", "GradientBoostingRegressor(FastICA(data, FastICA.tol=0.65, FastICA.whiten='unit-variance'), GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.6000000000000001, GradientBoostingRegressor.min_samples_leaf=12, GradientBoostingRegressor.min_samples_split=8, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.35000000000000003)", "GradientBoostingRegressor(FastICA(MinMaxScaler(data), FastICA.tol=0.65, FastICA.whiten='unit-variance'), GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.6000000000000001, GradientBoostingRegressor.min_samples_leaf=15, GradientBoostingRegressor.min_samples_split=8, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.35000000000000003)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=9, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='absolute_error', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.9000000000000001, GradientBoostingRegressor.min_samples_leaf=14, GradientBoostingRegressor.min_samples_split=17, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.35000000000000003)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=9, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='absolute_error', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.6000000000000001, GradientBoostingRegressor.min_samples_leaf=14, GradientBoostingRegressor.min_samples_split=13, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=9, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='absolute_error', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.6000000000000001, GradientBoostingRegressor.min_samples_leaf=14, GradientBoostingRegressor.min_samples_split=17, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=7, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.4, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=10, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.4, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.3)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.4, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.3)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=7, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.4, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=1.0, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=19, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=1.0, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=19, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.7500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.4, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=20, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(StandardScaler(PCA(data, PCA.iterated_power=7, PCA.svd_solver='randomized')), GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.4, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.4, GradientBoostingRegressor.min_samples_leaf=6, GradientBoostingRegressor.min_samples_split=20, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.4, GradientBoostingRegressor.min_samples_leaf=5, GradientBoostingRegressor.min_samples_split=20, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(PCA(StandardScaler(data), PCA.iterated_power=8, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=10, GradientBoostingRegressor.min_samples_split=5, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=10, GradientBoostingRegressor.min_samples_split=5, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.25)", "GradientBoostingRegressor(PCA(StandardScaler(data), PCA.iterated_power=5, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=10, GradientBoostingRegressor.min_samples_split=5, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=10, GradientBoostingRegressor.min_samples_split=5, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=7, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=10, GradientBoostingRegressor.min_samples_split=5, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=5, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=10, GradientBoostingRegressor.min_samples_split=5, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=7, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=10, GradientBoostingRegressor.min_samples_split=12, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=10, GradientBoostingRegressor.min_samples_split=5, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.25)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=7, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=10, GradientBoostingRegressor.min_samples_split=5, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.25)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=7, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=5, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.25)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=5, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.7500000000000001, GradientBoostingRegressor.min_samples_leaf=13, GradientBoostingRegressor.min_samples_split=18, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.4)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.7500000000000001, GradientBoostingRegressor.min_samples_leaf=13, GradientBoostingRegressor.min_samples_split=18, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.4)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=5, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=13, GradientBoostingRegressor.min_samples_split=18, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.4)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=5, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.7500000000000001, GradientBoostingRegressor.min_samples_leaf=13, GradientBoostingRegressor.min_samples_split=6, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.4)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=5, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.7500000000000001, GradientBoostingRegressor.min_samples_leaf=13, GradientBoostingRegressor.min_samples_split=18, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.4)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=4, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.7500000000000001, GradientBoostingRegressor.min_samples_leaf=13, GradientBoostingRegressor.min_samples_split=18, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.4)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=4, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=6, GradientBoostingRegressor.min_samples_split=18, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.5)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=5, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=6, GradientBoostingRegressor.min_samples_split=6, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.5)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=4, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=6, GradientBoostingRegressor.min_samples_split=3, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.5)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=0.9500000000000001, GradientBoostingRegressor.min_samples_leaf=20, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "RandomForestRegressor(FastICA(data, FastICA.tol=0.15000000000000002, FastICA.whiten='unit-variance'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6000000000000001, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=17, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(FastICA(data, FastICA.tol=0.15000000000000002, FastICA.whiten='unit-variance'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=14, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(FastICA(data, FastICA.tol=0.5, FastICA.whiten='unit-variance'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6000000000000001, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=17, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(FastICA(data, FastICA.tol=0.15000000000000002, FastICA.whiten='unit-variance'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.6000000000000001, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=17, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(FastICA(data, FastICA.tol=0.55, FastICA.whiten='unit-variance'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=14, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(FastICA(data, FastICA.tol=0.5, FastICA.whiten='unit-variance'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=11, RandomForestRegressor.min_samples_split=12, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(FastICA(data, FastICA.tol=0.5, FastICA.whiten='unit-variance'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.35000000000000003, RandomForestRegressor.min_samples_leaf=9, RandomForestRegressor.min_samples_split=12, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(FastICA(data, FastICA.tol=0.5, FastICA.whiten='unit-variance'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.5, RandomForestRegressor.min_samples_leaf=11, RandomForestRegressor.min_samples_split=12, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(FastICA(data, FastICA.tol=0.15000000000000002, FastICA.whiten='unit-variance'), Normalizer.norm='l2'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=14, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(FastICA(data, FastICA.tol=0.5, FastICA.whiten='unit-variance'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.35000000000000003, RandomForestRegressor.min_samples_leaf=11, RandomForestRegressor.min_samples_split=12, RandomForestRegressor.n_estimators=100)"], "quake": ["ExtraTreesRegressor(PolynomialFeatures(SelectPercentile(data, SelectPercentile.percentile=87, SelectPercentile.score_func=f_regression), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.25, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectPercentile(data, SelectPercentile.percentile=99, SelectPercentile.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.45, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=6, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(FastICA(data, FastICA.tol=0.0, FastICA.whiten='unit-variance'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.2, ExtraTreesRegressor.min_samples_leaf=4, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(FastICA(SelectPercentile(data, SelectPercentile.percentile=87, SelectPercentile.score_func=f_regression), FastICA.tol=0.8500000000000001, FastICA.whiten='unit-variance'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.25, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectPercentile(data, SelectPercentile.percentile=82, SelectPercentile.score_func=f_regression), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.25, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=5, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(FastICA(data, FastICA.tol=0.6000000000000001, FastICA.whiten='unit-variance'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.45, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=7, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(FastICA(data, FastICA.tol=0.4, FastICA.whiten='unit-variance'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.1, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=11, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(Nystroem(data, Nystroem.gamma=0.2, Nystroem.kernel='linear', Nystroem.n_components=2), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.2, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(FastICA(data, FastICA.tol=0.75, FastICA.whiten='unit-variance'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=5, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectPercentile(data, SelectPercentile.percentile=82, SelectPercentile.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.2, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(FastICA(data, FastICA.tol=0.65, FastICA.whiten='unit-variance'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.1, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=8, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(FastICA(data, FastICA.tol=0.05, FastICA.whiten='unit-variance'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.05, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=6, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(FastICA(data, FastICA.tol=0.8500000000000001, FastICA.whiten='unit-variance'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.15000000000000002, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(FastICA(data, FastICA.tol=0.15000000000000002, FastICA.whiten='unit-variance'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.1, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=6, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(FastICA(data, FastICA.tol=0.8, FastICA.whiten='unit-variance'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.05, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=8, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(FastICA(data, FastICA.tol=0.6000000000000001, FastICA.whiten='unit-variance'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.1, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=5, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(FastICA(data, FastICA.tol=0.05, FastICA.whiten='unit-variance'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.1, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(FastICA(data, FastICA.tol=0.9, FastICA.whiten='unit-variance'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(FastICA(data, FastICA.tol=0.0, FastICA.whiten='unit-variance'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.3, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=8, ExtraTreesRegressor.n_estimators=100)", "AdaBoostRegressor(FastICA(MaxAbsScaler(data), FastICA.tol=0.9, FastICA.whiten='unit-variance'), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='square', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(RobustScaler(FastICA(data, FastICA.tol=0.15000000000000002, FastICA.whiten='unit-variance')), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='exponential', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(FastICA(data, FastICA.tol=1.0, FastICA.whiten='unit-variance'), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='exponential', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(PCA(FastICA(data, FastICA.tol=0.15000000000000002, FastICA.whiten='unit-variance'), PCA.iterated_power=6, PCA.svd_solver='randomized'), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='exponential', AdaBoostRegressor.n_estimators=100)", "ExtraTreesRegressor(FastICA(data, FastICA.tol=0.1, FastICA.whiten='unit-variance'), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.2, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=8, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.05, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.2, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=16, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(FastICA(data, FastICA.tol=0.9, FastICA.whiten='unit-variance'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=17, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(FastICA(data, FastICA.tol=0.2, FastICA.whiten='unit-variance'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6500000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=12, ExtraTreesRegressor.n_estimators=100)", "AdaBoostRegressor(FastICA(FastICA(data, FastICA.tol=0.9, FastICA.whiten='unit-variance'), FastICA.tol=0.2, FastICA.whiten='unit-variance'), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='exponential', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(Nystroem(data, Nystroem.gamma=0.45, Nystroem.kernel='cosine', Nystroem.n_components=6), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='square', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(Nystroem(data, Nystroem.gamma=0.75, Nystroem.kernel='cosine', Nystroem.n_components=6), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='exponential', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='cosine', Nystroem.n_components=5), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='square', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(FastICA(data, FastICA.tol=0.4, FastICA.whiten='unit-variance'), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='linear', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(SelectPercentile(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='cosine', Nystroem.n_components=5), SelectPercentile.percentile=82, SelectPercentile.score_func=f_regression), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='square', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='cosine', Nystroem.n_components=6), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='square', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='cosine', Nystroem.n_components=5), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='exponential', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(Nystroem(data, Nystroem.gamma=0.75, Nystroem.kernel='cosine', Nystroem.n_components=6), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='square', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(FastICA(data, FastICA.tol=0.9500000000000001, FastICA.whiten='unit-variance'), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='square', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(Nystroem(MaxAbsScaler(data), Nystroem.gamma=0.7000000000000001, Nystroem.kernel='cosine', Nystroem.n_components=5), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='exponential', AdaBoostRegressor.n_estimators=100)", "ExtraTreesRegressor(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.05, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RBFSampler(data, RBFSampler.gamma=1.0), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.05, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(Nystroem(data, Nystroem.gamma=0.8500000000000001, Nystroem.kernel='polynomial', Nystroem.n_components=3), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RBFSampler(data, RBFSampler.gamma=1.0), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.05, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.05, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=11, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.05, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.05, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=11, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RBFSampler(data, RBFSampler.gamma=0.1), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.05, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=6, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RBFSampler(data, RBFSampler.gamma=0.9), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.05, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.25, ExtraTreesRegressor.min_samples_leaf=5, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RBFSampler(data, RBFSampler.gamma=0.25), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.1, ExtraTreesRegressor.min_samples_leaf=5, ExtraTreesRegressor.min_samples_split=10, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RBFSampler(data, RBFSampler.gamma=0.9), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.6500000000000001, ExtraTreesRegressor.min_samples_leaf=4, ExtraTreesRegressor.min_samples_split=9, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RBFSampler(data, RBFSampler.gamma=1.0), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.6500000000000001, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=15, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RBFSampler(data, RBFSampler.gamma=0.55), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.1, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=9, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RBFSampler(data, RBFSampler.gamma=0.65), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6500000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=14, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RBFSampler(data, RBFSampler.gamma=0.5), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.3, ExtraTreesRegressor.min_samples_leaf=5, ExtraTreesRegressor.min_samples_split=17, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.6500000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=14, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.35000000000000003, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=15, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.4), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.35000000000000003, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=15, ExtraTreesRegressor.n_estimators=100)", "AdaBoostRegressor(Nystroem(data, Nystroem.gamma=0.9, Nystroem.kernel='cosine', Nystroem.n_components=2), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='linear', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(Nystroem(data, Nystroem.gamma=0.2, Nystroem.kernel='cosine', Nystroem.n_components=2), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='square', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(Nystroem(data, Nystroem.gamma=0.9, Nystroem.kernel='cosine', Nystroem.n_components=9), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='linear', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(Nystroem(VarianceThreshold(data, VarianceThreshold.threshold=0.3), Nystroem.gamma=0.9, Nystroem.kernel='cosine', Nystroem.n_components=8), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='linear', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(Nystroem(data, Nystroem.gamma=0.2, Nystroem.kernel='cosine', Nystroem.n_components=2), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='linear', AdaBoostRegressor.n_estimators=100)", "DecisionTreeRegressor(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='cosine', Nystroem.n_components=6), DecisionTreeRegressor.max_depth=2, DecisionTreeRegressor.min_samples_leaf=7, DecisionTreeRegressor.min_samples_split=2)", "AdaBoostRegressor(MinMaxScaler(Nystroem(data, Nystroem.gamma=0.30000000000000004, Nystroem.kernel='cosine', Nystroem.n_components=9)), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='linear', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(MinMaxScaler(Nystroem(data, Nystroem.gamma=0.05, Nystroem.kernel='cosine', Nystroem.n_components=6)), AdaBoostRegressor.learning_rate=0.01, AdaBoostRegressor.loss='exponential', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(RBFSampler(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='cosine', Nystroem.n_components=8), RBFSampler.gamma=0.6000000000000001), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='exponential', AdaBoostRegressor.n_estimators=100)", "AdaBoostRegressor(Nystroem(data, Nystroem.gamma=0.8500000000000001, Nystroem.kernel='cosine', Nystroem.n_components=8), AdaBoostRegressor.learning_rate=0.01, AdaBoostRegressor.loss='exponential', AdaBoostRegressor.n_estimators=100)", "ExtraTreesRegressor(FastICA(data, FastICA.tol=0.2, FastICA.whiten='unit-variance'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6500000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=16, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(VarianceThreshold(FastICA(data, FastICA.tol=0.0, FastICA.whiten='unit-variance'), VarianceThreshold.threshold=0.6000000000000001), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.15000000000000002, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=18, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(FastICA(data, FastICA.tol=0.5, FastICA.whiten='unit-variance'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.25, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=8, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(FastICA(data, FastICA.tol=0.8500000000000001, FastICA.whiten='unit-variance'), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.6500000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=16, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.15000000000000002, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=7, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(FastICA(data, FastICA.tol=0.75, FastICA.whiten='unit-variance'), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.05, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=7, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(FastICA(data, FastICA.tol=0.75, FastICA.whiten='unit-variance'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.15000000000000002, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=8, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(FastICA(data, FastICA.tol=0.6000000000000001, FastICA.whiten='unit-variance'), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.15000000000000002, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=7, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(FastICA(data, FastICA.tol=0.0, FastICA.whiten='unit-variance'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6500000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=7, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(FastICA(data, FastICA.tol=0.15000000000000002, FastICA.whiten='unit-variance'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.05, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=6, ExtraTreesRegressor.n_estimators=100)", "KNeighborsRegressor(FastICA(Nystroem(data, Nystroem.gamma=0.55, Nystroem.kernel='polynomial', Nystroem.n_components=3), FastICA.tol=0.8500000000000001, FastICA.whiten='unit-variance'), KNeighborsRegressor.n_neighbors=97, KNeighborsRegressor.p=1, KNeighborsRegressor.weights='distance')", "KNeighborsRegressor(FastICA(Nystroem(data, Nystroem.gamma=0.9500000000000001, Nystroem.kernel='poly', Nystroem.n_components=3), FastICA.tol=0.1, FastICA.whiten='unit-variance'), KNeighborsRegressor.n_neighbors=97, KNeighborsRegressor.p=1, KNeighborsRegressor.weights='distance')", "KNeighborsRegressor(FastICA(Nystroem(data, Nystroem.gamma=0.30000000000000004, Nystroem.kernel='polynomial', Nystroem.n_components=3), FastICA.tol=0.9, FastICA.whiten='unit-variance'), KNeighborsRegressor.n_neighbors=97, KNeighborsRegressor.p=2, KNeighborsRegressor.weights='distance')", "KNeighborsRegressor(Nystroem(data, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='polynomial', Nystroem.n_components=3), KNeighborsRegressor.n_neighbors=69, KNeighborsRegressor.p=1, KNeighborsRegressor.weights='distance')", "KNeighborsRegressor(FastICA(Nystroem(data, Nystroem.gamma=0.9, Nystroem.kernel='polynomial', Nystroem.n_components=3), FastICA.tol=0.8500000000000001, FastICA.whiten='unit-variance'), KNeighborsRegressor.n_neighbors=98, KNeighborsRegressor.p=1, KNeighborsRegressor.weights='distance')", "KNeighborsRegressor(Nystroem(data, Nystroem.gamma=0.65, Nystroem.kernel='polynomial', Nystroem.n_components=3), KNeighborsRegressor.n_neighbors=100, KNeighborsRegressor.p=1, KNeighborsRegressor.weights='distance')", "KNeighborsRegressor(FastICA(Nystroem(data, Nystroem.gamma=0.9500000000000001, Nystroem.kernel='polynomial', Nystroem.n_components=4), FastICA.tol=0.7000000000000001, FastICA.whiten='unit-variance'), KNeighborsRegressor.n_neighbors=97, KNeighborsRegressor.p=1, KNeighborsRegressor.weights='distance')", "KNeighborsRegressor(FastICA(Nystroem(data, Nystroem.gamma=0.9500000000000001, Nystroem.kernel='polynomial', Nystroem.n_components=4), FastICA.tol=0.8500000000000001, FastICA.whiten='unit-variance'), KNeighborsRegressor.n_neighbors=97, KNeighborsRegressor.p=1, KNeighborsRegressor.weights='distance')", "KNeighborsRegressor(Nystroem(data, Nystroem.gamma=0.55, Nystroem.kernel='poly', Nystroem.n_components=3), KNeighborsRegressor.n_neighbors=93, KNeighborsRegressor.p=1, KNeighborsRegressor.weights='distance')", "KNeighborsRegressor(Nystroem(VarianceThreshold(data, VarianceThreshold.threshold=0.7000000000000001), Nystroem.gamma=0.55, Nystroem.kernel='polynomial', Nystroem.n_components=3), KNeighborsRegressor.n_neighbors=97, KNeighborsRegressor.p=1, KNeighborsRegressor.weights='distance')"], "sensory": ["RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=91, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=12, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=12, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=91, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=6, RandomForestRegressor.min_samples_split=13, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.5, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=13, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=13, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=92, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.5, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=14, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=99, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.5, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=13, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.5, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=13, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=13, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.5, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=15, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=87, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7000000000000001, RandomForestRegressor.min_samples_leaf=7, RandomForestRegressor.min_samples_split=15, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=83, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=7, RandomForestRegressor.min_samples_split=16, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=89, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7000000000000001, RandomForestRegressor.min_samples_leaf=8, RandomForestRegressor.min_samples_split=19, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(StandardScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=7, RandomForestRegressor.min_samples_split=16, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=7, RandomForestRegressor.min_samples_split=16, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7000000000000001, RandomForestRegressor.min_samples_leaf=7, RandomForestRegressor.min_samples_split=15, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=87, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=7, RandomForestRegressor.min_samples_split=15, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=82, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7000000000000001, RandomForestRegressor.min_samples_leaf=7, RandomForestRegressor.min_samples_split=15, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=86, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7000000000000001, RandomForestRegressor.min_samples_leaf=8, RandomForestRegressor.min_samples_split=15, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=84, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=7, RandomForestRegressor.min_samples_split=16, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=57, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.5, RandomForestRegressor.min_samples_leaf=6, RandomForestRegressor.min_samples_split=12, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=55, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.5, RandomForestRegressor.min_samples_leaf=6, RandomForestRegressor.min_samples_split=12, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=57, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.5, RandomForestRegressor.min_samples_leaf=6, RandomForestRegressor.min_samples_split=7, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=56, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.5, RandomForestRegressor.min_samples_leaf=6, RandomForestRegressor.min_samples_split=12, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=55, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.5, RandomForestRegressor.min_samples_leaf=6, RandomForestRegressor.min_samples_split=7, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=56, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.5, RandomForestRegressor.min_samples_leaf=6, RandomForestRegressor.min_samples_split=10, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=53, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.5, RandomForestRegressor.min_samples_leaf=6, RandomForestRegressor.min_samples_split=7, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=58, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.5, RandomForestRegressor.min_samples_leaf=6, RandomForestRegressor.min_samples_split=10, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=58, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.5, RandomForestRegressor.min_samples_leaf=6, RandomForestRegressor.min_samples_split=12, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=57, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.5, RandomForestRegressor.min_samples_leaf=6, RandomForestRegressor.min_samples_split=10, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.55, ExtraTreesRegressor.min_samples_leaf=7, ExtraTreesRegressor.min_samples_split=10, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.05), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.55, ExtraTreesRegressor.min_samples_leaf=7, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.55, ExtraTreesRegressor.min_samples_leaf=7, ExtraTreesRegressor.min_samples_split=6, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.55, ExtraTreesRegressor.min_samples_leaf=7, ExtraTreesRegressor.min_samples_split=9, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6500000000000001, ExtraTreesRegressor.min_samples_leaf=7, ExtraTreesRegressor.min_samples_split=6, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6500000000000001, ExtraTreesRegressor.min_samples_leaf=7, ExtraTreesRegressor.min_samples_split=8, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.05), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6500000000000001, ExtraTreesRegressor.min_samples_leaf=7, ExtraTreesRegressor.min_samples_split=6, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.55, ExtraTreesRegressor.min_samples_leaf=7, ExtraTreesRegressor.min_samples_split=8, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=7, ExtraTreesRegressor.min_samples_split=8, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=7, ExtraTreesRegressor.min_samples_split=6, ExtraTreesRegressor.n_estimators=100)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=7, GradientBoostingRegressor.max_features=0.45, GradientBoostingRegressor.min_samples_leaf=20, GradientBoostingRegressor.min_samples_split=14, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=1.0)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=7, GradientBoostingRegressor.max_features=0.35000000000000003, GradientBoostingRegressor.min_samples_leaf=20, GradientBoostingRegressor.min_samples_split=11, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=1.0)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=4, GradientBoostingRegressor.max_features=0.35000000000000003, GradientBoostingRegressor.min_samples_leaf=20, GradientBoostingRegressor.min_samples_split=4, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=1.0)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=7, GradientBoostingRegressor.max_features=0.3, GradientBoostingRegressor.min_samples_leaf=20, GradientBoostingRegressor.min_samples_split=14, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=1.0)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=7, GradientBoostingRegressor.max_features=0.3, GradientBoostingRegressor.min_samples_leaf=20, GradientBoostingRegressor.min_samples_split=14, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=1.0)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=7, GradientBoostingRegressor.max_features=0.35000000000000003, GradientBoostingRegressor.min_samples_leaf=20, GradientBoostingRegressor.min_samples_split=4, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=1.0)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=7, GradientBoostingRegressor.max_features=0.45, GradientBoostingRegressor.min_samples_leaf=20, GradientBoostingRegressor.min_samples_split=14, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=1.0)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=7, GradientBoostingRegressor.max_features=0.25, GradientBoostingRegressor.min_samples_leaf=20, GradientBoostingRegressor.min_samples_split=5, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=1.0)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=7, GradientBoostingRegressor.max_features=0.3, GradientBoostingRegressor.min_samples_leaf=20, GradientBoostingRegressor.min_samples_split=8, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=1.0)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=7, GradientBoostingRegressor.max_features=0.45, GradientBoostingRegressor.min_samples_leaf=20, GradientBoostingRegressor.min_samples_split=4, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=1.0)", "RandomForestRegressor(PolynomialFeatures(RobustScaler(data), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=7, RandomForestRegressor.min_samples_split=9, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(StandardScaler(SelectPercentile(data, SelectPercentile.percentile=72, SelectPercentile.score_func=f_regression)), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=8, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PolynomialFeatures(RobustScaler(data), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.4, RandomForestRegressor.min_samples_leaf=6, RandomForestRegressor.min_samples_split=9, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=73, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PolynomialFeatures(Normalizer(data, Normalizer.norm='l2'), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=7, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=72, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=8, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=72, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.4, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=9, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=73, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=9, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=74, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=6, RandomForestRegressor.min_samples_split=9, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=73, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=92, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=12, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=12, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=12, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=8, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=93, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=12, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=95, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.5, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.5, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=12, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=96, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.5, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=12, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=57, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6000000000000001, RandomForestRegressor.min_samples_leaf=7, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectPercentile(data, SelectPercentile.percentile=57, SelectPercentile.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.55, ExtraTreesRegressor.min_samples_leaf=6, ExtraTreesRegressor.min_samples_split=12, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=60, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=7, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectPercentile(data, SelectPercentile.percentile=58, SelectPercentile.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.55, ExtraTreesRegressor.min_samples_leaf=6, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectPercentile(data, SelectPercentile.percentile=53, SelectPercentile.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=6, ExtraTreesRegressor.min_samples_split=7, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectPercentile(data, SelectPercentile.percentile=59, SelectPercentile.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.55, ExtraTreesRegressor.min_samples_leaf=7, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=57, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6000000000000001, RandomForestRegressor.min_samples_leaf=7, RandomForestRegressor.min_samples_split=6, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=59, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6000000000000001, RandomForestRegressor.min_samples_leaf=7, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectPercentile(data, SelectPercentile.percentile=55, SelectPercentile.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=6, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=55, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=7, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=89, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=4, RandomForestRegressor.min_samples_split=9, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=93, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=4, RandomForestRegressor.min_samples_split=11, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=4, RandomForestRegressor.min_samples_split=11, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=4, RandomForestRegressor.min_samples_split=11, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=4, RandomForestRegressor.min_samples_split=10, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=84, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=4, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=84, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=4, RandomForestRegressor.min_samples_split=11, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=87, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=4, RandomForestRegressor.min_samples_split=10, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=4, RandomForestRegressor.min_samples_split=9, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=90, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=4, RandomForestRegressor.min_samples_split=9, RandomForestRegressor.n_estimators=100)"], "house_16H": ["ExtraTreesRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=5, ExtraTreesRegressor.min_samples_split=8, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.8500000000000001, ExtraTreesRegressor.min_samples_leaf=5, ExtraTreesRegressor.min_samples_split=8, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.9000000000000001, ExtraTreesRegressor.min_samples_leaf=5, ExtraTreesRegressor.min_samples_split=8, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.8500000000000001, ExtraTreesRegressor.min_samples_leaf=5, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.9000000000000001, GradientBoostingRegressor.min_samples_leaf=20, GradientBoostingRegressor.min_samples_split=13, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9000000000000001)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=8, RandomForestRegressor.min_samples_split=14, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.8500000000000001, ExtraTreesRegressor.min_samples_leaf=5, ExtraTreesRegressor.min_samples_split=20, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(RobustScaler(data)), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=8, RandomForestRegressor.min_samples_split=14, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=8, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=8, RandomForestRegressor.min_samples_split=13, RandomForestRegressor.n_estimators=100)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.7500000000000001, GradientBoostingRegressor.min_samples_leaf=13, GradientBoostingRegressor.min_samples_split=18, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.5)", "GradientBoostingRegressor(MaxAbsScaler(data), GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.7500000000000001, GradientBoostingRegressor.min_samples_leaf=13, GradientBoostingRegressor.min_samples_split=18, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.4)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.7500000000000001, GradientBoostingRegressor.min_samples_leaf=13, GradientBoostingRegressor.min_samples_split=18, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.4)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=4, RandomForestRegressor.min_samples_split=6, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=4, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(StandardScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=4, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=7, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=12, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(StandardScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=7, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(StandardScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=7, RandomForestRegressor.min_samples_split=7, RandomForestRegressor.n_estimators=100)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.4, GradientBoostingRegressor.min_samples_leaf=13, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(MaxAbsScaler(data), GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.4, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=3, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.4, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=18, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6000000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.4, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(RobustScaler(data), GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.4, GradientBoostingRegressor.min_samples_leaf=2, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(MaxAbsScaler(data), GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.4, GradientBoostingRegressor.min_samples_leaf=2, GradientBoostingRegressor.min_samples_split=3, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.4, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6000000000000001)", "GradientBoostingRegressor(SelectFwe(data, SelectFwe.alpha=0.022, SelectFwe.score_func=f_regression), GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.4, GradientBoostingRegressor.min_samples_leaf=2, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(RobustScaler(data), GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.4, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(MaxAbsScaler(data), GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.4, GradientBoostingRegressor.min_samples_leaf=2, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(MinMaxScaler(data)), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=6, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=96, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.9000000000000001, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=19, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.5, RandomForestRegressor.min_samples_leaf=8, RandomForestRegressor.min_samples_split=9, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectFwe(data, SelectFwe.alpha=0.032, SelectFwe.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.5, RandomForestRegressor.min_samples_leaf=8, RandomForestRegressor.min_samples_split=9, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=7, RandomForestRegressor.min_samples_split=20, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7000000000000001, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=9, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(StandardScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7000000000000001, RandomForestRegressor.min_samples_leaf=7, RandomForestRegressor.min_samples_split=9, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7000000000000001, RandomForestRegressor.min_samples_leaf=7, RandomForestRegressor.min_samples_split=9, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7000000000000001, RandomForestRegressor.min_samples_leaf=7, RandomForestRegressor.min_samples_split=13, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=17, RandomForestRegressor.min_samples_split=11, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(StandardScaler(data), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=8, RandomForestRegressor.min_samples_split=11, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(StandardScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.4, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.35000000000000003, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(StandardScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.4, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=8, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.4, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectFwe(data, SelectFwe.alpha=0.039, SelectFwe.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.4, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectFwe(data, SelectFwe.alpha=0.023, SelectFwe.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.4, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.4, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=10, GradientBoostingRegressor.min_samples_split=13, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=6, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=6, RandomForestRegressor.min_samples_split=13, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=13, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "GradientBoostingRegressor(MaxAbsScaler(data), GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='quantile', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=10, GradientBoostingRegressor.min_samples_split=13, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "RandomForestRegressor(RobustScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=6, RandomForestRegressor.min_samples_split=13, RandomForestRegressor.n_estimators=100)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='quantile', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=10, GradientBoostingRegressor.min_samples_split=13, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=6, RandomForestRegressor.min_samples_split=18, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.5, RandomForestRegressor.min_samples_leaf=6, RandomForestRegressor.min_samples_split=13, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=6, RandomForestRegressor.min_samples_split=13, RandomForestRegressor.n_estimators=100)", "GradientBoostingRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.25, GradientBoostingRegressor.min_samples_leaf=20, GradientBoostingRegressor.min_samples_split=4, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(PolynomialFeatures(MinMaxScaler(data), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.25, GradientBoostingRegressor.min_samples_leaf=20, GradientBoostingRegressor.min_samples_split=4, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.25, GradientBoostingRegressor.min_samples_leaf=20, GradientBoostingRegressor.min_samples_split=4, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.05, GradientBoostingRegressor.min_samples_leaf=20, GradientBoostingRegressor.min_samples_split=4, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.25, GradientBoostingRegressor.min_samples_leaf=20, GradientBoostingRegressor.min_samples_split=4, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "ExtraTreesRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(StandardScaler(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False)), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7000000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=4, RandomForestRegressor.min_samples_split=9, RandomForestRegressor.n_estimators=100)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.5, GradientBoostingRegressor.min_samples_leaf=8, GradientBoostingRegressor.min_samples_split=17, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.7500000000000001)", "GradientBoostingRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.5, GradientBoostingRegressor.min_samples_leaf=8, GradientBoostingRegressor.min_samples_split=17, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.45)", "GradientBoostingRegressor(StandardScaler(data), GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.6500000000000001, GradientBoostingRegressor.min_samples_leaf=8, GradientBoostingRegressor.min_samples_split=17, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.9000000000000001, GradientBoostingRegressor.min_samples_leaf=8, GradientBoostingRegressor.min_samples_split=17, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.7500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.5, GradientBoostingRegressor.min_samples_leaf=8, GradientBoostingRegressor.min_samples_split=2, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.45)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.5, GradientBoostingRegressor.min_samples_leaf=8, GradientBoostingRegressor.min_samples_split=17, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.55)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.6500000000000001, GradientBoostingRegressor.min_samples_leaf=8, GradientBoostingRegressor.min_samples_split=17, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.55)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.5, GradientBoostingRegressor.min_samples_leaf=8, GradientBoostingRegressor.min_samples_split=17, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.7500000000000001)", "GradientBoostingRegressor(MaxAbsScaler(data), GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.45, GradientBoostingRegressor.min_samples_leaf=8, GradientBoostingRegressor.min_samples_split=17, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.55)", "GradientBoostingRegressor(StandardScaler(data), GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.6500000000000001, GradientBoostingRegressor.min_samples_leaf=13, GradientBoostingRegressor.min_samples_split=17, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.55)"], "QSAR-TID-10980": [], "socmob": ["ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.05, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.05, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.45, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.15000000000000002), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.05, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(data, SelectFwe.alpha=0.029, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.15000000000000002, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RobustScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.05, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MinMaxScaler(data), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.2, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.2, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(data, SelectFwe.alpha=0.027, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.45, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=6, GradientBoostingRegressor.max_features=0.9000000000000001, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=5, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='quantile', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.9000000000000001, GradientBoostingRegressor.min_samples_leaf=1, GradientBoostingRegressor.min_samples_split=10, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9000000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.55, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9000000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='quantile', GradientBoostingRegressor.max_depth=6, GradientBoostingRegressor.max_features=0.9000000000000001, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=13, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9000000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=6, GradientBoostingRegressor.max_features=0.9000000000000001, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=8, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9000000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=6, GradientBoostingRegressor.max_features=0.9000000000000001, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9000000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='quantile', GradientBoostingRegressor.max_depth=6, GradientBoostingRegressor.max_features=0.9000000000000001, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9000000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=6, GradientBoostingRegressor.max_features=0.7500000000000001, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=2, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9000000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=6, GradientBoostingRegressor.max_features=0.9000000000000001, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=5, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9000000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=6, GradientBoostingRegressor.max_features=0.9000000000000001, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=4, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9000000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.8, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=20, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.9500000000000001, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=10, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.8, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=10, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=1.0)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=7, GradientBoostingRegressor.max_features=0.8, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=5, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(MinMaxScaler(data), GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.8, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=17, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.8, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=19, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=6, GradientBoostingRegressor.max_features=0.7500000000000001, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=7, GradientBoostingRegressor.max_features=0.7000000000000001, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(SelectFwe(data, SelectFwe.alpha=0.048, SelectFwe.score_func=f_regression), GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=7, GradientBoostingRegressor.max_features=0.8, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9000000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=6, GradientBoostingRegressor.max_features=0.4, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=1, GradientBoostingRegressor.min_samples_split=16, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=1, GradientBoostingRegressor.min_samples_split=12, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=7, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=1, GradientBoostingRegressor.min_samples_split=13, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=1, GradientBoostingRegressor.min_samples_split=13, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9500000000000001)", "GradientBoostingRegressor(RobustScaler(data), GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=7, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=1, GradientBoostingRegressor.min_samples_split=13, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=1, GradientBoostingRegressor.min_samples_split=13, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=1, GradientBoostingRegressor.min_samples_split=20, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=1, GradientBoostingRegressor.min_samples_split=18, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=2, GradientBoostingRegressor.min_samples_split=16, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=1, GradientBoostingRegressor.min_samples_split=20, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.8), GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='quantile', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=1.0, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=16, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='quantile', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.6500000000000001, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=16, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.6000000000000001, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=20, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='quantile', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.6000000000000001, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=16, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9500000000000001)", "GradientBoostingRegressor(MinMaxScaler(data), GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='quantile', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.6000000000000001, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=19, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=7, GradientBoostingRegressor.max_features=0.3, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=12, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.4)", "GradientBoostingRegressor(RobustScaler(data), GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='quantile', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.6000000000000001, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=19, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.6500000000000001, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=16, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(MinMaxScaler(data), GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=7, GradientBoostingRegressor.max_features=0.3, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=12, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.4)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='quantile', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=1.0, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=16, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9500000000000001)", "GradientBoostingRegressor(SelectFwe(data, SelectFwe.alpha=0.048, SelectFwe.score_func=f_regression), GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.6000000000000001, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=12, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9500000000000001)", "GradientBoostingRegressor(MinMaxScaler(data), GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.7500000000000001, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=6, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.7500000000000001, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=9, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.6000000000000001, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=12, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.7500000000000001, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=19, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.7500000000000001, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=9, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=6, GradientBoostingRegressor.max_features=0.7500000000000001, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=12, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.7500000000000001, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=9, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.7000000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.7500000000000001, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=9, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(SelectFwe(data, SelectFwe.alpha=0.028, SelectFwe.score_func=f_regression), GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.6000000000000001, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=16, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MinMaxScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MaxAbsScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(StandardScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(data, SelectFwe.alpha=0.039, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.9000000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.8500000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(data, SelectFwe.alpha=0.003, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RobustScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(data, SelectFwe.alpha=0.012, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)", "GradientBoostingRegressor(RobustScaler(data), GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.6500000000000001, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=13, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.6500000000000001, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=12, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.6500000000000001, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=12, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.9500000000000001, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=12, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9500000000000001)", "GradientBoostingRegressor(MaxAbsScaler(data), GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.6500000000000001, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=16, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.7000000000000001, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9500000000000001)", "GradientBoostingRegressor(MaxAbsScaler(data), GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=6, GradientBoostingRegressor.max_features=0.7000000000000001, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=12, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.8, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=12, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.7000000000000001, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=12, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.4, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=12, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9500000000000001)", "GradientBoostingRegressor(MaxAbsScaler(data), GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.35000000000000003, GradientBoostingRegressor.min_samples_leaf=1, GradientBoostingRegressor.min_samples_split=8, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.35000000000000003)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.05, GradientBoostingRegressor.min_samples_leaf=1, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.35000000000000003)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=7, GradientBoostingRegressor.max_features=0.05, GradientBoostingRegressor.min_samples_leaf=1, GradientBoostingRegressor.min_samples_split=15, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.35000000000000003)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.05, GradientBoostingRegressor.min_samples_leaf=1, GradientBoostingRegressor.min_samples_split=20, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.4)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.05, GradientBoostingRegressor.min_samples_leaf=1, GradientBoostingRegressor.min_samples_split=4, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.35000000000000003)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.05, GradientBoostingRegressor.min_samples_leaf=1, GradientBoostingRegressor.min_samples_split=4, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.35000000000000003)", "GradientBoostingRegressor(StandardScaler(data), GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.2, GradientBoostingRegressor.min_samples_leaf=1, GradientBoostingRegressor.min_samples_split=12, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.35000000000000003)", "GradientBoostingRegressor(SelectFwe(data, SelectFwe.alpha=0.014, SelectFwe.score_func=f_regression), GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.05, GradientBoostingRegressor.min_samples_leaf=1, GradientBoostingRegressor.min_samples_split=19, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.35000000000000003)", "GradientBoostingRegressor(SelectFwe(data, SelectFwe.alpha=0.033, SelectFwe.score_func=f_regression), GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.05, GradientBoostingRegressor.min_samples_leaf=1, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.35000000000000003)", "GradientBoostingRegressor(SelectFwe(data, SelectFwe.alpha=0.025, SelectFwe.score_func=f_regression), GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.2, GradientBoostingRegressor.min_samples_leaf=1, GradientBoostingRegressor.min_samples_split=20, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.35000000000000003)"], "space_ga": ["GradientBoostingRegressor(PCA(data, PCA.iterated_power=4, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.6000000000000001, GradientBoostingRegressor.min_samples_leaf=11, GradientBoostingRegressor.min_samples_split=2, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "RandomForestRegressor(PolynomialFeatures(PCA(data, PCA.iterated_power=4, PCA.svd_solver='randomized'), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.35000000000000003, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=7, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PolynomialFeatures(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.35000000000000003, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PolynomialFeatures(PCA(data, PCA.iterated_power=7, PCA.svd_solver='randomized'), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.35000000000000003, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(VarianceThreshold(data, VarianceThreshold.threshold=0.6000000000000001), PCA.iterated_power=4, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.7500000000000001, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), PCA.iterated_power=8, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.7500000000000001, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(PCA(data, PCA.iterated_power=10, PCA.svd_solver='randomized'), PCA.iterated_power=8, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.8, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.7500000000000001, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(data, PCA.iterated_power=5, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6000000000000001, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(data, PCA.iterated_power=4, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=6, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PolynomialFeatures(PCA(data, PCA.iterated_power=10, PCA.svd_solver='randomized'), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PolynomialFeatures(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized'), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.6000000000000001, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PolynomialFeatures(PCA(data, PCA.iterated_power=4, PCA.svd_solver='randomized'), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.5, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=6, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(data, PCA.iterated_power=5, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.5, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PolynomialFeatures(PCA(data, PCA.iterated_power=3, PCA.svd_solver='randomized'), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.5, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PolynomialFeatures(PCA(data, PCA.iterated_power=10, PCA.svd_solver='randomized'), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.5, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PolynomialFeatures(PCA(data, PCA.iterated_power=10, PCA.svd_solver='randomized'), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.5, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PolynomialFeatures(PCA(data, PCA.iterated_power=7, PCA.svd_solver='randomized'), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.6000000000000001, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(data, PCA.iterated_power=7, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.7500000000000001, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.7500000000000001, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.8, GradientBoostingRegressor.min_samples_leaf=11, GradientBoostingRegressor.min_samples_split=2, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9000000000000001)", "GradientBoostingRegressor(PCA(PCA(data, PCA.iterated_power=10, PCA.svd_solver='randomized'), PCA.iterated_power=3, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.8, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=12, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.8, GradientBoostingRegressor.min_samples_leaf=6, GradientBoostingRegressor.min_samples_split=15, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.8, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=12, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=9, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.8, GradientBoostingRegressor.min_samples_leaf=11, GradientBoostingRegressor.min_samples_split=2, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9000000000000001)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.8, GradientBoostingRegressor.min_samples_leaf=11, GradientBoostingRegressor.min_samples_split=2, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.8, GradientBoostingRegressor.min_samples_leaf=11, GradientBoostingRegressor.min_samples_split=13, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9000000000000001)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=7, GradientBoostingRegressor.max_features=0.8, GradientBoostingRegressor.min_samples_leaf=11, GradientBoostingRegressor.min_samples_split=2, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(PCA(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized'), PCA.iterated_power=8, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.8, GradientBoostingRegressor.min_samples_leaf=6, GradientBoostingRegressor.min_samples_split=13, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.8, GradientBoostingRegressor.min_samples_leaf=11, GradientBoostingRegressor.min_samples_split=13, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.6000000000000001, GradientBoostingRegressor.min_samples_leaf=7, GradientBoostingRegressor.min_samples_split=6, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.8, GradientBoostingRegressor.min_samples_leaf=7, GradientBoostingRegressor.min_samples_split=6, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.7500000000000001)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=5, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.6000000000000001, GradientBoostingRegressor.min_samples_leaf=7, GradientBoostingRegressor.min_samples_split=4, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.6000000000000001, GradientBoostingRegressor.min_samples_leaf=7, GradientBoostingRegressor.min_samples_split=4, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=4, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.8, GradientBoostingRegressor.min_samples_leaf=7, GradientBoostingRegressor.min_samples_split=11, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=7, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.6000000000000001, GradientBoostingRegressor.min_samples_leaf=7, GradientBoostingRegressor.min_samples_split=14, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.6000000000000001, GradientBoostingRegressor.min_samples_leaf=7, GradientBoostingRegressor.min_samples_split=4, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=9, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.8, GradientBoostingRegressor.min_samples_leaf=7, GradientBoostingRegressor.min_samples_split=4, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.7500000000000001)", "GradientBoostingRegressor(MaxAbsScaler(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized')), GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.8, GradientBoostingRegressor.min_samples_leaf=7, GradientBoostingRegressor.min_samples_split=4, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.8, GradientBoostingRegressor.min_samples_leaf=7, GradientBoostingRegressor.min_samples_split=14, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "ExtraTreesRegressor(PolynomialFeatures(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PolynomialFeatures(PCA(data, PCA.iterated_power=7, PCA.svd_solver='randomized'), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PCA(data, PCA.iterated_power=7, PCA.svd_solver='randomized'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PCA(data, PCA.iterated_power=4, PCA.svd_solver='randomized'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PolynomialFeatures(PCA(data, PCA.iterated_power=10, PCA.svd_solver='randomized'), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PCA(VarianceThreshold(data, VarianceThreshold.threshold=0.9500000000000001), PCA.iterated_power=7, PCA.svd_solver='randomized'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PCA(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized'), PCA.iterated_power=7, PCA.svd_solver='randomized'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PCA(data, PCA.iterated_power=3, PCA.svd_solver='randomized'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PolynomialFeatures(PCA(data, PCA.iterated_power=5, PCA.svd_solver='randomized'), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=9, GradientBoostingRegressor.min_samples_split=13, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.7000000000000001)", "GradientBoostingRegressor(StandardScaler(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized')), GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=9, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.7000000000000001)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=4, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=7, GradientBoostingRegressor.min_samples_split=13, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.7000000000000001)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=9, GradientBoostingRegressor.min_samples_split=13, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.7000000000000001)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=9, GradientBoostingRegressor.min_samples_split=20, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.7000000000000001)", "GradientBoostingRegressor(PCA(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized'), PCA.iterated_power=4, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=8, GradientBoostingRegressor.min_samples_split=20, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.7000000000000001)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=9, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=9, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.55)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=4, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.55, GradientBoostingRegressor.min_samples_leaf=9, GradientBoostingRegressor.min_samples_split=14, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.7000000000000001)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=4, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=9, GradientBoostingRegressor.min_samples_split=13, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.7000000000000001)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=9, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=1, GradientBoostingRegressor.min_samples_split=20, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.7000000000000001)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=5, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=8, GradientBoostingRegressor.min_samples_split=11, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6000000000000001)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=5, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=13, GradientBoostingRegressor.min_samples_split=18, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.7000000000000001)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=9, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=7, GradientBoostingRegressor.max_features=0.5, GradientBoostingRegressor.min_samples_leaf=10, GradientBoostingRegressor.min_samples_split=13, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=10, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=7, GradientBoostingRegressor.max_features=0.5, GradientBoostingRegressor.min_samples_leaf=10, GradientBoostingRegressor.min_samples_split=13, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=3, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=8, GradientBoostingRegressor.min_samples_split=20, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=7, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=13, GradientBoostingRegressor.min_samples_split=6, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6000000000000001)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=13, GradientBoostingRegressor.min_samples_split=2, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6000000000000001)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=10, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.5, GradientBoostingRegressor.min_samples_leaf=10, GradientBoostingRegressor.min_samples_split=13, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9000000000000001)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=5, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=17, GradientBoostingRegressor.min_samples_split=2, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.7000000000000001)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=4, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=6, GradientBoostingRegressor.min_samples_split=20, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6000000000000001)", "GradientBoostingRegressor(PCA(SelectFwe(data, SelectFwe.alpha=0.006, SelectFwe.score_func=f_regression), PCA.iterated_power=7, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.6000000000000001, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=14, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.55)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=4, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.6500000000000001, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=17, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=1.0)", "GradientBoostingRegressor(MinMaxScaler(PCA(data, PCA.iterated_power=7, PCA.svd_solver='randomized')), GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=1.0, GradientBoostingRegressor.min_samples_leaf=11, GradientBoostingRegressor.min_samples_split=12, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.55)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=7, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=1.0, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=12, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.55)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=4, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.6500000000000001, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=12, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=1.0)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=1.0, GradientBoostingRegressor.min_samples_leaf=9, GradientBoostingRegressor.min_samples_split=12, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.55)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.6500000000000001, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=12, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=1.0)", "GradientBoostingRegressor(MinMaxScaler(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized')), GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.6500000000000001, GradientBoostingRegressor.min_samples_leaf=6, GradientBoostingRegressor.min_samples_split=12, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.55)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=4, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.6500000000000001, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=12, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=1.0)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=1.0, GradientBoostingRegressor.min_samples_leaf=3, GradientBoostingRegressor.min_samples_split=12, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.55)", "GradientBoostingRegressor(RobustScaler(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized')), GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.8, GradientBoostingRegressor.min_samples_leaf=8, GradientBoostingRegressor.min_samples_split=11, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=3, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.8, GradientBoostingRegressor.min_samples_leaf=1, GradientBoostingRegressor.min_samples_split=11, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(MinMaxScaler(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized')), GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.8, GradientBoostingRegressor.min_samples_leaf=5, GradientBoostingRegressor.min_samples_split=11, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=5, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.8, GradientBoostingRegressor.min_samples_leaf=8, GradientBoostingRegressor.min_samples_split=11, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(PCA(VarianceThreshold(data, VarianceThreshold.threshold=0.15000000000000002), PCA.iterated_power=5, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.8, GradientBoostingRegressor.min_samples_leaf=8, GradientBoostingRegressor.min_samples_split=11, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.8, GradientBoostingRegressor.min_samples_leaf=8, GradientBoostingRegressor.min_samples_split=11, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=5, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.8, GradientBoostingRegressor.min_samples_leaf=1, GradientBoostingRegressor.min_samples_split=20, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(StandardScaler(PCA(data, PCA.iterated_power=5, PCA.svd_solver='randomized')), GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.8, GradientBoostingRegressor.min_samples_leaf=8, GradientBoostingRegressor.min_samples_split=11, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(PCA(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized'), PCA.iterated_power=6, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=6, GradientBoostingRegressor.max_features=0.8, GradientBoostingRegressor.min_samples_leaf=1, GradientBoostingRegressor.min_samples_split=11, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(PCA(data, PCA.iterated_power=5, PCA.svd_solver='randomized'), GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.8, GradientBoostingRegressor.min_samples_leaf=1, GradientBoostingRegressor.min_samples_split=11, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.55)"], "colleges": ["RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.15000000000000002), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.7000000000000001, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=13, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.15000000000000002), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.7000000000000001, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(data, PCA.iterated_power=1, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=4, RandomForestRegressor.min_samples_split=11, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(data, PCA.iterated_power=1, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=10, RandomForestRegressor.min_samples_split=14, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(data, PCA.iterated_power=1, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=4, RandomForestRegressor.min_samples_split=14, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(data, PCA.iterated_power=1, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=10, RandomForestRegressor.min_samples_split=14, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.15000000000000002), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.7000000000000001, RandomForestRegressor.min_samples_leaf=10, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(data, PCA.iterated_power=1, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7000000000000001, RandomForestRegressor.min_samples_leaf=14, RandomForestRegressor.min_samples_split=8, RandomForestRegressor.n_estimators=100)", "KNeighborsRegressor(MinMaxScaler(Normalizer(data, Normalizer.norm='l2')), KNeighborsRegressor.n_neighbors=29, KNeighborsRegressor.p=1, KNeighborsRegressor.weights='distance')", "RandomForestRegressor(PCA(data, PCA.iterated_power=1, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.7000000000000001, RandomForestRegressor.min_samples_leaf=14, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='l2'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='l2'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=14, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='l2'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=7, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='l2'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=16, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='l2'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=7, RandomForestRegressor.min_samples_split=13, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='l2'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=7, RandomForestRegressor.min_samples_split=14, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='l2'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=16, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(Normalizer(data, Normalizer.norm='l1'), Normalizer.norm='l2'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=7, RandomForestRegressor.min_samples_split=14, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='l2'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=6, RandomForestRegressor.min_samples_split=14, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='l2'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=14, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.05), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.1, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.05), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.1, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.05), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.05)), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.1, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.05), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.05), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.05), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.1, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=8, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.05), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.1, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.05), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.1, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.05), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=9, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='l2'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=13, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='l2'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=8, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='l2'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='l2'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.5, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=14, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='l2'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.5, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=14, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='l2'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6000000000000001, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='l2'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=13, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='l2'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.3, RandomForestRegressor.min_samples_leaf=11, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='l2'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=11, RandomForestRegressor.min_samples_split=13, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='l2'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=11, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "GradientBoostingRegressor(Normalizer(data, Normalizer.norm='l2'), GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.4, GradientBoostingRegressor.min_samples_leaf=8, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9500000000000001)", "GradientBoostingRegressor(Normalizer(Normalizer(data, Normalizer.norm='max'), Normalizer.norm='l2'), GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.4, GradientBoostingRegressor.min_samples_leaf=8, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9500000000000001)", "ExtraTreesRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.2), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.45, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=6, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='l2'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=7, RandomForestRegressor.min_samples_split=18, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='l2'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=7, RandomForestRegressor.min_samples_split=19, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='l2'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=7, RandomForestRegressor.min_samples_split=11, RandomForestRegressor.n_estimators=100)", "GradientBoostingRegressor(Normalizer(data, Normalizer.norm='l2'), GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.55, GradientBoostingRegressor.min_samples_leaf=10, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=1.0)", "GradientBoostingRegressor(Normalizer(data, Normalizer.norm='l2'), GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=17, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9500000000000001)", "GradientBoostingRegressor(Normalizer(data, Normalizer.norm='l2'), GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=10, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=1.0)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='l2'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=8, RandomForestRegressor.min_samples_split=18, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.05), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=9, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.05), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=9, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.05), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.55, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=8, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(StandardScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.05)), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.05), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=14, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.05), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.55, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=12, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.05), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=19, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.05), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.05), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=12, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.05), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.05), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.1, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.05), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.05), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=4, RandomForestRegressor.min_samples_split=6, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.05), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=6, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.05), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=7, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.05), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=6, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.05), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.05), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=16, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.05), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=6, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.05), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.05), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=7, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.05), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='l1'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(Normalizer(data, Normalizer.norm='l1'), Normalizer.norm='l1'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.05), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.7500000000000001, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=7, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='l1'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='l1'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='l2'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=17, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='l2'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=7, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.05), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='l2'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=12, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='l2'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='l2'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='l2'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.1, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=9, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='l2'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.1, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='l2'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.3, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=9, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='l2'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.1, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='l2'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='l2'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=7, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='l2'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=7, RandomForestRegressor.min_samples_split=12, RandomForestRegressor.n_estimators=100)"], "us_crime": ["ExtraTreesRegressor(RobustScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.4, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=6, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.4, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=5, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.4, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=6, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=5, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=5, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MaxAbsScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.35000000000000003, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=7, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=7, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MinMaxScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=5, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=13, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.35000000000000003, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=6, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RobustScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=8, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.8, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=6, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.45, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=6, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=8, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MaxAbsScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.8, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=5, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.8500000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=7, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.8500000000000001, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=5, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.8, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=6, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MaxAbsScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.8, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=7, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.9000000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=7, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.8500000000000001, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=9, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6500000000000001, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=6, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7000000000000001, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=6, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6500000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=7, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(data, SelectFwe.alpha=0.002, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.8500000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=9, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.55, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=6, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=6, ExtraTreesRegressor.n_estimators=100)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=6, GradientBoostingRegressor.max_features=0.3, GradientBoostingRegressor.min_samples_leaf=9, GradientBoostingRegressor.min_samples_split=6, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.7000000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=6, GradientBoostingRegressor.max_features=0.5, GradientBoostingRegressor.min_samples_leaf=9, GradientBoostingRegressor.min_samples_split=4, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.7000000000000001)", "GradientBoostingRegressor(StandardScaler(data), GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=4, GradientBoostingRegressor.max_features=0.3, GradientBoostingRegressor.min_samples_leaf=9, GradientBoostingRegressor.min_samples_split=10, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.7500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.3, GradientBoostingRegressor.min_samples_leaf=9, GradientBoostingRegressor.min_samples_split=6, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.7000000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=7, GradientBoostingRegressor.max_features=0.5, GradientBoostingRegressor.min_samples_leaf=13, GradientBoostingRegressor.min_samples_split=15, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.7000000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=4, GradientBoostingRegressor.max_features=0.7500000000000001, GradientBoostingRegressor.min_samples_leaf=9, GradientBoostingRegressor.min_samples_split=10, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.7500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=6, GradientBoostingRegressor.max_features=0.3, GradientBoostingRegressor.min_samples_leaf=9, GradientBoostingRegressor.min_samples_split=16, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.7000000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=0.5, GradientBoostingRegressor.min_samples_leaf=9, GradientBoostingRegressor.min_samples_split=3, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.7000000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.9500000000000001, GradientBoostingRegressor.min_samples_leaf=9, GradientBoostingRegressor.min_samples_split=6, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.7000000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=4, GradientBoostingRegressor.max_features=0.3, GradientBoostingRegressor.min_samples_leaf=9, GradientBoostingRegressor.min_samples_split=13, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.7000000000000001)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RobustScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.45, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=5, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.8, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=8, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.35000000000000003, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=11, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.35000000000000003, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=8, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.4, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.45, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=8, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.45, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=5, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.4, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=5, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=5, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.4, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=11, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(data, SelectFwe.alpha=0.048, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6500000000000001, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=12, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectPercentile(data, SelectPercentile.percentile=80, SelectPercentile.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(data, SelectFwe.alpha=0.034, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MaxAbsScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.35000000000000003, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=8, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RobustScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.8, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=12, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(data, SelectFwe.alpha=0.046, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.35000000000000003, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(data, SelectFwe.alpha=0.008, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=7, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(data, SelectFwe.alpha=0.037, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.4, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=7, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(data, SelectFwe.alpha=0.043000000000000003, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.9000000000000001, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=5, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(data, SelectFwe.alpha=0.032, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.9000000000000001, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=5, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(data, SelectFwe.alpha=0.048, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=5, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(data, SelectFwe.alpha=0.038, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.8500000000000001, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=5, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=5, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(data, SelectFwe.alpha=0.021, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=5, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7000000000000001, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=6, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7000000000000001, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(SelectFwe(data, SelectFwe.alpha=0.044, SelectFwe.score_func=f_regression), SelectFwe.alpha=0.036000000000000004, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=5, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(data, SelectFwe.alpha=0.023, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.9000000000000001, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=6, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(Normalizer(data, Normalizer.norm='l1')), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(Normalizer(data, Normalizer.norm='l1')), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=7, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='l1'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=4, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='l1'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=4, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(Normalizer(data, Normalizer.norm='l1')), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=4, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='l1'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=4, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(Normalizer(data, Normalizer.norm='l1')), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=12, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='l1'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=14, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(Normalizer(data, Normalizer.norm='l1')), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(StandardScaler(Normalizer(data, Normalizer.norm='l1')), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=10, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.4, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=6, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(data, SelectFwe.alpha=0.008, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.35000000000000003, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=5, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.55, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=13, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(data, SelectFwe.alpha=0.008, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(MinMaxScaler(data), SelectFwe.alpha=0.04, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=6, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7000000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=11, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(data, SelectFwe.alpha=0.03, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(StandardScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6500000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=9, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(data, SelectFwe.alpha=0.008, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)"], "Airlines_DepDelay_10M": ["LassoLarsCV(data, LassoLarsCV.normalize=True)", "ElasticNetCV(data, ElasticNetCV.l1_ratio=0.2, ElasticNetCV.tol=0.01)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=1, DecisionTreeRegressor.min_samples_leaf=11, DecisionTreeRegressor.min_samples_split=12)", "LinearSVR(RobustScaler(Binarizer(data, Binarizer.threshold=0.65)), LinearSVR.C=20.0, LinearSVR.dual=False, LinearSVR.epsilon=0.001, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.0001)", "LassoLarsCV(VarianceThreshold(data, VarianceThreshold.threshold=0.2), LassoLarsCV.normalize=True)", "LassoLarsCV(data, LassoLarsCV.normalize=False)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=3, DecisionTreeRegressor.min_samples_leaf=2, DecisionTreeRegressor.min_samples_split=15)", "LassoLarsCV(Normalizer(data, Normalizer.norm='max'), LassoLarsCV.normalize=False)", "LassoLarsCV(data, LassoLarsCV.normalize=False)", "LassoLarsCV(SelectFwe(data, SelectFwe.alpha=0.005, SelectFwe.score_func=f_regression), LassoLarsCV.normalize=True)", "LassoLarsCV(MinMaxScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.55)), LassoLarsCV.normalize=False)", "LassoLarsCV(MinMaxScaler(data), LassoLarsCV.normalize=False)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=3, DecisionTreeRegressor.min_samples_leaf=9, DecisionTreeRegressor.min_samples_split=20)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=1, DecisionTreeRegressor.min_samples_leaf=20, DecisionTreeRegressor.min_samples_split=6)", "LinearSVR(Binarizer(data, Binarizer.threshold=0.1), LinearSVR.C=25.0, LinearSVR.dual=False, LinearSVR.epsilon=0.0001, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.01)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=8, DecisionTreeRegressor.min_samples_leaf=15, DecisionTreeRegressor.min_samples_split=5)", "DecisionTreeRegressor(SelectFwe(data, SelectFwe.alpha=0.045, SelectFwe.score_func=f_regression), DecisionTreeRegressor.max_depth=7, DecisionTreeRegressor.min_samples_leaf=6, DecisionTreeRegressor.min_samples_split=7)", "LassoLarsCV(StandardScaler(data), LassoLarsCV.normalize=True)", "LinearSVR(Binarizer(data, Binarizer.threshold=0.8), LinearSVR.C=0.5, LinearSVR.dual=False, LinearSVR.epsilon=0.01, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.0001)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=6, DecisionTreeRegressor.min_samples_leaf=16, DecisionTreeRegressor.min_samples_split=19)", "LassoLarsCV(Binarizer(FastICA(data, FastICA.tol=0.2, FastICA.whiten='unit-variance'), Binarizer.threshold=0.5), LassoLarsCV.normalize=False)", "LassoLarsCV(MinMaxScaler(SelectPercentile(data, SelectPercentile.percentile=24, SelectPercentile.score_func=f_regression)), LassoLarsCV.normalize=True)", "LassoLarsCV(FastICA(SelectPercentile(data, SelectPercentile.percentile=11, SelectPercentile.score_func=f_regression), FastICA.tol=0.8500000000000001, FastICA.whiten='unit-variance'), LassoLarsCV.normalize=False)", "LassoLarsCV(Normalizer(data, Normalizer.norm='max'), LassoLarsCV.normalize=False)", "DecisionTreeRegressor(VarianceThreshold(StandardScaler(data), VarianceThreshold.threshold=0.3), DecisionTreeRegressor.max_depth=7, DecisionTreeRegressor.min_samples_leaf=19, DecisionTreeRegressor.min_samples_split=7)", "DecisionTreeRegressor(MaxAbsScaler(data), DecisionTreeRegressor.max_depth=5, DecisionTreeRegressor.min_samples_leaf=19, DecisionTreeRegressor.min_samples_split=14)", "LinearSVR(MaxAbsScaler(data), LinearSVR.C=0.001, LinearSVR.dual=False, LinearSVR.epsilon=0.001, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.0001)", "LassoLarsCV(data, LassoLarsCV.normalize=True)", "ElasticNetCV(RobustScaler(MaxAbsScaler(data)), ElasticNetCV.l1_ratio=0.30000000000000004, ElasticNetCV.tol=0.0001)", "LassoLarsCV(Normalizer(data, Normalizer.norm='max'), LassoLarsCV.normalize=True)", "LinearSVR(Normalizer(data, Normalizer.norm='l1'), LinearSVR.C=15.0, LinearSVR.dual=False, LinearSVR.epsilon=1.0, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.01)", "DecisionTreeRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.9000000000000001), DecisionTreeRegressor.max_depth=5, DecisionTreeRegressor.min_samples_leaf=19, DecisionTreeRegressor.min_samples_split=2)", "LassoLarsCV(MaxAbsScaler(data), LassoLarsCV.normalize=True)", "LinearSVR(RobustScaler(MaxAbsScaler(data)), LinearSVR.C=0.0001, LinearSVR.dual=False, LinearSVR.epsilon=1.0, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.0001)", "ElasticNetCV(data, ElasticNetCV.l1_ratio=0.8, ElasticNetCV.tol=0.0001)", "ElasticNetCV(SelectPercentile(data, SelectPercentile.percentile=72, SelectPercentile.score_func=f_regression), ElasticNetCV.l1_ratio=0.55, ElasticNetCV.tol=0.01)", "LinearSVR(data, LinearSVR.C=1.0, LinearSVR.dual=False, LinearSVR.epsilon=0.01, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.1)", "LassoLarsCV(Normalizer(SelectFwe(data, SelectFwe.alpha=0.027, SelectFwe.score_func=f_regression), Normalizer.norm='max'), LassoLarsCV.normalize=True)", "DecisionTreeRegressor(Normalizer(data, Normalizer.norm='l2'), DecisionTreeRegressor.max_depth=2, DecisionTreeRegressor.min_samples_leaf=15, DecisionTreeRegressor.min_samples_split=13)", "RandomForestRegressor(Nystroem(SelectFwe(data, SelectFwe.alpha=0.035, SelectFwe.score_func=f_regression), Nystroem.gamma=0.9, Nystroem.kernel='rbf', Nystroem.n_components=3), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6000000000000001, RandomForestRegressor.min_samples_leaf=7, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=8, DecisionTreeRegressor.min_samples_leaf=12, DecisionTreeRegressor.min_samples_split=17)", "LinearSVR(Normalizer(FastICA(data, FastICA.tol=0.8, FastICA.whiten='unit-variance'), Normalizer.norm='l2'), LinearSVR.C=0.001, LinearSVR.dual=False, LinearSVR.epsilon=0.01, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=1e-05)", "LassoLarsCV(data, LassoLarsCV.normalize=True)", "LassoLarsCV(data, LassoLarsCV.normalize=False)", "ElasticNetCV(data, ElasticNetCV.l1_ratio=0.7000000000000001, ElasticNetCV.tol=0.1)", "ElasticNetCV(data, ElasticNetCV.l1_ratio=0.65, ElasticNetCV.tol=0.01)", "ElasticNetCV(data, ElasticNetCV.l1_ratio=0.2, ElasticNetCV.tol=0.01)", "LinearSVR(data, LinearSVR.C=10.0, LinearSVR.dual=False, LinearSVR.epsilon=0.0001, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.001)", "LinearSVR(SelectFwe(data, SelectFwe.alpha=0.012, SelectFwe.score_func=f_regression), LinearSVR.C=1.0, LinearSVR.dual=False, LinearSVR.epsilon=1.0, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.001)", "LinearSVR(MinMaxScaler(data), LinearSVR.C=1.0, LinearSVR.dual=False, LinearSVR.epsilon=0.001, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.1)", "DecisionTreeRegressor(SelectPercentile(data, SelectPercentile.percentile=96, SelectPercentile.score_func=f_regression), DecisionTreeRegressor.max_depth=5, DecisionTreeRegressor.min_samples_leaf=4, DecisionTreeRegressor.min_samples_split=7)", "LassoLarsCV(Normalizer(StandardScaler(data), Normalizer.norm='l2'), LassoLarsCV.normalize=False)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=4, DecisionTreeRegressor.min_samples_leaf=18, DecisionTreeRegressor.min_samples_split=18)", "LassoLarsCV(data, LassoLarsCV.normalize=False)", "LassoLarsCV(data, LassoLarsCV.normalize=True)", "LassoLarsCV(RobustScaler(data), LassoLarsCV.normalize=False)", "DecisionTreeRegressor(RobustScaler(data), DecisionTreeRegressor.max_depth=1, DecisionTreeRegressor.min_samples_leaf=9, DecisionTreeRegressor.min_samples_split=2)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=1, DecisionTreeRegressor.min_samples_leaf=3, DecisionTreeRegressor.min_samples_split=7)", "LassoLarsCV(Normalizer(SelectPercentile(data, SelectPercentile.percentile=93, SelectPercentile.score_func=f_regression), Normalizer.norm='l1'), LassoLarsCV.normalize=True)"], "boston": ["ExtraTreesRegressor(SelectFwe(data, SelectFwe.alpha=0.005, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.55, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(data, SelectFwe.alpha=0.001, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.55, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(data, SelectFwe.alpha=0.012, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.55, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(data, SelectFwe.alpha=0.002, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.55, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(data, SelectFwe.alpha=0.006, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.55, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MinMaxScaler(SelectFwe(data, SelectFwe.alpha=0.01, SelectFwe.score_func=f_regression)), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectPercentile(data, SelectPercentile.percentile=65, SelectPercentile.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.55, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(MinMaxScaler(data), SelectFwe.alpha=0.006, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(data, SelectFwe.alpha=0.003, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.55, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RobustScaler(SelectPercentile(data, SelectPercentile.percentile=60, SelectPercentile.score_func=f_regression)), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.55, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=7, GradientBoostingRegressor.max_features=0.25, GradientBoostingRegressor.min_samples_leaf=1, GradientBoostingRegressor.min_samples_split=14, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.7500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.25, GradientBoostingRegressor.min_samples_leaf=1, GradientBoostingRegressor.min_samples_split=11, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.7500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=6, GradientBoostingRegressor.max_features=0.25, GradientBoostingRegressor.min_samples_leaf=1, GradientBoostingRegressor.min_samples_split=14, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.7500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=0.25, GradientBoostingRegressor.min_samples_leaf=1, GradientBoostingRegressor.min_samples_split=5, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6000000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.25, GradientBoostingRegressor.min_samples_leaf=1, GradientBoostingRegressor.min_samples_split=11, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6000000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=7, GradientBoostingRegressor.max_features=0.25, GradientBoostingRegressor.min_samples_leaf=1, GradientBoostingRegressor.min_samples_split=14, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.7500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=7, GradientBoostingRegressor.max_features=0.25, GradientBoostingRegressor.min_samples_leaf=2, GradientBoostingRegressor.min_samples_split=5, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=6, GradientBoostingRegressor.max_features=0.25, GradientBoostingRegressor.min_samples_leaf=1, GradientBoostingRegressor.min_samples_split=14, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.7500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=7, GradientBoostingRegressor.max_features=0.25, GradientBoostingRegressor.min_samples_leaf=1, GradientBoostingRegressor.min_samples_split=11, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.25, GradientBoostingRegressor.min_samples_leaf=1, GradientBoostingRegressor.min_samples_split=11, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=0.45, GradientBoostingRegressor.min_samples_leaf=2, GradientBoostingRegressor.min_samples_split=5, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.7000000000000001)", "GradientBoostingRegressor(MaxAbsScaler(data), GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.5, GradientBoostingRegressor.min_samples_leaf=2, GradientBoostingRegressor.min_samples_split=19, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9000000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=4, GradientBoostingRegressor.max_features=0.7000000000000001, GradientBoostingRegressor.min_samples_leaf=2, GradientBoostingRegressor.min_samples_split=5, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9000000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=0.7000000000000001, GradientBoostingRegressor.min_samples_leaf=1, GradientBoostingRegressor.min_samples_split=6, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=0.7000000000000001, GradientBoostingRegressor.min_samples_leaf=1, GradientBoostingRegressor.min_samples_split=6, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9000000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=0.45, GradientBoostingRegressor.min_samples_leaf=2, GradientBoostingRegressor.min_samples_split=5, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9000000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=4, GradientBoostingRegressor.max_features=0.45, GradientBoostingRegressor.min_samples_leaf=2, GradientBoostingRegressor.min_samples_split=5, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9000000000000001)", "GradientBoostingRegressor(SelectFwe(data, SelectFwe.alpha=0.021, SelectFwe.score_func=f_regression), GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=0.7000000000000001, GradientBoostingRegressor.min_samples_leaf=1, GradientBoostingRegressor.min_samples_split=6, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9500000000000001)", "GradientBoostingRegressor(RobustScaler(data), GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=0.7000000000000001, GradientBoostingRegressor.min_samples_leaf=2, GradientBoostingRegressor.min_samples_split=4, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=0.7000000000000001, GradientBoostingRegressor.min_samples_leaf=1, GradientBoostingRegressor.min_samples_split=4, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9500000000000001)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.35000000000000003, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectFwe(data, SelectFwe.alpha=0.023, SelectFwe.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.4, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.35000000000000003, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.4, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectFwe(data, SelectFwe.alpha=0.017, SelectFwe.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.4, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.35000000000000003, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.35000000000000003, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.35000000000000003, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.35000000000000003, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=98, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.35000000000000003, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=1.0, GradientBoostingRegressor.min_samples_leaf=2, GradientBoostingRegressor.min_samples_split=13, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=6, GradientBoostingRegressor.max_features=1.0, GradientBoostingRegressor.min_samples_leaf=1, GradientBoostingRegressor.min_samples_split=16, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=1.0, GradientBoostingRegressor.min_samples_leaf=1, GradientBoostingRegressor.min_samples_split=16, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=6, GradientBoostingRegressor.max_features=1.0, GradientBoostingRegressor.min_samples_leaf=1, GradientBoostingRegressor.min_samples_split=20, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(SelectFwe(data, SelectFwe.alpha=0.028, SelectFwe.score_func=f_regression), GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=1.0, GradientBoostingRegressor.min_samples_leaf=2, GradientBoostingRegressor.min_samples_split=13, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9000000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=1.0, GradientBoostingRegressor.min_samples_leaf=1, GradientBoostingRegressor.min_samples_split=20, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(SelectFwe(data, SelectFwe.alpha=0.03, SelectFwe.score_func=f_regression), GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=1.0, GradientBoostingRegressor.min_samples_leaf=1, GradientBoostingRegressor.min_samples_split=16, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=1.0, GradientBoostingRegressor.min_samples_leaf=1, GradientBoostingRegressor.min_samples_split=12, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(SelectFwe(data, SelectFwe.alpha=0.018000000000000002, SelectFwe.score_func=f_regression), GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=1.0, GradientBoostingRegressor.min_samples_leaf=1, GradientBoostingRegressor.min_samples_split=16, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "GradientBoostingRegressor(RobustScaler(data), GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=1.0, GradientBoostingRegressor.min_samples_leaf=2, GradientBoostingRegressor.min_samples_split=13, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8)", "ExtraTreesRegressor(SelectFwe(data, SelectFwe.alpha=0.01, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectPercentile(SelectFwe(data, SelectFwe.alpha=0.022, SelectFwe.score_func=f_regression), SelectPercentile.percentile=87, SelectPercentile.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(SelectFwe(data, SelectFwe.alpha=0.003, SelectFwe.score_func=f_regression), SelectFwe.alpha=0.018000000000000002, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(data, SelectFwe.alpha=0.003, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectPercentile(SelectFwe(data, SelectFwe.alpha=0.002, SelectFwe.score_func=f_regression), SelectPercentile.percentile=99, SelectPercentile.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(data, SelectFwe.alpha=0.006, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(SelectPercentile(data, SelectPercentile.percentile=69, SelectPercentile.score_func=f_regression), SelectFwe.alpha=0.006, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(SelectPercentile(data, SelectPercentile.percentile=62, SelectPercentile.score_func=f_regression), SelectFwe.alpha=0.01, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(SelectFwe(data, SelectFwe.alpha=0.027, SelectFwe.score_func=f_regression), SelectFwe.alpha=0.003, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(data, SelectFwe.alpha=0.01, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=4, GradientBoostingRegressor.max_features=0.6500000000000001, GradientBoostingRegressor.min_samples_leaf=2, GradientBoostingRegressor.min_samples_split=8, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=4, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=2, GradientBoostingRegressor.min_samples_split=4, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=7, GradientBoostingRegressor.max_features=0.5, GradientBoostingRegressor.min_samples_leaf=2, GradientBoostingRegressor.min_samples_split=18, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=6, GradientBoostingRegressor.max_features=0.4, GradientBoostingRegressor.min_samples_leaf=2, GradientBoostingRegressor.min_samples_split=10, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=7, GradientBoostingRegressor.max_features=0.5, GradientBoostingRegressor.min_samples_leaf=2, GradientBoostingRegressor.min_samples_split=18, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=6, GradientBoostingRegressor.max_features=0.5, GradientBoostingRegressor.min_samples_leaf=2, GradientBoostingRegressor.min_samples_split=16, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9500000000000001)", "GradientBoostingRegressor(StandardScaler(data), GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=6, GradientBoostingRegressor.max_features=0.5, GradientBoostingRegressor.min_samples_leaf=2, GradientBoostingRegressor.min_samples_split=16, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.4, GradientBoostingRegressor.min_samples_leaf=2, GradientBoostingRegressor.min_samples_split=18, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.8500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=4, GradientBoostingRegressor.max_features=0.8, GradientBoostingRegressor.min_samples_leaf=2, GradientBoostingRegressor.min_samples_split=5, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=7, GradientBoostingRegressor.max_features=0.4, GradientBoostingRegressor.min_samples_leaf=2, GradientBoostingRegressor.min_samples_split=14, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "ExtraTreesRegressor(SelectPercentile(data, SelectPercentile.percentile=58, SelectPercentile.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.45, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(data, SelectFwe.alpha=0.009000000000000001, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.45, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(SelectFwe(data, SelectFwe.alpha=0.011, SelectFwe.score_func=f_regression), SelectFwe.alpha=0.04, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.4, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(data, SelectFwe.alpha=0.003, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.4, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(data, SelectFwe.alpha=0.005, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.4, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectPercentile(data, SelectPercentile.percentile=64, SelectPercentile.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(data, SelectFwe.alpha=0.002, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.45, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectPercentile(data, SelectPercentile.percentile=64, SelectPercentile.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.45, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(data, SelectFwe.alpha=0.009000000000000001, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.4, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(StandardScaler(SelectFwe(data, SelectFwe.alpha=0.001, SelectFwe.score_func=f_regression)), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.4, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(data, SelectFwe.alpha=0.003, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(SelectFwe(data, SelectFwe.alpha=0.018000000000000002, SelectFwe.score_func=f_regression), SelectFwe.alpha=0.003, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(data, SelectFwe.alpha=0.003, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.55, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(data, SelectFwe.alpha=0.006, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(SelectFwe(data, SelectFwe.alpha=0.003, SelectFwe.score_func=f_regression), SelectFwe.alpha=0.011, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(SelectFwe(data, SelectFwe.alpha=0.008, SelectFwe.score_func=f_regression), SelectFwe.alpha=0.003, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(SelectPercentile(data, SelectPercentile.percentile=67, SelectPercentile.score_func=f_regression), SelectFwe.alpha=0.003, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(data, SelectFwe.alpha=0.003, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.45, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(SelectFwe(data, SelectFwe.alpha=0.026000000000000002, SelectFwe.score_func=f_regression), SelectFwe.alpha=0.003, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(data, SelectFwe.alpha=0.006, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.45, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)"], "Santander_transaction_value": ["RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.05, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=8, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(SelectPercentile(data, SelectPercentile.percentile=13, SelectPercentile.score_func=f_regression), VarianceThreshold.threshold=0.15000000000000002), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=7, RandomForestRegressor.min_samples_split=14, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=13, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=7, RandomForestRegressor.min_samples_split=14, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(SelectPercentile(data, SelectPercentile.percentile=13, SelectPercentile.score_func=f_regression), VarianceThreshold.threshold=0.35000000000000003), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=7, RandomForestRegressor.min_samples_split=14, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=13, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=7, RandomForestRegressor.min_samples_split=20, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.05, RandomForestRegressor.min_samples_leaf=14, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.05, RandomForestRegressor.min_samples_leaf=14, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.05, RandomForestRegressor.min_samples_leaf=14, RandomForestRegressor.min_samples_split=8, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.05, RandomForestRegressor.min_samples_leaf=14, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(StandardScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.1, RandomForestRegressor.min_samples_leaf=15, RandomForestRegressor.min_samples_split=11, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(SelectPercentile(data, SelectPercentile.percentile=18, SelectPercentile.score_func=f_regression)), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.6000000000000001, RandomForestRegressor.min_samples_leaf=7, RandomForestRegressor.min_samples_split=14, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(SelectPercentile(data, SelectPercentile.percentile=18, SelectPercentile.score_func=f_regression)), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=11, RandomForestRegressor.min_samples_split=14, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(SelectPercentile(data, SelectPercentile.percentile=18, SelectPercentile.score_func=f_regression)), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=10, RandomForestRegressor.min_samples_split=14, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(SelectPercentile(data, SelectPercentile.percentile=18, SelectPercentile.score_func=f_regression)), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.6000000000000001, RandomForestRegressor.min_samples_leaf=11, RandomForestRegressor.min_samples_split=14, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(SelectPercentile(data, SelectPercentile.percentile=18, SelectPercentile.score_func=f_regression)), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6000000000000001, RandomForestRegressor.min_samples_leaf=11, RandomForestRegressor.min_samples_split=14, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(SelectPercentile(data, SelectPercentile.percentile=18, SelectPercentile.score_func=f_regression)), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=11, RandomForestRegressor.min_samples_split=14, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(VarianceThreshold(SelectFwe(data, SelectFwe.alpha=0.043000000000000003, SelectFwe.score_func=f_regression), VarianceThreshold.threshold=0.4), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=19, ExtraTreesRegressor.min_samples_split=8, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.05, ExtraTreesRegressor.min_samples_leaf=12, ExtraTreesRegressor.min_samples_split=20, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.05, ExtraTreesRegressor.min_samples_leaf=12, ExtraTreesRegressor.min_samples_split=8, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.05, ExtraTreesRegressor.min_samples_leaf=16, ExtraTreesRegressor.min_samples_split=20, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(StandardScaler(data), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=18, RandomForestRegressor.min_samples_split=14, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=18, RandomForestRegressor.min_samples_split=14, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=18, RandomForestRegressor.min_samples_split=20, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(data, SelectFwe.alpha=0.027, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.35000000000000003, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=16, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=7, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.7000000000000001, RandomForestRegressor.min_samples_leaf=18, RandomForestRegressor.min_samples_split=14, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(data), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=18, RandomForestRegressor.min_samples_split=14, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=7, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=18, RandomForestRegressor.min_samples_split=14, RandomForestRegressor.n_estimators=100)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.25, GradientBoostingRegressor.min_samples_leaf=18, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.55)", "GradientBoostingRegressor(RobustScaler(data), GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='quantile', GradientBoostingRegressor.max_depth=8, GradientBoostingRegressor.max_features=0.6000000000000001, GradientBoostingRegressor.min_samples_leaf=10, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.7500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='absolute_error', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=0.9000000000000001, GradientBoostingRegressor.min_samples_leaf=18, GradientBoostingRegressor.min_samples_split=19, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.15000000000000002)", "GradientBoostingRegressor(SelectFwe(data, SelectFwe.alpha=0.029, SelectFwe.score_func=f_regression), GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=0.05, GradientBoostingRegressor.min_samples_leaf=10, GradientBoostingRegressor.min_samples_split=2, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(StandardScaler(data), GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=0.05, GradientBoostingRegressor.min_samples_leaf=10, GradientBoostingRegressor.min_samples_split=2, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=0.05, GradientBoostingRegressor.min_samples_leaf=10, GradientBoostingRegressor.min_samples_split=2, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(MaxAbsScaler(data), GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=0.05, GradientBoostingRegressor.min_samples_leaf=10, GradientBoostingRegressor.min_samples_split=2, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.2)", "GradientBoostingRegressor(StandardScaler(data), GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=0.05, GradientBoostingRegressor.min_samples_leaf=10, GradientBoostingRegressor.min_samples_split=2, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.55)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=0.05, GradientBoostingRegressor.min_samples_leaf=10, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(RobustScaler(data), GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=0.05, GradientBoostingRegressor.min_samples_leaf=10, GradientBoostingRegressor.min_samples_split=2, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(RobustScaler(data), GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=0.05, GradientBoostingRegressor.min_samples_leaf=10, GradientBoostingRegressor.min_samples_split=10, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.2)", "GradientBoostingRegressor(MaxAbsScaler(data), GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=0.05, GradientBoostingRegressor.min_samples_leaf=10, GradientBoostingRegressor.min_samples_split=2, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.1), GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=0.05, GradientBoostingRegressor.min_samples_leaf=10, GradientBoostingRegressor.min_samples_split=2, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.2)", "ExtraTreesRegressor(SelectFwe(data, SelectFwe.alpha=0.007, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=15, ExtraTreesRegressor.min_samples_split=18, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.1, ExtraTreesRegressor.min_samples_leaf=8, ExtraTreesRegressor.min_samples_split=9, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(data, SelectFwe.alpha=0.007, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=15, ExtraTreesRegressor.min_samples_split=18, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.1, ExtraTreesRegressor.min_samples_leaf=15, ExtraTreesRegressor.min_samples_split=9, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MaxAbsScaler(data), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.1, ExtraTreesRegressor.min_samples_leaf=15, ExtraTreesRegressor.min_samples_split=9, ExtraTreesRegressor.n_estimators=100)", "AdaBoostRegressor(SelectPercentile(data, SelectPercentile.percentile=17, SelectPercentile.score_func=f_regression), AdaBoostRegressor.learning_rate=0.001, AdaBoostRegressor.loss='exponential', AdaBoostRegressor.n_estimators=100)", "LassoLarsCV(SelectFwe(data, SelectFwe.alpha=0.008, SelectFwe.score_func=f_regression), LassoLarsCV.normalize=False)", "DecisionTreeRegressor(Nystroem(data, Nystroem.gamma=0.4, Nystroem.kernel='linear', Nystroem.n_components=7), DecisionTreeRegressor.max_depth=9, DecisionTreeRegressor.min_samples_leaf=20, DecisionTreeRegressor.min_samples_split=4)", "DecisionTreeRegressor(VarianceThreshold(SelectFwe(data, SelectFwe.alpha=0.001, SelectFwe.score_func=f_regression), VarianceThreshold.threshold=0.8500000000000001), DecisionTreeRegressor.max_depth=5, DecisionTreeRegressor.min_samples_leaf=14, DecisionTreeRegressor.min_samples_split=20)", "ExtraTreesRegressor(Normalizer(data, Normalizer.norm='l1'), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.1, ExtraTreesRegressor.min_samples_leaf=8, ExtraTreesRegressor.min_samples_split=9, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(SelectFwe(SelectFwe(data, SelectFwe.alpha=0.011, SelectFwe.score_func=f_regression), SelectFwe.alpha=0.029, SelectFwe.score_func=f_regression), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.7000000000000001, RandomForestRegressor.min_samples_leaf=14, RandomForestRegressor.min_samples_split=10, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=11, RandomForestRegressor.min_samples_split=6, RandomForestRegressor.n_estimators=100)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.9, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=2, GradientBoostingRegressor.max_features=0.2, GradientBoostingRegressor.min_samples_leaf=12, GradientBoostingRegressor.min_samples_split=14, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.7000000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.01, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.4, GradientBoostingRegressor.min_samples_leaf=16, GradientBoostingRegressor.min_samples_split=16, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.55)", "GradientBoostingRegressor(MaxAbsScaler(data), GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.01, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.4, GradientBoostingRegressor.min_samples_leaf=16, GradientBoostingRegressor.min_samples_split=16, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.55)", "GradientBoostingRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.6000000000000001), GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.01, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.4, GradientBoostingRegressor.min_samples_leaf=16, GradientBoostingRegressor.min_samples_split=16, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.55)", "GradientBoostingRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.5), GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=0.01, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=9, GradientBoostingRegressor.max_features=0.4, GradientBoostingRegressor.min_samples_leaf=16, GradientBoostingRegressor.min_samples_split=16, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.55)", "ElasticNetCV(SelectFwe(VarianceThreshold(SelectFwe(data, SelectFwe.alpha=0.023, SelectFwe.score_func=f_regression), VarianceThreshold.threshold=0.5), SelectFwe.alpha=0.025, SelectFwe.score_func=f_regression), ElasticNetCV.l1_ratio=0.35000000000000003, ElasticNetCV.tol=0.001)", "ElasticNetCV(VarianceThreshold(SelectFwe(data, SelectFwe.alpha=0.023, SelectFwe.score_func=f_regression), VarianceThreshold.threshold=0.5), ElasticNetCV.l1_ratio=0.35000000000000003, ElasticNetCV.tol=0.001)", "ElasticNetCV(VarianceThreshold(SelectFwe(data, SelectFwe.alpha=0.023, SelectFwe.score_func=f_regression), VarianceThreshold.threshold=0.5), ElasticNetCV.l1_ratio=0.35000000000000003, ElasticNetCV.tol=0.0001)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=63, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.05, RandomForestRegressor.min_samples_leaf=6, RandomForestRegressor.min_samples_split=10, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.05, RandomForestRegressor.min_samples_leaf=6, RandomForestRegressor.min_samples_split=10, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=60, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.05, RandomForestRegressor.min_samples_leaf=6, RandomForestRegressor.min_samples_split=10, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.05, RandomForestRegressor.min_samples_leaf=4, RandomForestRegressor.min_samples_split=10, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.9500000000000001), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.05, RandomForestRegressor.min_samples_leaf=6, RandomForestRegressor.min_samples_split=10, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.3), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.05, RandomForestRegressor.min_samples_leaf=6, RandomForestRegressor.min_samples_split=10, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.9500000000000001), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.05, RandomForestRegressor.min_samples_leaf=6, RandomForestRegressor.min_samples_split=11, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.1, RandomForestRegressor.min_samples_leaf=9, RandomForestRegressor.min_samples_split=8, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.05, RandomForestRegressor.min_samples_leaf=12, RandomForestRegressor.min_samples_split=10, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.1, ExtraTreesRegressor.min_samples_leaf=12, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(SelectPercentile(data, SelectPercentile.percentile=50, SelectPercentile.score_func=f_regression), VarianceThreshold.threshold=0.05), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.4, RandomForestRegressor.min_samples_leaf=16, RandomForestRegressor.min_samples_split=9, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(MinMaxScaler(data), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.35000000000000003, ExtraTreesRegressor.min_samples_leaf=20, ExtraTreesRegressor.min_samples_split=5, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MinMaxScaler(RobustScaler(MinMaxScaler(data))), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.3, ExtraTreesRegressor.min_samples_leaf=20, ExtraTreesRegressor.min_samples_split=5, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(MinMaxScaler(data), SelectFwe.alpha=0.024, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.35000000000000003, ExtraTreesRegressor.min_samples_leaf=20, ExtraTreesRegressor.min_samples_split=5, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectPercentile(MinMaxScaler(data), SelectPercentile.percentile=51, SelectPercentile.score_func=f_regression), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.1, ExtraTreesRegressor.min_samples_leaf=16, ExtraTreesRegressor.min_samples_split=6, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.05, ExtraTreesRegressor.min_samples_leaf=18, ExtraTreesRegressor.min_samples_split=5, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MinMaxScaler(MinMaxScaler(data)), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.05, ExtraTreesRegressor.min_samples_leaf=18, ExtraTreesRegressor.min_samples_split=5, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.05, ExtraTreesRegressor.min_samples_leaf=20, ExtraTreesRegressor.min_samples_split=5, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MinMaxScaler(MinMaxScaler(data)), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.05, ExtraTreesRegressor.min_samples_leaf=20, ExtraTreesRegressor.min_samples_split=5, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MinMaxScaler(data), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.05, ExtraTreesRegressor.min_samples_leaf=20, ExtraTreesRegressor.min_samples_split=5, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=25, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.05, RandomForestRegressor.min_samples_leaf=12, RandomForestRegressor.min_samples_split=11, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(SelectFwe(data, SelectFwe.alpha=0.033, SelectFwe.score_func=f_regression), VarianceThreshold.threshold=0.45), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=10, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(SelectFwe(SelectFwe(data, SelectFwe.alpha=0.037, SelectFwe.score_func=f_regression), SelectFwe.alpha=0.033, SelectFwe.score_func=f_regression), VarianceThreshold.threshold=0.45), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=10, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=25, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.05, RandomForestRegressor.min_samples_leaf=12, RandomForestRegressor.min_samples_split=11, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(data), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.05, RandomForestRegressor.min_samples_leaf=12, RandomForestRegressor.min_samples_split=12, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.35000000000000003), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.05, RandomForestRegressor.min_samples_leaf=12, RandomForestRegressor.min_samples_split=11, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(data), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.05, RandomForestRegressor.min_samples_leaf=12, RandomForestRegressor.min_samples_split=11, RandomForestRegressor.n_estimators=100)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=7, GradientBoostingRegressor.max_features=0.7000000000000001, GradientBoostingRegressor.min_samples_leaf=14, GradientBoostingRegressor.min_samples_split=5, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=3, GradientBoostingRegressor.max_features=0.05, GradientBoostingRegressor.min_samples_leaf=15, GradientBoostingRegressor.min_samples_split=4, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6000000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=3, GradientBoostingRegressor.max_features=0.05, GradientBoostingRegressor.min_samples_leaf=13, GradientBoostingRegressor.min_samples_split=4, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6000000000000001)"], "OnlineNewsPopularity": ["RandomForestRegressor(Normalizer(data, Normalizer.norm='max'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=14, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='max'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=9, RandomForestRegressor.min_samples_split=12, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='max'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=14, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='max'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=14, RandomForestRegressor.min_samples_split=8, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='max'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=14, RandomForestRegressor.min_samples_split=12, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='max'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=14, RandomForestRegressor.min_samples_split=12, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(Normalizer(data, Normalizer.norm='max')), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=14, RandomForestRegressor.min_samples_split=12, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=14, RandomForestRegressor.min_samples_split=12, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.05, RandomForestRegressor.min_samples_leaf=14, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.05, RandomForestRegressor.min_samples_leaf=14, RandomForestRegressor.min_samples_split=8, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.55, ExtraTreesRegressor.min_samples_leaf=7, ExtraTreesRegressor.min_samples_split=14, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(data, SelectFwe.alpha=0.026000000000000002, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.55, ExtraTreesRegressor.min_samples_leaf=7, ExtraTreesRegressor.min_samples_split=14, ExtraTreesRegressor.n_estimators=100)", "LassoLarsCV(Normalizer(StandardScaler(data), Normalizer.norm='l2'), LassoLarsCV.normalize=True)", "ExtraTreesRegressor(SelectFwe(data, SelectFwe.alpha=0.037, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.55, ExtraTreesRegressor.min_samples_leaf=7, ExtraTreesRegressor.min_samples_split=14, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(SelectPercentile(data, SelectPercentile.percentile=20, SelectPercentile.score_func=f_regression), SelectFwe.alpha=0.037, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.55, ExtraTreesRegressor.min_samples_leaf=7, ExtraTreesRegressor.min_samples_split=14, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(MaxAbsScaler(data), SelectFwe.alpha=0.037, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.55, ExtraTreesRegressor.min_samples_leaf=7, ExtraTreesRegressor.min_samples_split=14, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectFwe(data, SelectFwe.alpha=0.026000000000000002, SelectFwe.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.55, ExtraTreesRegressor.min_samples_leaf=7, ExtraTreesRegressor.min_samples_split=14, ExtraTreesRegressor.n_estimators=100)", "LassoLarsCV(data, LassoLarsCV.normalize=False)", "ElasticNetCV(MinMaxScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.45)), ElasticNetCV.l1_ratio=1.0, ElasticNetCV.tol=0.0001)", "ElasticNetCV(MinMaxScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.45)), ElasticNetCV.l1_ratio=1.0, ElasticNetCV.tol=0.1)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.1, RandomForestRegressor.min_samples_leaf=20, RandomForestRegressor.min_samples_split=13, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.9000000000000001), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.1, RandomForestRegressor.min_samples_leaf=18, RandomForestRegressor.min_samples_split=13, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.1, RandomForestRegressor.min_samples_leaf=18, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(MaxAbsScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.25)), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=16, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.1, RandomForestRegressor.min_samples_leaf=18, RandomForestRegressor.min_samples_split=13, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.1, RandomForestRegressor.min_samples_leaf=18, RandomForestRegressor.min_samples_split=8, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.1, RandomForestRegressor.min_samples_leaf=18, RandomForestRegressor.min_samples_split=13, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=90, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.1, RandomForestRegressor.min_samples_leaf=18, RandomForestRegressor.min_samples_split=13, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.1, RandomForestRegressor.min_samples_leaf=18, RandomForestRegressor.min_samples_split=13, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.1, RandomForestRegressor.min_samples_leaf=6, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=13, ExtraTreesRegressor.min_samples_split=19, ExtraTreesRegressor.n_estimators=100)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=1.0, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=1, GradientBoostingRegressor.max_features=0.6500000000000001, GradientBoostingRegressor.min_samples_leaf=13, GradientBoostingRegressor.min_samples_split=16, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=1.0)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.3, ExtraTreesRegressor.min_samples_leaf=8, ExtraTreesRegressor.min_samples_split=16, ExtraTreesRegressor.n_estimators=100)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.99, GradientBoostingRegressor.learning_rate=1.0, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=1, GradientBoostingRegressor.max_features=0.6500000000000001, GradientBoostingRegressor.min_samples_leaf=13, GradientBoostingRegressor.min_samples_split=16, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.9500000000000001)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=13, ExtraTreesRegressor.min_samples_split=18, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=13, ExtraTreesRegressor.min_samples_split=5, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PCA(data, PCA.iterated_power=10, PCA.svd_solver='randomized'), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.9000000000000001, ExtraTreesRegressor.min_samples_leaf=19, ExtraTreesRegressor.min_samples_split=9, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.3, ExtraTreesRegressor.min_samples_leaf=8, ExtraTreesRegressor.min_samples_split=20, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.45, ExtraTreesRegressor.min_samples_leaf=11, ExtraTreesRegressor.min_samples_split=18, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.9000000000000001, ExtraTreesRegressor.min_samples_leaf=19, ExtraTreesRegressor.min_samples_split=9, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RobustScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=12, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=20, ExtraTreesRegressor.min_samples_split=19, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=12, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=11, ExtraTreesRegressor.min_samples_split=19, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.4, ExtraTreesRegressor.min_samples_leaf=12, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=12, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=7, ExtraTreesRegressor.min_samples_split=19, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(data), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=15, RandomForestRegressor.min_samples_split=6, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=15, RandomForestRegressor.min_samples_split=6, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(FastICA(StandardScaler(data), FastICA.tol=0.65, FastICA.whiten='unit-variance'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=12, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.05), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=18, RandomForestRegressor.min_samples_split=7, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.7500000000000001), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=18, RandomForestRegressor.min_samples_split=7, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='l2'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.1, RandomForestRegressor.min_samples_leaf=9, RandomForestRegressor.min_samples_split=8, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.05, RandomForestRegressor.min_samples_leaf=6, RandomForestRegressor.min_samples_split=10, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(StandardScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.05)), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=18, RandomForestRegressor.min_samples_split=7, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(Normalizer(data, Normalizer.norm='max'), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.8500000000000001, ExtraTreesRegressor.min_samples_leaf=13, ExtraTreesRegressor.min_samples_split=17, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=18, RandomForestRegressor.min_samples_split=7, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(Normalizer(data, Normalizer.norm='l2'), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.8500000000000001, ExtraTreesRegressor.min_samples_leaf=13, ExtraTreesRegressor.min_samples_split=17, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RobustScaler(Normalizer(data, Normalizer.norm='max')), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.8500000000000001, ExtraTreesRegressor.min_samples_leaf=13, ExtraTreesRegressor.min_samples_split=17, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.1, RandomForestRegressor.min_samples_leaf=15, RandomForestRegressor.min_samples_split=14, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.7500000000000001), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=18, ExtraTreesRegressor.min_samples_split=16, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(Normalizer(data, Normalizer.norm='max'), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=18, ExtraTreesRegressor.min_samples_split=19, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(Normalizer(data, Normalizer.norm='max'), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=13, ExtraTreesRegressor.min_samples_split=19, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(Normalizer(data, Normalizer.norm='max'), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=11, ExtraTreesRegressor.min_samples_split=19, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(VarianceThreshold(VarianceThreshold(data, VarianceThreshold.threshold=0.8500000000000001), VarianceThreshold.threshold=0.45), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.2, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=13, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.7500000000000001), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.2, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=16, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RobustScaler(data), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=18, ExtraTreesRegressor.min_samples_split=19, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RobustScaler(data), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=11, ExtraTreesRegressor.min_samples_split=19, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.8500000000000001), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.25, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=13, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.8500000000000001), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.2, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=13, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=13, RandomForestRegressor.min_samples_split=13, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.6000000000000001), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=13, RandomForestRegressor.min_samples_split=13, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=13, RandomForestRegressor.min_samples_split=8, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=14, RandomForestRegressor.min_samples_split=13, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.1), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=13, RandomForestRegressor.min_samples_split=13, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.05), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=13, RandomForestRegressor.min_samples_split=13, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.55), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=13, RandomForestRegressor.min_samples_split=13, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=17, RandomForestRegressor.min_samples_split=13, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.6000000000000001)), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=13, RandomForestRegressor.min_samples_split=13, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=13, RandomForestRegressor.min_samples_split=13, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(data), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.1, RandomForestRegressor.min_samples_leaf=19, RandomForestRegressor.min_samples_split=9, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.1, RandomForestRegressor.min_samples_leaf=19, RandomForestRegressor.min_samples_split=19, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.1, RandomForestRegressor.min_samples_leaf=19, RandomForestRegressor.min_samples_split=9, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(data), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.1, RandomForestRegressor.min_samples_leaf=19, RandomForestRegressor.min_samples_split=19, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.9500000000000001), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.25, ExtraTreesRegressor.min_samples_leaf=13, ExtraTreesRegressor.min_samples_split=15, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=19, RandomForestRegressor.min_samples_split=9, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.1, RandomForestRegressor.min_samples_leaf=19, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.9500000000000001), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.25, ExtraTreesRegressor.min_samples_leaf=13, ExtraTreesRegressor.min_samples_split=13, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(StandardScaler(Normalizer(data, Normalizer.norm='l2')), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=13, ExtraTreesRegressor.min_samples_split=15, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(Normalizer(data, Normalizer.norm='l2'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7000000000000001, ExtraTreesRegressor.min_samples_leaf=18, ExtraTreesRegressor.min_samples_split=14, ExtraTreesRegressor.n_estimators=100)"], "Moneyball": ["LinearSVR(RobustScaler(data), LinearSVR.C=20.0, LinearSVR.dual=False, LinearSVR.epsilon=0.0001, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.0001)", "LinearSVR(RobustScaler(data), LinearSVR.C=20.0, LinearSVR.dual=False, LinearSVR.epsilon=0.01, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.0001)", "LassoLarsCV(SelectPercentile(data, SelectPercentile.percentile=67, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(data, SelectPercentile.percentile=68, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(data, SelectPercentile.percentile=69, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LinearSVR(StandardScaler(RobustScaler(data)), LinearSVR.C=20.0, LinearSVR.dual=False, LinearSVR.epsilon=0.01, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.0001)", "LassoLarsCV(PCA(MaxAbsScaler(data), PCA.iterated_power=9, PCA.svd_solver='randomized'), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectFwe(data, SelectFwe.alpha=0.049, SelectFwe.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectFwe(data, SelectFwe.alpha=0.048, SelectFwe.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(PCA(data, PCA.iterated_power=7, PCA.svd_solver='randomized'), LassoLarsCV.normalize=False)", "LinearSVR(RobustScaler(data), LinearSVR.C=1.0, LinearSVR.dual=True, LinearSVR.epsilon=1.0, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.01)", "LinearSVR(RobustScaler(data), LinearSVR.C=1.0, LinearSVR.dual=True, LinearSVR.epsilon=0.0001, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.01)", "LinearSVR(RobustScaler(data), LinearSVR.C=1.0, LinearSVR.dual=True, LinearSVR.epsilon=0.001, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.001)", "LinearSVR(RobustScaler(data), LinearSVR.C=1.0, LinearSVR.dual=True, LinearSVR.epsilon=1.0, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=1e-05)", "LinearSVR(RobustScaler(data), LinearSVR.C=1.0, LinearSVR.dual=True, LinearSVR.epsilon=0.001, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.01)", "LassoLarsCV(RobustScaler(data), LassoLarsCV.normalize=False)", "LinearSVR(RobustScaler(MaxAbsScaler(data)), LinearSVR.C=1.0, LinearSVR.dual=True, LinearSVR.epsilon=1.0, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.01)", "LinearSVR(RobustScaler(data), LinearSVR.C=5.0, LinearSVR.dual=True, LinearSVR.epsilon=0.0001, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.01)", "LinearSVR(RobustScaler(data), LinearSVR.C=5.0, LinearSVR.dual=True, LinearSVR.epsilon=1.0, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.01)", "ElasticNetCV(RobustScaler(MaxAbsScaler(data)), ElasticNetCV.l1_ratio=1.0, ElasticNetCV.tol=0.0001)", "LassoLarsCV(PolynomialFeatures(SelectPercentile(data, SelectPercentile.percentile=88, SelectPercentile.score_func=f_regression), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LassoLarsCV.normalize=False)", "LassoLarsCV(PolynomialFeatures(SelectPercentile(data, SelectPercentile.percentile=72, SelectPercentile.score_func=f_regression), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LassoLarsCV.normalize=False)", "LassoLarsCV(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LassoLarsCV.normalize=False)", "LassoLarsCV(PolynomialFeatures(SelectFwe(data, SelectFwe.alpha=0.041, SelectFwe.score_func=f_regression), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LassoLarsCV.normalize=False)", "LassoLarsCV(PolynomialFeatures(SelectFwe(data, SelectFwe.alpha=0.038, SelectFwe.score_func=f_regression), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LassoLarsCV.normalize=False)", "LassoLarsCV(PolynomialFeatures(SelectFwe(data, SelectFwe.alpha=0.035, SelectFwe.score_func=f_regression), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LassoLarsCV.normalize=False)", "LassoLarsCV(PolynomialFeatures(SelectFwe(data, SelectFwe.alpha=0.018000000000000002, SelectFwe.score_func=f_regression), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LassoLarsCV.normalize=False)", "LassoLarsCV(PolynomialFeatures(SelectPercentile(data, SelectPercentile.percentile=50, SelectPercentile.score_func=f_regression), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LassoLarsCV.normalize=False)", "LassoLarsCV(PolynomialFeatures(SelectPercentile(data, SelectPercentile.percentile=54, SelectPercentile.score_func=f_regression), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LassoLarsCV.normalize=False)", "LassoLarsCV(PolynomialFeatures(SelectFwe(data, SelectFwe.alpha=0.024, SelectFwe.score_func=f_regression), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LassoLarsCV.normalize=False)", "ElasticNetCV(PolynomialFeatures(MinMaxScaler(data), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ElasticNetCV.l1_ratio=1.0, ElasticNetCV.tol=0.0001)", "LinearSVR(SelectPercentile(RobustScaler(data), SelectPercentile.percentile=89, SelectPercentile.score_func=f_regression), LinearSVR.C=0.5, LinearSVR.dual=False, LinearSVR.epsilon=0.0001, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.0001)", "LinearSVR(SelectPercentile(RobustScaler(data), SelectPercentile.percentile=90, SelectPercentile.score_func=f_regression), LinearSVR.C=0.5, LinearSVR.dual=False, LinearSVR.epsilon=0.1, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.0001)", "LinearSVR(SelectPercentile(RobustScaler(data), SelectPercentile.percentile=89, SelectPercentile.score_func=f_regression), LinearSVR.C=0.5, LinearSVR.dual=False, LinearSVR.epsilon=0.1, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.0001)", "LinearSVR(RobustScaler(SelectPercentile(data, SelectPercentile.percentile=90, SelectPercentile.score_func=f_regression)), LinearSVR.C=0.5, LinearSVR.dual=False, LinearSVR.epsilon=0.1, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.0001)", "LinearSVR(SelectPercentile(RobustScaler(data), SelectPercentile.percentile=88, SelectPercentile.score_func=f_regression), LinearSVR.C=0.5, LinearSVR.dual=False, LinearSVR.epsilon=0.1, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.0001)", "LinearSVR(RobustScaler(SelectPercentile(data, SelectPercentile.percentile=89, SelectPercentile.score_func=f_regression)), LinearSVR.C=0.5, LinearSVR.dual=False, LinearSVR.epsilon=0.1, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.0001)", "LinearSVR(RobustScaler(SelectPercentile(data, SelectPercentile.percentile=88, SelectPercentile.score_func=f_regression)), LinearSVR.C=0.5, LinearSVR.dual=False, LinearSVR.epsilon=0.1, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.0001)", "LinearSVR(RobustScaler(SelectPercentile(data, SelectPercentile.percentile=93, SelectPercentile.score_func=f_regression)), LinearSVR.C=0.5, LinearSVR.dual=False, LinearSVR.epsilon=0.1, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.0001)", "LinearSVR(SelectPercentile(RobustScaler(data), SelectPercentile.percentile=93, SelectPercentile.score_func=f_regression), LinearSVR.C=0.5, LinearSVR.dual=False, LinearSVR.epsilon=0.1, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.0001)", "LassoLarsCV(RobustScaler(RobustScaler(data)), LassoLarsCV.normalize=False)", "LassoLarsCV(RobustScaler(data), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(data, SelectPercentile.percentile=97, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=True)", "ElasticNetCV(StandardScaler(data), ElasticNetCV.l1_ratio=1.0, ElasticNetCV.tol=0.01)", "LassoLarsCV(SelectPercentile(data, SelectPercentile.percentile=81, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=True)", "LassoLarsCV(SelectPercentile(data, SelectPercentile.percentile=85, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=True)", "LassoLarsCV(PCA(data, PCA.iterated_power=1, PCA.svd_solver='randomized'), LassoLarsCV.normalize=False)", "LassoLarsCV(PCA(data, PCA.iterated_power=3, PCA.svd_solver='randomized'), LassoLarsCV.normalize=False)", "LassoLarsCV(PCA(PCA(data, PCA.iterated_power=3, PCA.svd_solver='randomized'), PCA.iterated_power=9, PCA.svd_solver='randomized'), LassoLarsCV.normalize=False)", "LassoLarsCV(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), LassoLarsCV.normalize=False)", "ElasticNetCV(PolynomialFeatures(RobustScaler(data), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ElasticNetCV.l1_ratio=1.0, ElasticNetCV.tol=0.0001)", "ElasticNetCV(RobustScaler(data), ElasticNetCV.l1_ratio=1.0, ElasticNetCV.tol=0.0001)", "ElasticNetCV(RobustScaler(data), ElasticNetCV.l1_ratio=1.0, ElasticNetCV.tol=0.001)", "ElasticNetCV(RobustScaler(data), ElasticNetCV.l1_ratio=1.0, ElasticNetCV.tol=0.01)", "LassoLarsCV(SelectPercentile(data, SelectPercentile.percentile=79, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=True)", "LassoLarsCV(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(data, SelectPercentile.percentile=82, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=True)", "ElasticNetCV(MaxAbsScaler(RobustScaler(data)), ElasticNetCV.l1_ratio=1.0, ElasticNetCV.tol=0.0001)", "LassoLarsCV(SelectPercentile(data, SelectPercentile.percentile=87, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=True)", "LassoLarsCV(RobustScaler(data), LassoLarsCV.normalize=False)", "LassoLarsCV(RobustScaler(data), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(data, SelectPercentile.percentile=79, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=True)", "LassoLarsCV(SelectPercentile(data, SelectPercentile.percentile=81, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=True)", "LassoLarsCV(SelectPercentile(MinMaxScaler(data), SelectPercentile.percentile=79, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=True)", "LassoLarsCV(SelectPercentile(MaxAbsScaler(data), SelectPercentile.percentile=79, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=True)", "LassoLarsCV(SelectPercentile(data, SelectPercentile.percentile=87, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=True)", "LassoLarsCV(SelectPercentile(data, SelectPercentile.percentile=86, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=True)", "LassoLarsCV(SelectPercentile(data, SelectPercentile.percentile=78, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=True)", "LassoLarsCV(SelectPercentile(data, SelectPercentile.percentile=75, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=True)", "LassoLarsCV(SelectPercentile(data, SelectPercentile.percentile=73, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=True)", "LassoLarsCV(SelectPercentile(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), SelectPercentile.percentile=69, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), SelectPercentile.percentile=83, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(PolynomialFeatures(SelectPercentile(data, SelectPercentile.percentile=41, SelectPercentile.score_func=f_regression), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LassoLarsCV.normalize=False)", "LassoLarsCV(PolynomialFeatures(SelectPercentile(data, SelectPercentile.percentile=39, SelectPercentile.score_func=f_regression), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(data, SelectPercentile.percentile=39, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectFwe(SelectPercentile(data, SelectPercentile.percentile=39, SelectPercentile.score_func=f_regression), SelectFwe.alpha=0.009000000000000001, SelectFwe.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectFwe(SelectPercentile(data, SelectPercentile.percentile=39, SelectPercentile.score_func=f_regression), SelectFwe.alpha=0.022, SelectFwe.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectFwe(SelectPercentile(data, SelectPercentile.percentile=39, SelectPercentile.score_func=f_regression), SelectFwe.alpha=0.037, SelectFwe.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectFwe(SelectPercentile(data, SelectPercentile.percentile=39, SelectPercentile.score_func=f_regression), SelectFwe.alpha=0.025, SelectFwe.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(SelectPercentile(data, SelectPercentile.percentile=97, SelectPercentile.score_func=f_regression), SelectPercentile.percentile=39, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), SelectPercentile.percentile=57, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(PolynomialFeatures(SelectPercentile(data, SelectPercentile.percentile=95, SelectPercentile.score_func=f_regression), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LassoLarsCV.normalize=False)", "LassoLarsCV(PolynomialFeatures(SelectPercentile(data, SelectPercentile.percentile=78, SelectPercentile.score_func=f_regression), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LassoLarsCV.normalize=False)", "LassoLarsCV(PolynomialFeatures(SelectPercentile(data, SelectPercentile.percentile=76, SelectPercentile.score_func=f_regression), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LassoLarsCV.normalize=False)", "LassoLarsCV(PolynomialFeatures(SelectPercentile(data, SelectPercentile.percentile=92, SelectPercentile.score_func=f_regression), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LassoLarsCV.normalize=False)", "LassoLarsCV(PolynomialFeatures(SelectPercentile(data, SelectPercentile.percentile=91, SelectPercentile.score_func=f_regression), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LassoLarsCV.normalize=False)", "LassoLarsCV(PolynomialFeatures(RobustScaler(data), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), SelectPercentile.percentile=49, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), SelectPercentile.percentile=75, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), SelectPercentile.percentile=84, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)"], "Allstate_Claims_Severity": ["LinearSVR(MinMaxScaler(data), LinearSVR.C=10.0, LinearSVR.dual=False, LinearSVR.epsilon=1.0, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.0001)", "LassoLarsCV(data, LassoLarsCV.normalize=True)", "LassoLarsCV(SelectFwe(data, SelectFwe.alpha=0.016, SelectFwe.score_func=f_regression), LassoLarsCV.normalize=True)", "LassoLarsCV(MinMaxScaler(data), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectFwe(data, SelectFwe.alpha=0.016, SelectFwe.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(data, LassoLarsCV.normalize=False)", "LinearSVR(MinMaxScaler(data), LinearSVR.C=10.0, LinearSVR.dual=False, LinearSVR.epsilon=1.0, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.01)", "LassoLarsCV(RobustScaler(data), LassoLarsCV.normalize=False)", "LinearSVR(StandardScaler(data), LinearSVR.C=15.0, LinearSVR.dual=False, LinearSVR.epsilon=0.01, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.1)", "LinearSVR(SelectPercentile(StandardScaler(data), SelectPercentile.percentile=47, SelectPercentile.score_func=f_regression), LinearSVR.C=15.0, LinearSVR.dual=False, LinearSVR.epsilon=0.01, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.1)", "LassoLarsCV(data, LassoLarsCV.normalize=True)", "LassoLarsCV(SelectFwe(data, SelectFwe.alpha=0.042, SelectFwe.score_func=f_regression), LassoLarsCV.normalize=True)", "GradientBoostingRegressor(SelectPercentile(data, SelectPercentile.percentile=16, SelectPercentile.score_func=f_regression), GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='absolute_error', GradientBoostingRegressor.max_depth=4, GradientBoostingRegressor.max_features=0.8500000000000001, GradientBoostingRegressor.min_samples_leaf=20, GradientBoostingRegressor.min_samples_split=15, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.7000000000000001)", "LassoLarsCV(MaxAbsScaler(data), LassoLarsCV.normalize=False)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=16, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.1, RandomForestRegressor.min_samples_leaf=17, RandomForestRegressor.min_samples_split=10, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=16, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.1, RandomForestRegressor.min_samples_leaf=17, RandomForestRegressor.min_samples_split=10, RandomForestRegressor.n_estimators=100)", "GradientBoostingRegressor(VarianceThreshold(data, VarianceThreshold.threshold=0.15000000000000002), GradientBoostingRegressor.alpha=0.95, GradientBoostingRegressor.learning_rate=1.0, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=3, GradientBoostingRegressor.max_features=0.35000000000000003, GradientBoostingRegressor.min_samples_leaf=16, GradientBoostingRegressor.min_samples_split=9, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.7000000000000001)", "LassoLarsCV(data, LassoLarsCV.normalize=False)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=8, DecisionTreeRegressor.min_samples_leaf=8, DecisionTreeRegressor.min_samples_split=4)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=8, DecisionTreeRegressor.min_samples_leaf=14, DecisionTreeRegressor.min_samples_split=4)", "LassoLarsCV(StandardScaler(data), LassoLarsCV.normalize=False)", "LassoLarsCV(MinMaxScaler(data), LassoLarsCV.normalize=True)", "LassoLarsCV(data, LassoLarsCV.normalize=True)", "LassoLarsCV(data, LassoLarsCV.normalize=False)", "LinearSVR(MinMaxScaler(MaxAbsScaler(data)), LinearSVR.C=0.001, LinearSVR.dual=False, LinearSVR.epsilon=0.01, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=1e-05)", "LassoLarsCV(MinMaxScaler(data), LassoLarsCV.normalize=False)", "LassoLarsCV(RobustScaler(data), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(data, SelectPercentile.percentile=63, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(MaxAbsScaler(data), LassoLarsCV.normalize=False)", "LassoLarsCV(Normalizer(data, Normalizer.norm='max'), LassoLarsCV.normalize=False)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=3, GradientBoostingRegressor.max_features=0.05, GradientBoostingRegressor.min_samples_leaf=20, GradientBoostingRegressor.min_samples_split=4, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6000000000000001)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=3, GradientBoostingRegressor.max_features=0.05, GradientBoostingRegressor.min_samples_leaf=13, GradientBoostingRegressor.min_samples_split=4, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6000000000000001)", "LassoLarsCV(MaxAbsScaler(data), LassoLarsCV.normalize=False)", "LassoLarsCV(MaxAbsScaler(data), LassoLarsCV.normalize=True)", "LassoLarsCV(data, LassoLarsCV.normalize=True)", "LassoLarsCV(Normalizer(data, Normalizer.norm='l2'), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectFwe(data, SelectFwe.alpha=0.009000000000000001, SelectFwe.score_func=f_regression), LassoLarsCV.normalize=True)", "DecisionTreeRegressor(MaxAbsScaler(data), DecisionTreeRegressor.max_depth=10, DecisionTreeRegressor.min_samples_leaf=11, DecisionTreeRegressor.min_samples_split=11)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=1.0, GradientBoostingRegressor.loss='squared_error', GradientBoostingRegressor.max_depth=3, GradientBoostingRegressor.max_features=0.05, GradientBoostingRegressor.min_samples_leaf=13, GradientBoostingRegressor.min_samples_split=4, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6000000000000001)", "LassoLarsCV(data, LassoLarsCV.normalize=False)", "LassoLarsCV(MaxAbsScaler(data), LassoLarsCV.normalize=False)", "LinearSVR(RobustScaler(data), LinearSVR.C=20.0, LinearSVR.dual=False, LinearSVR.epsilon=0.001, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.0001)", "LassoLarsCV(data, LassoLarsCV.normalize=True)", "LassoLarsCV(RobustScaler(data), LassoLarsCV.normalize=True)", "LassoLarsCV(RobustScaler(RobustScaler(data)), LassoLarsCV.normalize=True)", "LassoLarsCV(data, LassoLarsCV.normalize=False)", "ElasticNetCV(StandardScaler(SelectPercentile(data, SelectPercentile.percentile=30, SelectPercentile.score_func=f_regression)), ElasticNetCV.l1_ratio=0.65, ElasticNetCV.tol=0.1)", "ElasticNetCV(StandardScaler(Normalizer(data, Normalizer.norm='l1')), ElasticNetCV.l1_ratio=0.55, ElasticNetCV.tol=0.1)", "DecisionTreeRegressor(Normalizer(MaxAbsScaler(data), Normalizer.norm='l2'), DecisionTreeRegressor.max_depth=7, DecisionTreeRegressor.min_samples_leaf=6, DecisionTreeRegressor.min_samples_split=11)", "DecisionTreeRegressor(Normalizer(MaxAbsScaler(data), Normalizer.norm='l1'), DecisionTreeRegressor.max_depth=7, DecisionTreeRegressor.min_samples_leaf=6, DecisionTreeRegressor.min_samples_split=11)", "LassoLarsCV(data, LassoLarsCV.normalize=True)", "LassoLarsCV(SelectFwe(data, SelectFwe.alpha=0.017, SelectFwe.score_func=f_regression), LassoLarsCV.normalize=True)", "LassoLarsCV(Normalizer(data, Normalizer.norm='l2'), LassoLarsCV.normalize=True)", "LassoLarsCV(SelectPercentile(MaxAbsScaler(data), SelectPercentile.percentile=58, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "DecisionTreeRegressor(MaxAbsScaler(data), DecisionTreeRegressor.max_depth=9, DecisionTreeRegressor.min_samples_leaf=12, DecisionTreeRegressor.min_samples_split=18)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=9, DecisionTreeRegressor.min_samples_leaf=12, DecisionTreeRegressor.min_samples_split=18)", "DecisionTreeRegressor(SelectFwe(data, SelectFwe.alpha=0.04, SelectFwe.score_func=f_regression), DecisionTreeRegressor.max_depth=10, DecisionTreeRegressor.min_samples_leaf=6, DecisionTreeRegressor.min_samples_split=10)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=10, DecisionTreeRegressor.min_samples_leaf=6, DecisionTreeRegressor.min_samples_split=10)", "DecisionTreeRegressor(MinMaxScaler(data), DecisionTreeRegressor.max_depth=10, DecisionTreeRegressor.min_samples_leaf=6, DecisionTreeRegressor.min_samples_split=10)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=9, DecisionTreeRegressor.min_samples_leaf=3, DecisionTreeRegressor.min_samples_split=5)", "LassoLarsCV(StandardScaler(MinMaxScaler(data)), LassoLarsCV.normalize=True)", "LassoLarsCV(MaxAbsScaler(MinMaxScaler(data)), LassoLarsCV.normalize=True)", "LassoLarsCV(data, LassoLarsCV.normalize=True)", "LinearSVR(VarianceThreshold(StandardScaler(SelectPercentile(data, SelectPercentile.percentile=26, SelectPercentile.score_func=f_regression)), VarianceThreshold.threshold=0.35000000000000003), LinearSVR.C=20.0, LinearSVR.dual=False, LinearSVR.epsilon=0.1, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.001)", "LinearSVR(StandardScaler(SelectPercentile(data, SelectPercentile.percentile=26, SelectPercentile.score_func=f_regression)), LinearSVR.C=20.0, LinearSVR.dual=False, LinearSVR.epsilon=0.1, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.001)", "LassoLarsCV(data, LassoLarsCV.normalize=False)", "LassoLarsCV(RobustScaler(data), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(MaxAbsScaler(data), SelectPercentile.percentile=70, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(SelectPercentile(data, SelectPercentile.percentile=96, SelectPercentile.score_func=f_regression), SelectPercentile.percentile=70, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "ElasticNetCV(StandardScaler(MinMaxScaler(data)), ElasticNetCV.l1_ratio=0.55, ElasticNetCV.tol=0.0001)", "LassoLarsCV(SelectPercentile(data, SelectPercentile.percentile=86, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=True)", "LassoLarsCV(MinMaxScaler(data), LassoLarsCV.normalize=False)", "LassoLarsCV(MinMaxScaler(RobustScaler(data)), LassoLarsCV.normalize=False)", "LassoLarsCV(data, LassoLarsCV.normalize=True)", "LassoLarsCV(data, LassoLarsCV.normalize=False)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=9, DecisionTreeRegressor.min_samples_leaf=14, DecisionTreeRegressor.min_samples_split=14)", "DecisionTreeRegressor(MaxAbsScaler(data), DecisionTreeRegressor.max_depth=8, DecisionTreeRegressor.min_samples_leaf=18, DecisionTreeRegressor.min_samples_split=13)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=8, DecisionTreeRegressor.min_samples_leaf=18, DecisionTreeRegressor.min_samples_split=13)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=5, DecisionTreeRegressor.min_samples_leaf=18, DecisionTreeRegressor.min_samples_split=13)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=5, DecisionTreeRegressor.min_samples_leaf=14, DecisionTreeRegressor.min_samples_split=14)", "GradientBoostingRegressor(data, GradientBoostingRegressor.alpha=0.8, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=5, GradientBoostingRegressor.max_features=0.05, GradientBoostingRegressor.min_samples_leaf=10, GradientBoostingRegressor.min_samples_split=2, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.2)", "LassoLarsCV(PCA(data, PCA.iterated_power=1, PCA.svd_solver='randomized'), LassoLarsCV.normalize=False)", "LassoLarsCV(data, LassoLarsCV.normalize=True)", "LassoLarsCV(SelectPercentile(StandardScaler(data), SelectPercentile.percentile=61, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=True)", "LassoLarsCV(data, LassoLarsCV.normalize=False)", "ElasticNetCV(StandardScaler(StandardScaler(data)), ElasticNetCV.l1_ratio=0.55, ElasticNetCV.tol=0.0001)", "DecisionTreeRegressor(StandardScaler(data), DecisionTreeRegressor.max_depth=8, DecisionTreeRegressor.min_samples_leaf=6, DecisionTreeRegressor.min_samples_split=12)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=8, DecisionTreeRegressor.min_samples_leaf=6, DecisionTreeRegressor.min_samples_split=12)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=8, DecisionTreeRegressor.min_samples_leaf=5, DecisionTreeRegressor.min_samples_split=12)", "DecisionTreeRegressor(MaxAbsScaler(data), DecisionTreeRegressor.max_depth=7, DecisionTreeRegressor.min_samples_leaf=12, DecisionTreeRegressor.min_samples_split=10)"], "abalone": ["RandomForestRegressor(PCA(data, PCA.iterated_power=2, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.6000000000000001, RandomForestRegressor.min_samples_leaf=9, RandomForestRegressor.min_samples_split=11, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(data, PCA.iterated_power=4, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.6000000000000001, RandomForestRegressor.min_samples_leaf=6, RandomForestRegressor.min_samples_split=17, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(Normalizer(data, Normalizer.norm='max'), PCA.iterated_power=2, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.6000000000000001, RandomForestRegressor.min_samples_leaf=15, RandomForestRegressor.min_samples_split=11, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(PCA(data, PCA.iterated_power=2, PCA.svd_solver='randomized'), Normalizer.norm='l1'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.6000000000000001, RandomForestRegressor.min_samples_leaf=8, RandomForestRegressor.min_samples_split=11, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.6000000000000001, RandomForestRegressor.min_samples_leaf=13, RandomForestRegressor.min_samples_split=12, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(SelectFwe(data, SelectFwe.alpha=0.021, SelectFwe.score_func=f_regression), PCA.iterated_power=6, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.7000000000000001, RandomForestRegressor.min_samples_leaf=10, RandomForestRegressor.min_samples_split=11, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.6000000000000001, RandomForestRegressor.min_samples_leaf=12, RandomForestRegressor.min_samples_split=17, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=1.0, RandomForestRegressor.min_samples_leaf=10, RandomForestRegressor.min_samples_split=6, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(data, PCA.iterated_power=1, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.7000000000000001, RandomForestRegressor.min_samples_leaf=10, RandomForestRegressor.min_samples_split=11, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.6000000000000001, RandomForestRegressor.min_samples_leaf=6, RandomForestRegressor.min_samples_split=11, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(data, PCA.iterated_power=10, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=10, RandomForestRegressor.min_samples_split=20, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(data, PCA.iterated_power=2, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=10, RandomForestRegressor.min_samples_split=11, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(data, PCA.iterated_power=5, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=10, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(data, PCA.iterated_power=4, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=10, RandomForestRegressor.min_samples_split=11, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(data, PCA.iterated_power=2, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.7500000000000001, RandomForestRegressor.min_samples_leaf=10, RandomForestRegressor.min_samples_split=17, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(data, PCA.iterated_power=9, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.5, RandomForestRegressor.min_samples_leaf=10, RandomForestRegressor.min_samples_split=9, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(data, PCA.iterated_power=5, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=8, RandomForestRegressor.min_samples_split=19, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(data, PCA.iterated_power=9, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=8, RandomForestRegressor.min_samples_split=13, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(PCA(data, PCA.iterated_power=2, PCA.svd_solver='randomized')), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.7500000000000001, RandomForestRegressor.min_samples_leaf=10, RandomForestRegressor.min_samples_split=19, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(data, PCA.iterated_power=9, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.5, RandomForestRegressor.min_samples_leaf=10, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(Normalizer(PCA(data, PCA.iterated_power=3, PCA.svd_solver='randomized'), Normalizer.norm='l2'), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=15, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PCA(data, PCA.iterated_power=3, PCA.svd_solver='randomized'), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=15, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PCA(PCA(data, PCA.iterated_power=5, PCA.svd_solver='randomized'), PCA.iterated_power=2, PCA.svd_solver='randomized'), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=16, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(Normalizer(PCA(data, PCA.iterated_power=3, PCA.svd_solver='randomized'), Normalizer.norm='l1'), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=16, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(Normalizer(PCA(data, PCA.iterated_power=5, PCA.svd_solver='randomized'), Normalizer.norm='l1'), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=13, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PCA(SelectPercentile(data, SelectPercentile.percentile=85, SelectPercentile.score_func=f_regression), PCA.iterated_power=5, PCA.svd_solver='randomized'), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=15, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PCA(data, PCA.iterated_power=7, PCA.svd_solver='randomized'), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=18, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(Normalizer(PCA(data, PCA.iterated_power=7, PCA.svd_solver='randomized'), Normalizer.norm='l1'), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=16, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectPercentile(PCA(data, PCA.iterated_power=5, PCA.svd_solver='randomized'), SelectPercentile.percentile=93, SelectPercentile.score_func=f_regression), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=15, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(Normalizer(PCA(data, PCA.iterated_power=3, PCA.svd_solver='randomized'), Normalizer.norm='l1'), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=18, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(PCA(data, PCA.iterated_power=10, PCA.svd_solver='randomized'), Normalizer.norm='l2'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.7500000000000001, RandomForestRegressor.min_samples_leaf=12, RandomForestRegressor.min_samples_split=19, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized'), Normalizer.norm='l2'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.7000000000000001, RandomForestRegressor.min_samples_leaf=12, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(PCA(data, PCA.iterated_power=1, PCA.svd_solver='randomized'), Normalizer.norm='l2'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.8500000000000001, RandomForestRegressor.min_samples_leaf=12, RandomForestRegressor.min_samples_split=19, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), Normalizer.norm='l2'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.7500000000000001, RandomForestRegressor.min_samples_leaf=12, RandomForestRegressor.min_samples_split=19, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(PCA(data, PCA.iterated_power=7, PCA.svd_solver='randomized'), Normalizer.norm='l1'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.7500000000000001, RandomForestRegressor.min_samples_leaf=12, RandomForestRegressor.min_samples_split=19, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(PCA(data, PCA.iterated_power=10, PCA.svd_solver='randomized'), Normalizer.norm='l1'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.7000000000000001, RandomForestRegressor.min_samples_leaf=12, RandomForestRegressor.min_samples_split=19, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(data, PCA.iterated_power=1, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.8500000000000001, RandomForestRegressor.min_samples_leaf=12, RandomForestRegressor.min_samples_split=15, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(PCA(data, PCA.iterated_power=2, PCA.svd_solver='randomized'), Normalizer.norm='l1'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.7000000000000001, RandomForestRegressor.min_samples_leaf=6, RandomForestRegressor.min_samples_split=19, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized'), Normalizer.norm='l1'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.5, RandomForestRegressor.min_samples_leaf=7, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(data, PCA.iterated_power=2, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.6000000000000001, RandomForestRegressor.min_samples_leaf=6, RandomForestRegressor.min_samples_split=19, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(Normalizer(PCA(data, PCA.iterated_power=5, PCA.svd_solver='randomized'), Normalizer.norm='l1'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=19, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(Normalizer(PCA(data, PCA.iterated_power=4, PCA.svd_solver='randomized'), Normalizer.norm='l1'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=15, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PCA(SelectPercentile(data, SelectPercentile.percentile=94, SelectPercentile.score_func=f_regression), PCA.iterated_power=4, PCA.svd_solver='randomized'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=15, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PCA(data, PCA.iterated_power=1, PCA.svd_solver='randomized'), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=16, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(Normalizer(PCA(data, PCA.iterated_power=10, PCA.svd_solver='randomized'), Normalizer.norm='max'), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=15, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(Normalizer(PCA(data, PCA.iterated_power=2, PCA.svd_solver='randomized'), Normalizer.norm='l2'), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=15, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(Normalizer(PCA(data, PCA.iterated_power=10, PCA.svd_solver='randomized'), Normalizer.norm='l2'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=15, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(Normalizer(PCA(data, PCA.iterated_power=3, PCA.svd_solver='randomized'), Normalizer.norm='l2'), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=15, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PCA(data, PCA.iterated_power=9, PCA.svd_solver='randomized'), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=12, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(PCA(data, PCA.iterated_power=1, PCA.svd_solver='randomized'), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=12, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(PCA(data, PCA.iterated_power=2, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.8, RandomForestRegressor.min_samples_leaf=13, RandomForestRegressor.min_samples_split=10, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(PCA(data, PCA.iterated_power=4, PCA.svd_solver='randomized'), Normalizer.norm='l2'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=1.0, RandomForestRegressor.min_samples_leaf=10, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(PCA(data, PCA.iterated_power=10, PCA.svd_solver='randomized'), Normalizer.norm='l2'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=10, RandomForestRegressor.min_samples_split=10, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(PCA(data, PCA.iterated_power=4, PCA.svd_solver='randomized'), Normalizer.norm='l2'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.8, RandomForestRegressor.min_samples_leaf=10, RandomForestRegressor.min_samples_split=20, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(PCA(data, PCA.iterated_power=10, PCA.svd_solver='randomized'), Normalizer.norm='l1'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=10, RandomForestRegressor.min_samples_split=13, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.8, RandomForestRegressor.min_samples_leaf=11, RandomForestRegressor.min_samples_split=6, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(data, PCA.iterated_power=2, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.8, RandomForestRegressor.min_samples_leaf=11, RandomForestRegressor.min_samples_split=12, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(data, PCA.iterated_power=10, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=1.0, RandomForestRegressor.min_samples_leaf=13, RandomForestRegressor.min_samples_split=8, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(data, PCA.iterated_power=4, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.8, RandomForestRegressor.min_samples_leaf=12, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(data, PCA.iterated_power=2, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.8, RandomForestRegressor.min_samples_leaf=11, RandomForestRegressor.min_samples_split=20, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(PCA(data, PCA.iterated_power=3, PCA.svd_solver='randomized'), Normalizer.norm='l2'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=19, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized'), Normalizer.norm='l2'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=14, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(PCA(data, PCA.iterated_power=3, PCA.svd_solver='randomized'), Normalizer.norm='l2'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=14, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(data, PCA.iterated_power=3, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=16, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(PCA(data, PCA.iterated_power=9, PCA.svd_solver='randomized'), Normalizer.norm='l2'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=17, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(PCA(data, PCA.iterated_power=9, PCA.svd_solver='randomized'), Normalizer.norm='l2'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.7000000000000001, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=14, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), Normalizer.norm='l2'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=14, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(data, PCA.iterated_power=9, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.4, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=15, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(PCA(data, PCA.iterated_power=3, PCA.svd_solver='randomized'), Normalizer.norm='l1'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.45, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=19, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(Normalizer(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized'), Normalizer.norm='max'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.8500000000000001, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=16, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(PCA(Normalizer(data, Normalizer.norm='l2'), PCA.iterated_power=10, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=8, RandomForestRegressor.min_samples_split=17, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(Normalizer(data, Normalizer.norm='l2'), PCA.iterated_power=8, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.6000000000000001, RandomForestRegressor.min_samples_leaf=12, RandomForestRegressor.min_samples_split=14, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(PCA(data, PCA.iterated_power=10, PCA.svd_solver='randomized'), Normalizer.norm='l2'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.7000000000000001, RandomForestRegressor.min_samples_leaf=8, RandomForestRegressor.min_samples_split=17, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(Normalizer(data, Normalizer.norm='l2'), PCA.iterated_power=6, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.6000000000000001, RandomForestRegressor.min_samples_leaf=10, RandomForestRegressor.min_samples_split=15, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(Normalizer(data, Normalizer.norm='l2'), PCA.iterated_power=8, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=8, RandomForestRegressor.min_samples_split=17, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized'), Normalizer.norm='l2'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.6000000000000001, RandomForestRegressor.min_samples_leaf=10, RandomForestRegressor.min_samples_split=14, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(PCA(data, PCA.iterated_power=3, PCA.svd_solver='randomized'), PCA.iterated_power=8, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.6000000000000001, RandomForestRegressor.min_samples_leaf=8, RandomForestRegressor.min_samples_split=14, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=12, RandomForestRegressor.min_samples_split=17, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(data, PCA.iterated_power=4, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.6000000000000001, RandomForestRegressor.min_samples_leaf=10, RandomForestRegressor.min_samples_split=17, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(PCA(data, PCA.iterated_power=2, PCA.svd_solver='randomized')), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.8500000000000001, RandomForestRegressor.min_samples_leaf=8, RandomForestRegressor.min_samples_split=14, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(data, PCA.iterated_power=9, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.9000000000000001, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=16, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(data, PCA.iterated_power=2, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=16, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(data, PCA.iterated_power=10, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.7000000000000001, RandomForestRegressor.min_samples_leaf=4, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(data, PCA.iterated_power=5, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=1.0, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=9, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(data, PCA.iterated_power=7, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=1.0, RandomForestRegressor.min_samples_leaf=10, RandomForestRegressor.min_samples_split=9, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(PCA(data, PCA.iterated_power=9, PCA.svd_solver='randomized')), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.9000000000000001, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=16, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(PCA(data, PCA.iterated_power=9, PCA.svd_solver='randomized'), PCA.iterated_power=10, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.9000000000000001, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=16, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized'), Normalizer.norm='l2'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.4, RandomForestRegressor.min_samples_leaf=6, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(PCA(data, PCA.iterated_power=1, PCA.svd_solver='randomized'), Normalizer.norm='l2'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.7500000000000001, RandomForestRegressor.min_samples_leaf=9, RandomForestRegressor.min_samples_split=8, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(PCA(data, PCA.iterated_power=3, PCA.svd_solver='randomized'), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.9000000000000001, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=16, RandomForestRegressor.n_estimators=100)"], "topo_2_1": ["ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.8, ExtraTreesRegressor.min_samples_leaf=6, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MaxAbsScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=13, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MinMaxScaler(data), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=6, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MinMaxScaler(data), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.9000000000000001, ExtraTreesRegressor.min_samples_leaf=6, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(Normalizer(data, Normalizer.norm='l2'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=13, ExtraTreesRegressor.min_samples_split=8, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MinMaxScaler(data), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=13, ExtraTreesRegressor.min_samples_split=8, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.9000000000000001, ExtraTreesRegressor.min_samples_leaf=6, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MinMaxScaler(data), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=11, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MaxAbsScaler(data), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.7000000000000001, ExtraTreesRegressor.min_samples_leaf=6, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.6000000000000001, ExtraTreesRegressor.min_samples_leaf=13, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(Normalizer(data, Normalizer.norm='l2'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7000000000000001, ExtraTreesRegressor.min_samples_leaf=8, ExtraTreesRegressor.min_samples_split=19, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.9000000000000001, ExtraTreesRegressor.min_samples_leaf=13, ExtraTreesRegressor.min_samples_split=11, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.9000000000000001, ExtraTreesRegressor.min_samples_leaf=8, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.9000000000000001, ExtraTreesRegressor.min_samples_leaf=8, ExtraTreesRegressor.min_samples_split=18, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=7, ExtraTreesRegressor.min_samples_split=18, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectPercentile(data, SelectPercentile.percentile=94, SelectPercentile.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6500000000000001, ExtraTreesRegressor.min_samples_leaf=13, ExtraTreesRegressor.min_samples_split=11, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(StandardScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.1, RandomForestRegressor.min_samples_leaf=20, RandomForestRegressor.min_samples_split=17, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectPercentile(data, SelectPercentile.percentile=94, SelectPercentile.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.9000000000000001, ExtraTreesRegressor.min_samples_leaf=13, ExtraTreesRegressor.min_samples_split=11, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.9000000000000001, ExtraTreesRegressor.min_samples_leaf=19, ExtraTreesRegressor.min_samples_split=11, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.9000000000000001, ExtraTreesRegressor.min_samples_leaf=12, ExtraTreesRegressor.min_samples_split=15, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(Normalizer(data, Normalizer.norm='l1'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.8500000000000001, ExtraTreesRegressor.min_samples_leaf=13, ExtraTreesRegressor.min_samples_split=17, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(StandardScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.8500000000000001, ExtraTreesRegressor.min_samples_leaf=13, ExtraTreesRegressor.min_samples_split=17, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(Normalizer(data, Normalizer.norm='l2')), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.1, RandomForestRegressor.min_samples_leaf=14, RandomForestRegressor.min_samples_split=2, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(Normalizer(data, Normalizer.norm='l1'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.8500000000000001, ExtraTreesRegressor.min_samples_leaf=8, ExtraTreesRegressor.min_samples_split=17, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(Normalizer(data, Normalizer.norm='l1'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.8500000000000001, ExtraTreesRegressor.min_samples_leaf=20, ExtraTreesRegressor.min_samples_split=17, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RobustScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.8500000000000001, ExtraTreesRegressor.min_samples_leaf=20, ExtraTreesRegressor.min_samples_split=17, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RobustScaler(data), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.7000000000000001, ExtraTreesRegressor.min_samples_leaf=8, ExtraTreesRegressor.min_samples_split=15, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.1, RandomForestRegressor.min_samples_leaf=18, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(StandardScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.8500000000000001, ExtraTreesRegressor.min_samples_leaf=14, ExtraTreesRegressor.min_samples_split=17, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(Normalizer(data, Normalizer.norm='l1'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.8500000000000001, ExtraTreesRegressor.min_samples_leaf=5, ExtraTreesRegressor.min_samples_split=17, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(Normalizer(data, Normalizer.norm='l1'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.8500000000000001, ExtraTreesRegressor.min_samples_leaf=20, ExtraTreesRegressor.min_samples_split=16, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(Normalizer(data, Normalizer.norm='l1'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6500000000000001, ExtraTreesRegressor.min_samples_leaf=10, ExtraTreesRegressor.min_samples_split=9, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(Normalizer(data, Normalizer.norm='l2'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=10, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(Normalizer(data, Normalizer.norm='l1'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6500000000000001, ExtraTreesRegressor.min_samples_leaf=9, ExtraTreesRegressor.min_samples_split=5, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(StandardScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.8500000000000001, ExtraTreesRegressor.min_samples_leaf=20, ExtraTreesRegressor.min_samples_split=16, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MinMaxScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6500000000000001, ExtraTreesRegressor.min_samples_leaf=10, ExtraTreesRegressor.min_samples_split=5, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.8, ExtraTreesRegressor.min_samples_leaf=13, ExtraTreesRegressor.min_samples_split=11, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MaxAbsScaler(Normalizer(data, Normalizer.norm='l1')), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6500000000000001, ExtraTreesRegressor.min_samples_leaf=10, ExtraTreesRegressor.min_samples_split=5, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(Normalizer(data, Normalizer.norm='l1'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6500000000000001, ExtraTreesRegressor.min_samples_leaf=10, ExtraTreesRegressor.min_samples_split=12, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RobustScaler(Normalizer(data, Normalizer.norm='l1')), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6500000000000001, ExtraTreesRegressor.min_samples_leaf=10, ExtraTreesRegressor.min_samples_split=5, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MinMaxScaler(data), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=10, ExtraTreesRegressor.min_samples_split=10, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(MinMaxScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=17, RandomForestRegressor.min_samples_split=11, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(MinMaxScaler(data), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=10, ExtraTreesRegressor.min_samples_split=15, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.9000000000000001, ExtraTreesRegressor.min_samples_leaf=10, ExtraTreesRegressor.min_samples_split=15, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=10, ExtraTreesRegressor.min_samples_split=15, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.45, ExtraTreesRegressor.min_samples_leaf=10, ExtraTreesRegressor.min_samples_split=15, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(Normalizer(data, Normalizer.norm='max'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=10, ExtraTreesRegressor.min_samples_split=15, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectPercentile(data, SelectPercentile.percentile=93, SelectPercentile.score_func=f_regression), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=10, ExtraTreesRegressor.min_samples_split=15, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(SelectPercentile(data, SelectPercentile.percentile=93, SelectPercentile.score_func=f_regression), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.15000000000000002, RandomForestRegressor.min_samples_leaf=14, RandomForestRegressor.min_samples_split=8, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=10, ExtraTreesRegressor.min_samples_split=15, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=18, ExtraTreesRegressor.min_samples_split=19, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=18, ExtraTreesRegressor.min_samples_split=19, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MinMaxScaler(data), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=7, ExtraTreesRegressor.min_samples_split=19, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=18, ExtraTreesRegressor.min_samples_split=19, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RobustScaler(data), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=7, ExtraTreesRegressor.min_samples_split=19, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MinMaxScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=7, ExtraTreesRegressor.min_samples_split=19, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=7, ExtraTreesRegressor.min_samples_split=19, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MinMaxScaler(data), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.4, ExtraTreesRegressor.min_samples_leaf=7, ExtraTreesRegressor.min_samples_split=19, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=17, RandomForestRegressor.min_samples_split=4, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(RobustScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=7, ExtraTreesRegressor.min_samples_split=19, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=4, ExtraTreesRegressor.min_samples_split=19, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RobustScaler(data), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=4, ExtraTreesRegressor.min_samples_split=19, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(StandardScaler(data), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=4, ExtraTreesRegressor.min_samples_split=19, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=4, ExtraTreesRegressor.min_samples_split=19, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=4, ExtraTreesRegressor.min_samples_split=19, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(StandardScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=4, ExtraTreesRegressor.min_samples_split=19, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(StandardScaler(data), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=4, ExtraTreesRegressor.min_samples_split=12, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=18, ExtraTreesRegressor.min_samples_split=19, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=18, ExtraTreesRegressor.min_samples_split=19, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=9, ExtraTreesRegressor.min_samples_split=19, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(data), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=17, RandomForestRegressor.min_samples_split=6, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(MaxAbsScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=20, ExtraTreesRegressor.min_samples_split=6, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MaxAbsScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7000000000000001, ExtraTreesRegressor.min_samples_leaf=18, ExtraTreesRegressor.min_samples_split=8, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.25, RandomForestRegressor.min_samples_leaf=17, RandomForestRegressor.min_samples_split=6, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.2, RandomForestRegressor.min_samples_leaf=17, RandomForestRegressor.min_samples_split=16, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(SelectPercentile(data, SelectPercentile.percentile=99, SelectPercentile.score_func=f_regression), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=20, ExtraTreesRegressor.min_samples_split=6, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=20, ExtraTreesRegressor.min_samples_split=6, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MaxAbsScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7000000000000001, ExtraTreesRegressor.min_samples_leaf=18, ExtraTreesRegressor.min_samples_split=14, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=13, ExtraTreesRegressor.min_samples_split=6, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7000000000000001, ExtraTreesRegressor.min_samples_leaf=18, ExtraTreesRegressor.min_samples_split=14, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.6500000000000001, ExtraTreesRegressor.min_samples_leaf=6, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.4, ExtraTreesRegressor.min_samples_leaf=10, ExtraTreesRegressor.min_samples_split=11, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(Normalizer(data, Normalizer.norm='l1'), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.4, ExtraTreesRegressor.min_samples_leaf=10, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.8, ExtraTreesRegressor.min_samples_leaf=10, ExtraTreesRegressor.min_samples_split=11, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.4, ExtraTreesRegressor.min_samples_leaf=6, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.4, ExtraTreesRegressor.min_samples_leaf=10, ExtraTreesRegressor.min_samples_split=13, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RobustScaler(data), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.4, ExtraTreesRegressor.min_samples_leaf=6, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MaxAbsScaler(data), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.4, ExtraTreesRegressor.min_samples_leaf=10, ExtraTreesRegressor.min_samples_split=4, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.45, ExtraTreesRegressor.min_samples_leaf=17, ExtraTreesRegressor.min_samples_split=18, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.55, ExtraTreesRegressor.min_samples_leaf=20, ExtraTreesRegressor.min_samples_split=9, ExtraTreesRegressor.n_estimators=100)"], "diamonds": ["ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.4, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=11, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MaxAbsScaler(data), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=5, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=5, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=5, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(StandardScaler(data), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(Normalizer(MinMaxScaler(data), Normalizer.norm='max'), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=10, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(StandardScaler(data), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.9000000000000001, ExtraTreesRegressor.min_samples_leaf=4, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.8, ExtraTreesRegressor.min_samples_leaf=4, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MinMaxScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.8, ExtraTreesRegressor.min_samples_leaf=4, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RobustScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.8, ExtraTreesRegressor.min_samples_leaf=4, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.8, ExtraTreesRegressor.min_samples_leaf=4, ExtraTreesRegressor.min_samples_split=11, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6500000000000001, ExtraTreesRegressor.min_samples_leaf=4, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MinMaxScaler(data), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=4, ExtraTreesRegressor.min_samples_split=11, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=4, ExtraTreesRegressor.min_samples_split=11, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RobustScaler(data), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.8, ExtraTreesRegressor.min_samples_leaf=4, ExtraTreesRegressor.min_samples_split=11, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MinMaxScaler(data), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.8, ExtraTreesRegressor.min_samples_leaf=4, ExtraTreesRegressor.min_samples_split=11, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.4, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(StandardScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.4, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.4, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=18, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6500000000000001, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.4, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=10, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.4, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(Normalizer(data, Normalizer.norm='l1'), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.4, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.9000000000000001, RandomForestRegressor.min_samples_leaf=3, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "GradientBoostingRegressor(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), GradientBoostingRegressor.alpha=0.75, GradientBoostingRegressor.learning_rate=0.5, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=4, GradientBoostingRegressor.max_features=0.4, GradientBoostingRegressor.min_samples_leaf=15, GradientBoostingRegressor.min_samples_split=15, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6000000000000001)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.4, RandomForestRegressor.min_samples_leaf=14, RandomForestRegressor.min_samples_split=3, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.8, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=9, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=9, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=15, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=9, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MinMaxScaler(Normalizer(data, Normalizer.norm='max')), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=15, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(data), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.8, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=19, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(RobustScaler(data), RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6000000000000001, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=20, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(MaxAbsScaler(data), RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.8, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=20, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.8, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=19, RandomForestRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.6000000000000001, RandomForestRegressor.min_samples_leaf=1, RandomForestRegressor.min_samples_split=20, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(MinMaxScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=5, ExtraTreesRegressor.min_samples_split=17, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MaxAbsScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=5, ExtraTreesRegressor.min_samples_split=17, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=5, ExtraTreesRegressor.min_samples_split=17, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(Normalizer(data, Normalizer.norm='l1'), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=5, ExtraTreesRegressor.min_samples_split=17, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.8500000000000001, ExtraTreesRegressor.min_samples_leaf=10, ExtraTreesRegressor.min_samples_split=8, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RobustScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.8500000000000001, ExtraTreesRegressor.min_samples_leaf=10, ExtraTreesRegressor.min_samples_split=8, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.8500000000000001, ExtraTreesRegressor.min_samples_leaf=12, ExtraTreesRegressor.min_samples_split=8, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RobustScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.8500000000000001, ExtraTreesRegressor.min_samples_leaf=12, ExtraTreesRegressor.min_samples_split=8, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RobustScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.8500000000000001, ExtraTreesRegressor.min_samples_leaf=12, ExtraTreesRegressor.min_samples_split=15, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(StandardScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=1.0, ExtraTreesRegressor.min_samples_leaf=16, ExtraTreesRegressor.min_samples_split=8, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MaxAbsScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=6, ExtraTreesRegressor.min_samples_split=17, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=6, ExtraTreesRegressor.min_samples_split=20, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MaxAbsScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=6, ExtraTreesRegressor.min_samples_split=20, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(StandardScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=6, ExtraTreesRegressor.min_samples_split=20, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7500000000000001, ExtraTreesRegressor.min_samples_leaf=6, ExtraTreesRegressor.min_samples_split=17, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MaxAbsScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.45, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=11, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.45, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=11, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.4, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=11, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=False, RandomForestRegressor.max_features=0.55, RandomForestRegressor.min_samples_leaf=2, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(RobustScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6500000000000001, ExtraTreesRegressor.min_samples_leaf=7, ExtraTreesRegressor.min_samples_split=17, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(RobustScaler(StandardScaler(data)), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.6500000000000001, ExtraTreesRegressor.min_samples_leaf=7, ExtraTreesRegressor.min_samples_split=17, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MinMaxScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=6, ExtraTreesRegressor.min_samples_split=17, ExtraTreesRegressor.n_estimators=100)", "RandomForestRegressor(data, RandomForestRegressor.bootstrap=True, RandomForestRegressor.max_features=0.9000000000000001, RandomForestRegressor.min_samples_leaf=5, RandomForestRegressor.min_samples_split=5, RandomForestRegressor.n_estimators=100)", "ExtraTreesRegressor(MaxAbsScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=6, ExtraTreesRegressor.min_samples_split=17, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=7, ExtraTreesRegressor.min_samples_split=2, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=7, ExtraTreesRegressor.min_samples_split=17, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=7, ExtraTreesRegressor.min_samples_split=15, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MaxAbsScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=7, ExtraTreesRegressor.min_samples_split=17, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(StandardScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.5, ExtraTreesRegressor.min_samples_leaf=7, ExtraTreesRegressor.min_samples_split=17, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=13, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(StandardScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=13, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=16, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(StandardScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.9000000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=13, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MaxAbsScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=13, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7000000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=16, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(StandardScaler(data), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=13, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.9500000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=16, ExtraTreesRegressor.n_estimators=100)", "GradientBoostingRegressor(StandardScaler(data), GradientBoostingRegressor.alpha=0.85, GradientBoostingRegressor.learning_rate=0.1, GradientBoostingRegressor.loss='huber', GradientBoostingRegressor.max_depth=10, GradientBoostingRegressor.max_features=0.4, GradientBoostingRegressor.min_samples_leaf=4, GradientBoostingRegressor.min_samples_split=7, GradientBoostingRegressor.n_estimators=100, GradientBoostingRegressor.subsample=0.6500000000000001)", "ExtraTreesRegressor(MinMaxScaler(data), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.8500000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=18, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7000000000000001, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=12, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MinMaxScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7000000000000001, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=12, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MinMaxScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7000000000000001, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=14, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.8, ExtraTreesRegressor.min_samples_leaf=1, ExtraTreesRegressor.min_samples_split=12, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(StandardScaler(data), ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7000000000000001, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=14, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7000000000000001, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=14, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.8500000000000001, ExtraTreesRegressor.min_samples_leaf=3, ExtraTreesRegressor.min_samples_split=7, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=False, ExtraTreesRegressor.max_features=0.7000000000000001, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(data, ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.7000000000000001, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=3, ExtraTreesRegressor.n_estimators=100)", "ExtraTreesRegressor(MinMaxScaler(data), ExtraTreesRegressor.bootstrap=True, ExtraTreesRegressor.max_features=0.8, ExtraTreesRegressor.min_samples_leaf=2, ExtraTreesRegressor.min_samples_split=12, ExtraTreesRegressor.n_estimators=100)"], "Buzzinsocialmedia_Twitter": ["LassoLarsCV(RobustScaler(FastICA(data, FastICA.tol=0.65, FastICA.whiten='unit-variance')), LassoLarsCV.normalize=True)", "LassoLarsCV(MinMaxScaler(RobustScaler(FastICA(data, FastICA.tol=0.65, FastICA.whiten='unit-variance'))), LassoLarsCV.normalize=True)", "LassoLarsCV(MinMaxScaler(data), LassoLarsCV.normalize=False)", "LassoLarsCV(FastICA(data, FastICA.tol=0.25, FastICA.whiten='unit-variance'), LassoLarsCV.normalize=False)", "LassoLarsCV(data, LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(data, SelectPercentile.percentile=69, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(RobustScaler(SelectFwe(data, SelectFwe.alpha=0.001, SelectFwe.score_func=f_regression)), LassoLarsCV.normalize=False)", "LassoLarsCV(RobustScaler(data), LassoLarsCV.normalize=False)", "LassoLarsCV(RobustScaler(SelectFwe(data, SelectFwe.alpha=0.001, SelectFwe.score_func=f_regression)), LassoLarsCV.normalize=True)", "LassoLarsCV(MinMaxScaler(data), LassoLarsCV.normalize=True)", "LassoLarsCV(SelectPercentile(StandardScaler(data), SelectPercentile.percentile=61, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=True)", "LassoLarsCV(SelectPercentile(data, SelectPercentile.percentile=61, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=True)", "LassoLarsCV(SelectPercentile(StandardScaler(data), SelectPercentile.percentile=61, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(StandardScaler(data), SelectPercentile.percentile=40, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(MinMaxScaler(PCA(data, PCA.iterated_power=7, PCA.svd_solver='randomized')), LassoLarsCV.normalize=True)", "LinearSVR(FastICA(data, FastICA.tol=1.0, FastICA.whiten='unit-variance'), LinearSVR.C=10.0, LinearSVR.dual=False, LinearSVR.epsilon=0.01, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.01)", "LinearSVR(FastICA(data, FastICA.tol=0.2, FastICA.whiten='unit-variance'), LinearSVR.C=10.0, LinearSVR.dual=False, LinearSVR.epsilon=0.01, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.01)", "LassoLarsCV(data, LassoLarsCV.normalize=True)", "LassoLarsCV(MaxAbsScaler(data), LassoLarsCV.normalize=True)", "LassoLarsCV(MinMaxScaler(data), LassoLarsCV.normalize=True)", "DecisionTreeRegressor(StandardScaler(data), DecisionTreeRegressor.max_depth=10, DecisionTreeRegressor.min_samples_leaf=17, DecisionTreeRegressor.min_samples_split=15)", "DecisionTreeRegressor(StandardScaler(data), DecisionTreeRegressor.max_depth=10, DecisionTreeRegressor.min_samples_leaf=14, DecisionTreeRegressor.min_samples_split=15)", "LassoLarsCV(data, LassoLarsCV.normalize=False)", "DecisionTreeRegressor(StandardScaler(data), DecisionTreeRegressor.max_depth=10, DecisionTreeRegressor.min_samples_leaf=7, DecisionTreeRegressor.min_samples_split=15)", "LassoLarsCV(RobustScaler(data), LassoLarsCV.normalize=False)", "LassoLarsCV(data, LassoLarsCV.normalize=True)", "LassoLarsCV(MaxAbsScaler(data), LassoLarsCV.normalize=True)", "LassoLarsCV(RobustScaler(data), LassoLarsCV.normalize=True)", "LassoLarsCV(MaxAbsScaler(data), LassoLarsCV.normalize=False)", "LassoLarsCV(MinMaxScaler(RobustScaler(data)), LassoLarsCV.normalize=False)", "LassoLarsCV(data, LassoLarsCV.normalize=False)", "LinearSVR(FastICA(data, FastICA.tol=0.05, FastICA.whiten='unit-variance'), LinearSVR.C=0.1, LinearSVR.dual=False, LinearSVR.epsilon=1.0, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.1)", "LinearSVR(FastICA(data, FastICA.tol=0.05, FastICA.whiten='unit-variance'), LinearSVR.C=0.5, LinearSVR.dual=False, LinearSVR.epsilon=1.0, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.1)", "LassoLarsCV(FastICA(data, FastICA.tol=0.30000000000000004, FastICA.whiten='unit-variance'), LassoLarsCV.normalize=True)", "LassoLarsCV(SelectFwe(data, SelectFwe.alpha=0.042, SelectFwe.score_func=f_regression), LassoLarsCV.normalize=True)", "LassoLarsCV(data, LassoLarsCV.normalize=True)", "LassoLarsCV(SelectFwe(data, SelectFwe.alpha=0.018000000000000002, SelectFwe.score_func=f_regression), LassoLarsCV.normalize=True)", "LinearSVR(RobustScaler(data), LinearSVR.C=0.001, LinearSVR.dual=False, LinearSVR.epsilon=0.01, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.01)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=8, DecisionTreeRegressor.min_samples_leaf=14, DecisionTreeRegressor.min_samples_split=4)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=8, DecisionTreeRegressor.min_samples_leaf=8, DecisionTreeRegressor.min_samples_split=4)", "LinearSVR(MinMaxScaler(data), LinearSVR.C=10.0, LinearSVR.dual=False, LinearSVR.epsilon=1.0, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.0001)", "LassoLarsCV(PCA(SelectFwe(data, SelectFwe.alpha=0.025, SelectFwe.score_func=f_regression), PCA.iterated_power=3, PCA.svd_solver='randomized'), LassoLarsCV.normalize=True)", "LassoLarsCV(data, LassoLarsCV.normalize=False)", "LassoLarsCV(FastICA(data, FastICA.tol=0.35000000000000003, FastICA.whiten='unit-variance'), LassoLarsCV.normalize=False)", "LassoLarsCV(FastICA(data, FastICA.tol=0.9, FastICA.whiten='unit-variance'), LassoLarsCV.normalize=True)", "LassoLarsCV(FastICA(data, FastICA.tol=0.9, FastICA.whiten='unit-variance'), LassoLarsCV.normalize=False)", "LinearSVR(StandardScaler(MinMaxScaler(data)), LinearSVR.C=10.0, LinearSVR.dual=False, LinearSVR.epsilon=1.0, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.0001)", "LassoLarsCV(MaxAbsScaler(data), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectFwe(data, SelectFwe.alpha=0.034, SelectFwe.score_func=f_regression), LassoLarsCV.normalize=True)", "LassoLarsCV(data, LassoLarsCV.normalize=True)", "LassoLarsCV(SelectPercentile(MaxAbsScaler(data), SelectPercentile.percentile=58, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(data, LassoLarsCV.normalize=False)", "LassoLarsCV(SelectFwe(data, SelectFwe.alpha=0.023, SelectFwe.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(data, LassoLarsCV.normalize=True)", "LassoLarsCV(SelectFwe(data, SelectFwe.alpha=0.002, SelectFwe.score_func=f_regression), LassoLarsCV.normalize=True)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=10, DecisionTreeRegressor.min_samples_leaf=6, DecisionTreeRegressor.min_samples_split=20)", "ElasticNetCV(VarianceThreshold(SelectFwe(data, SelectFwe.alpha=0.023, SelectFwe.score_func=f_regression), VarianceThreshold.threshold=0.5), ElasticNetCV.l1_ratio=0.35000000000000003, ElasticNetCV.tol=0.0001)", "DecisionTreeRegressor(data, DecisionTreeRegressor.max_depth=10, DecisionTreeRegressor.min_samples_leaf=6, DecisionTreeRegressor.min_samples_split=10)", "ElasticNetCV(data, ElasticNetCV.l1_ratio=0.9, ElasticNetCV.tol=0.01)", "ElasticNetCV(PCA(data, PCA.iterated_power=1, PCA.svd_solver='randomized'), ElasticNetCV.l1_ratio=0.9, ElasticNetCV.tol=0.01)", "LassoLarsCV(SelectPercentile(data, SelectPercentile.percentile=39, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=True)", "LassoLarsCV(VarianceThreshold(FastICA(data, FastICA.tol=0.15000000000000002, FastICA.whiten='unit-variance'), VarianceThreshold.threshold=0.9000000000000001), LassoLarsCV.normalize=True)", "LassoLarsCV(FastICA(data, FastICA.tol=0.15000000000000002, FastICA.whiten='unit-variance'), LassoLarsCV.normalize=True)", "LassoLarsCV(MinMaxScaler(data), LassoLarsCV.normalize=False)", "LassoLarsCV(data, LassoLarsCV.normalize=False)", "LassoLarsCV(SelectFwe(data, SelectFwe.alpha=0.003, SelectFwe.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(data, SelectPercentile.percentile=68, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(data, LassoLarsCV.normalize=True)", "LassoLarsCV(SelectPercentile(data, SelectPercentile.percentile=86, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=True)", "LassoLarsCV(SelectPercentile(data, SelectPercentile.percentile=68, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=True)", "LassoLarsCV(SelectPercentile(MaxAbsScaler(data), SelectPercentile.percentile=58, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(RobustScaler(FastICA(data, FastICA.tol=0.30000000000000004, FastICA.whiten='unit-variance')), LassoLarsCV.normalize=False)", "LassoLarsCV(PCA(data, PCA.iterated_power=9, PCA.svd_solver='randomized'), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(MaxAbsScaler(data), SelectPercentile.percentile=99, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(MaxAbsScaler(data), SelectPercentile.percentile=70, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(data, LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(RobustScaler(data), SelectPercentile.percentile=38, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(StandardScaler(MinMaxScaler(data)), LassoLarsCV.normalize=True)", "LassoLarsCV(MaxAbsScaler(MinMaxScaler(data)), LassoLarsCV.normalize=True)", "LassoLarsCV(SelectPercentile(MaxAbsScaler(data), SelectPercentile.percentile=70, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=True)", "LinearSVR(FastICA(data, FastICA.tol=0.4, FastICA.whiten='unit-variance'), LinearSVR.C=0.5, LinearSVR.dual=True, LinearSVR.epsilon=1.0, LinearSVR.loss='epsilon_insensitive', LinearSVR.tol=0.1)", "LassoLarsCV(FastICA(MaxAbsScaler(data), FastICA.tol=0.30000000000000004, FastICA.whiten='unit-variance'), LassoLarsCV.normalize=True)", "LassoLarsCV(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectFwe(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), SelectFwe.alpha=0.021, SelectFwe.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectFwe(data, SelectFwe.alpha=0.009000000000000001, SelectFwe.score_func=f_regression), LassoLarsCV.normalize=True)", "LassoLarsCV(MaxAbsScaler(MaxAbsScaler(RobustScaler(data))), LassoLarsCV.normalize=True)", "LassoLarsCV(data, LassoLarsCV.normalize=True)", "LassoLarsCV(MaxAbsScaler(data), LassoLarsCV.normalize=True)", "LassoLarsCV(MaxAbsScaler(MaxAbsScaler(data)), LassoLarsCV.normalize=True)", "LassoLarsCV(MinMaxScaler(data), LassoLarsCV.normalize=True)"], "tecator": ["LassoLarsCV(SelectPercentile(VarianceThreshold(data, VarianceThreshold.threshold=0.7000000000000001), SelectPercentile.percentile=98, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=True)", "LassoLarsCV(SelectPercentile(VarianceThreshold(data, VarianceThreshold.threshold=0.55), SelectPercentile.percentile=98, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=True)", "LassoLarsCV(SelectPercentile(VarianceThreshold(data, VarianceThreshold.threshold=0.6500000000000001), SelectPercentile.percentile=98, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(VarianceThreshold(data, VarianceThreshold.threshold=0.5), SelectPercentile.percentile=98, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(VarianceThreshold(data, VarianceThreshold.threshold=0.7000000000000001), SelectPercentile.percentile=98, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(VarianceThreshold(data, VarianceThreshold.threshold=0.4), SelectPercentile.percentile=98, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(VarianceThreshold(data, VarianceThreshold.threshold=0.25), SelectPercentile.percentile=99, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(MinMaxScaler(data), SelectPercentile.percentile=99, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "ElasticNetCV(MinMaxScaler(SelectPercentile(data, SelectPercentile.percentile=99, SelectPercentile.score_func=f_regression)), ElasticNetCV.l1_ratio=1.0, ElasticNetCV.tol=1e-05)", "LassoLarsCV(SelectPercentile(MinMaxScaler(data), SelectPercentile.percentile=98, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(VarianceThreshold(data, VarianceThreshold.threshold=0.8), SelectPercentile.percentile=97, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LassoLarsCV(SelectPercentile(VarianceThreshold(data, VarianceThreshold.threshold=0.8), SelectPercentile.percentile=94, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=True)", "LinearSVR(RobustScaler(data), LinearSVR.C=10.0, LinearSVR.dual=True, LinearSVR.epsilon=0.01, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.001)", "ElasticNetCV(StandardScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.8)), ElasticNetCV.l1_ratio=1.0, ElasticNetCV.tol=1e-05)", "ElasticNetCV(MinMaxScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.8)), ElasticNetCV.l1_ratio=1.0, ElasticNetCV.tol=0.0001)", "LinearSVR(StandardScaler(data), LinearSVR.C=5.0, LinearSVR.dual=True, LinearSVR.epsilon=0.01, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=1e-05)", "ElasticNetCV(StandardScaler(MaxAbsScaler(data)), ElasticNetCV.l1_ratio=0.8, ElasticNetCV.tol=1e-05)", "ElasticNetCV(StandardScaler(RobustScaler(data)), ElasticNetCV.l1_ratio=0.8, ElasticNetCV.tol=1e-05)", "ElasticNetCV(StandardScaler(MinMaxScaler(data)), ElasticNetCV.l1_ratio=0.8, ElasticNetCV.tol=1e-05)", "ElasticNetCV(StandardScaler(data), ElasticNetCV.l1_ratio=0.8, ElasticNetCV.tol=1e-05)", "ElasticNetCV(MinMaxScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.7500000000000001)), ElasticNetCV.l1_ratio=1.0, ElasticNetCV.tol=1e-05)", "ElasticNetCV(MinMaxScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.7500000000000001)), ElasticNetCV.l1_ratio=1.0, ElasticNetCV.tol=0.001)", "ElasticNetCV(MinMaxScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.6500000000000001)), ElasticNetCV.l1_ratio=1.0, ElasticNetCV.tol=1e-05)", "ElasticNetCV(MinMaxScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.6000000000000001)), ElasticNetCV.l1_ratio=1.0, ElasticNetCV.tol=1e-05)", "ElasticNetCV(MinMaxScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.45)), ElasticNetCV.l1_ratio=1.0, ElasticNetCV.tol=1e-05)", "ElasticNetCV(MinMaxScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.4)), ElasticNetCV.l1_ratio=1.0, ElasticNetCV.tol=1e-05)", "ElasticNetCV(MinMaxScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.35000000000000003)), ElasticNetCV.l1_ratio=1.0, ElasticNetCV.tol=1e-05)", "ElasticNetCV(MinMaxScaler(MaxAbsScaler(data)), ElasticNetCV.l1_ratio=1.0, ElasticNetCV.tol=1e-05)", "ElasticNetCV(MinMaxScaler(StandardScaler(data)), ElasticNetCV.l1_ratio=1.0, ElasticNetCV.tol=1e-05)", "ElasticNetCV(MinMaxScaler(data), ElasticNetCV.l1_ratio=1.0, ElasticNetCV.tol=1e-05)", "ElasticNetCV(SelectPercentile(MinMaxScaler(data), SelectPercentile.percentile=98, SelectPercentile.score_func=f_regression), ElasticNetCV.l1_ratio=0.9500000000000001, ElasticNetCV.tol=0.0001)", "ElasticNetCV(SelectPercentile(MinMaxScaler(data), SelectPercentile.percentile=97, SelectPercentile.score_func=f_regression), ElasticNetCV.l1_ratio=0.9500000000000001, ElasticNetCV.tol=0.0001)", "ElasticNetCV(MaxAbsScaler(RobustScaler(data)), ElasticNetCV.l1_ratio=0.9500000000000001, ElasticNetCV.tol=1e-05)", "ElasticNetCV(MinMaxScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.3)), ElasticNetCV.l1_ratio=0.9500000000000001, ElasticNetCV.tol=0.0001)", "ElasticNetCV(MinMaxScaler(MinMaxScaler(data)), ElasticNetCV.l1_ratio=0.9500000000000001, ElasticNetCV.tol=0.0001)", "ElasticNetCV(MinMaxScaler(data), ElasticNetCV.l1_ratio=0.9500000000000001, ElasticNetCV.tol=0.0001)", "ElasticNetCV(MinMaxScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.05)), ElasticNetCV.l1_ratio=0.9500000000000001, ElasticNetCV.tol=0.0001)", "ElasticNetCV(MinMaxScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.15000000000000002)), ElasticNetCV.l1_ratio=0.9500000000000001, ElasticNetCV.tol=0.0001)", "ElasticNetCV(MaxAbsScaler(MinMaxScaler(data)), ElasticNetCV.l1_ratio=0.9500000000000001, ElasticNetCV.tol=0.0001)", "ElasticNetCV(MinMaxScaler(MaxAbsScaler(data)), ElasticNetCV.l1_ratio=0.9500000000000001, ElasticNetCV.tol=0.0001)", "LinearSVR(RobustScaler(MinMaxScaler(data)), LinearSVR.C=25.0, LinearSVR.dual=True, LinearSVR.epsilon=0.001, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.001)", "LinearSVR(PCA(RobustScaler(data), PCA.iterated_power=9, PCA.svd_solver='randomized'), LinearSVR.C=25.0, LinearSVR.dual=True, LinearSVR.epsilon=0.001, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.001)", "ElasticNetCV(MinMaxScaler(RobustScaler(SelectPercentile(data, SelectPercentile.percentile=99, SelectPercentile.score_func=f_regression))), ElasticNetCV.l1_ratio=1.0, ElasticNetCV.tol=0.001)", "ElasticNetCV(MinMaxScaler(SelectPercentile(data, SelectPercentile.percentile=99, SelectPercentile.score_func=f_regression)), ElasticNetCV.l1_ratio=1.0, ElasticNetCV.tol=0.001)", "ElasticNetCV(SelectPercentile(MinMaxScaler(data), SelectPercentile.percentile=99, SelectPercentile.score_func=f_regression), ElasticNetCV.l1_ratio=1.0, ElasticNetCV.tol=0.001)", "LinearSVR(RobustScaler(data), LinearSVR.C=20.0, LinearSVR.dual=True, LinearSVR.epsilon=0.1, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.001)", "ElasticNetCV(MinMaxScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.8)), ElasticNetCV.l1_ratio=1.0, ElasticNetCV.tol=0.001)", "LinearSVR(RobustScaler(data), LinearSVR.C=25.0, LinearSVR.dual=True, LinearSVR.epsilon=0.001, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.001)", "LinearSVR(RobustScaler(data), LinearSVR.C=20.0, LinearSVR.dual=True, LinearSVR.epsilon=0.0001, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.001)", "LinearSVR(RobustScaler(data), LinearSVR.C=25.0, LinearSVR.dual=True, LinearSVR.epsilon=0.01, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.001)", "LinearSVR(PCA(VarianceThreshold(data, VarianceThreshold.threshold=0.7000000000000001), PCA.iterated_power=5, PCA.svd_solver='randomized'), LinearSVR.C=1.0, LinearSVR.dual=False, LinearSVR.epsilon=0.1, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.0001)", "LinearSVR(PCA(VarianceThreshold(data, VarianceThreshold.threshold=0.7000000000000001), PCA.iterated_power=8, PCA.svd_solver='randomized'), LinearSVR.C=1.0, LinearSVR.dual=False, LinearSVR.epsilon=0.1, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=1e-05)", "LinearSVR(PCA(VarianceThreshold(data, VarianceThreshold.threshold=0.7000000000000001), PCA.iterated_power=4, PCA.svd_solver='randomized'), LinearSVR.C=1.0, LinearSVR.dual=False, LinearSVR.epsilon=0.1, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=1e-05)", "LassoLarsCV(SelectPercentile(PCA(data, PCA.iterated_power=5, PCA.svd_solver='randomized'), SelectPercentile.percentile=60, SelectPercentile.score_func=f_regression), LassoLarsCV.normalize=False)", "LinearSVR(PCA(VarianceThreshold(data, VarianceThreshold.threshold=0.25), PCA.iterated_power=2, PCA.svd_solver='randomized'), LinearSVR.C=5.0, LinearSVR.dual=False, LinearSVR.epsilon=0.1, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.0001)", "LinearSVR(PCA(VarianceThreshold(data, VarianceThreshold.threshold=0.45), PCA.iterated_power=1, PCA.svd_solver='randomized'), LinearSVR.C=1.0, LinearSVR.dual=False, LinearSVR.epsilon=0.1, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.0001)", "LinearSVR(PCA(VarianceThreshold(data, VarianceThreshold.threshold=0.4), PCA.iterated_power=1, PCA.svd_solver='randomized'), LinearSVR.C=1.0, LinearSVR.dual=False, LinearSVR.epsilon=0.1, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=0.0001)", "LinearSVR(PCA(VarianceThreshold(data, VarianceThreshold.threshold=0.6000000000000001), PCA.iterated_power=9, PCA.svd_solver='randomized'), LinearSVR.C=1.0, LinearSVR.dual=False, LinearSVR.epsilon=0.1, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=1e-05)", "LinearSVR(PCA(VarianceThreshold(data, VarianceThreshold.threshold=0.5), PCA.iterated_power=9, PCA.svd_solver='randomized'), LinearSVR.C=1.0, LinearSVR.dual=False, LinearSVR.epsilon=0.1, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=1e-05)", "LinearSVR(PCA(VarianceThreshold(data, VarianceThreshold.threshold=0.3), PCA.iterated_power=4, PCA.svd_solver='randomized'), LinearSVR.C=1.0, LinearSVR.dual=False, LinearSVR.epsilon=0.1, LinearSVR.loss='squared_epsilon_insensitive', LinearSVR.tol=1e-05)", "ElasticNetCV(MinMaxScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.8)), ElasticNetCV.l1_ratio=0.9, ElasticNetCV.tol=0.0001)", "ElasticNetCV(MinMaxScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.8)), ElasticNetCV.l1_ratio=0.9, ElasticNetCV.tol=1e-05)", "ElasticNetCV(MinMaxScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.4)), ElasticNetCV.l1_ratio=0.9, ElasticNetCV.tol=0.001)", "ElasticNetCV(MinMaxScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.7000000000000001)), ElasticNetCV.l1_ratio=0.9500000000000001, ElasticNetCV.tol=1e-05)", "ElasticNetCV(MinMaxScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.5)), ElasticNetCV.l1_ratio=0.9500000000000001, ElasticNetCV.tol=0.0001)", "ElasticNetCV(MinMaxScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.35000000000000003)), ElasticNetCV.l1_ratio=0.9500000000000001, ElasticNetCV.tol=0.0001)", "ElasticNetCV(MinMaxScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.5)), ElasticNetCV.l1_ratio=0.9, ElasticNetCV.tol=0.0001)", "ElasticNetCV(MinMaxScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.6000000000000001)), ElasticNetCV.l1_ratio=0.9, ElasticNetCV.tol=0.0001)", "ElasticNetCV(MinMaxScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.4)), ElasticNetCV.l1_ratio=0.9, ElasticNetCV.tol=0.0001)", "ElasticNetCV(MinMaxScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.7000000000000001)), ElasticNetCV.l1_ratio=0.9, ElasticNetCV.tol=0.0001)", "LinearSVR(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized'), LinearSVR.C=1.0, LinearSVR.dual=True, LinearSVR.epsilon=0.1, LinearSVR.loss='epsilon_insensitive', LinearSVR.tol=0.0001)", "LinearSVR(PCA(data, PCA.iterated_power=7, PCA.svd_solver='randomized'), LinearSVR.C=1.0, LinearSVR.dual=True, LinearSVR.epsilon=0.1, LinearSVR.loss='epsilon_insensitive', LinearSVR.tol=0.0001)", "LinearSVR(PCA(data, PCA.iterated_power=1, PCA.svd_solver='randomized'), LinearSVR.C=1.0, LinearSVR.dual=True, LinearSVR.epsilon=0.1, LinearSVR.loss='epsilon_insensitive', LinearSVR.tol=0.0001)", "LinearSVR(PCA(data, PCA.iterated_power=1, PCA.svd_solver='randomized'), LinearSVR.C=1.0, LinearSVR.dual=True, LinearSVR.epsilon=0.1, LinearSVR.loss='epsilon_insensitive', LinearSVR.tol=1e-05)", "LinearSVR(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized'), LinearSVR.C=1.0, LinearSVR.dual=True, LinearSVR.epsilon=0.1, LinearSVR.loss='epsilon_insensitive', LinearSVR.tol=1e-05)", "LinearSVR(PCA(data, PCA.iterated_power=9, PCA.svd_solver='randomized'), LinearSVR.C=1.0, LinearSVR.dual=True, LinearSVR.epsilon=0.1, LinearSVR.loss='epsilon_insensitive', LinearSVR.tol=0.0001)", "LinearSVR(PCA(data, PCA.iterated_power=5, PCA.svd_solver='randomized'), LinearSVR.C=1.0, LinearSVR.dual=True, LinearSVR.epsilon=0.1, LinearSVR.loss='epsilon_insensitive', LinearSVR.tol=0.0001)", "LinearSVR(PCA(VarianceThreshold(data, VarianceThreshold.threshold=0.2), PCA.iterated_power=9, PCA.svd_solver='randomized'), LinearSVR.C=1.0, LinearSVR.dual=True, LinearSVR.epsilon=0.1, LinearSVR.loss='epsilon_insensitive', LinearSVR.tol=0.0001)", "LinearSVR(PCA(data, PCA.iterated_power=5, PCA.svd_solver='randomized'), LinearSVR.C=1.0, LinearSVR.dual=True, LinearSVR.epsilon=0.1, LinearSVR.loss='epsilon_insensitive', LinearSVR.tol=0.001)", "LinearSVR(PCA(PCA(data, PCA.iterated_power=7, PCA.svd_solver='randomized'), PCA.iterated_power=5, PCA.svd_solver='randomized'), LinearSVR.C=1.0, LinearSVR.dual=True, LinearSVR.epsilon=0.1, LinearSVR.loss='epsilon_insensitive', LinearSVR.tol=1e-05)", "ElasticNetCV(StandardScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.6000000000000001)), ElasticNetCV.l1_ratio=0.9, ElasticNetCV.tol=1e-05)", "ElasticNetCV(StandardScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.55)), ElasticNetCV.l1_ratio=0.9, ElasticNetCV.tol=1e-05)", "ElasticNetCV(StandardScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.35000000000000003)), ElasticNetCV.l1_ratio=0.9, ElasticNetCV.tol=1e-05)", "ElasticNetCV(StandardScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.7500000000000001)), ElasticNetCV.l1_ratio=0.9, ElasticNetCV.tol=1e-05)", "ElasticNetCV(StandardScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.3)), ElasticNetCV.l1_ratio=0.9, ElasticNetCV.tol=1e-05)", "ElasticNetCV(StandardScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.2)), ElasticNetCV.l1_ratio=0.9, ElasticNetCV.tol=0.0001)", "ElasticNetCV(StandardScaler(MinMaxScaler(data)), ElasticNetCV.l1_ratio=0.9, ElasticNetCV.tol=0.0001)", "ElasticNetCV(StandardScaler(MaxAbsScaler(data)), ElasticNetCV.l1_ratio=0.9, ElasticNetCV.tol=0.0001)", "ElasticNetCV(StandardScaler(data), ElasticNetCV.l1_ratio=0.9, ElasticNetCV.tol=0.0001)", "ElasticNetCV(VarianceThreshold(StandardScaler(data), VarianceThreshold.threshold=0.05), ElasticNetCV.l1_ratio=0.9, ElasticNetCV.tol=0.0001)"]}