{"kr-vs-kp": ["GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.2, Nystroem.kernel='sigmoid', Nystroem.n_components=7), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.0), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=13, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "RandomForestClassifier(Normalizer(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='polynomial', Nystroem.n_components=1), Normalizer.norm='l1'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=17, RandomForestClassifier.min_samples_split=14, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.75, Nystroem.kernel='sigmoid', Nystroem.n_components=6), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=13, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.15000000000000002)", "GradientBoostingClassifier(SelectPercentile(RBFSampler(data, RBFSampler.gamma=0.9), SelectPercentile.percentile=28, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.7500000000000001, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "DecisionTreeClassifier(FeatureAgglomeration(Binarizer(data, Binarizer.threshold=0.75), FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='average'), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=4, min_samples_leaf=7, min_samples_split=10)", "GradientBoostingClassifier(RBFSampler(FastICA(data, FastICA.tol=0.2, FastICA.whiten='unit-variance'), RBFSampler.gamma=0.8), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=12, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "BernoulliNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='ward'), alpha=0.1, fit_prior=False)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.9), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=4, min_samples_leaf=18, min_samples_split=20)", "BernoulliNB(MinMaxScaler(RBFSampler(data, RBFSampler.gamma=1.0)), alpha=100.0, fit_prior=False)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.0), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='sigmoid', Nystroem.n_components=5), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.9500000000000001, Nystroem.kernel='sigmoid', Nystroem.n_components=6), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.0), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "BernoulliNB(Nystroem(PCA(data, PCA.iterated_power=2, PCA.svd_solver='randomized'), Nystroem.gamma=0.15000000000000002, Nystroem.kernel='rbf', Nystroem.n_components=4), alpha=0.001, fit_prior=True)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='sigmoid', Nystroem.n_components=9), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.0), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "ExtraTreesClassifier(SelectPercentile(Nystroem(data, Nystroem.gamma=0.9500000000000001, Nystroem.kernel='sigmoid', Nystroem.n_components=6), SelectPercentile.percentile=79, SelectPercentile.score_func=f_classif), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=11, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.0), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.25, Nystroem.kernel='sigmoid', Nystroem.n_components=6), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=13, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.55)", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='sigmoid', Nystroem.n_components=8), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=8, min_samples_leaf=19, min_samples_split=11)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.65, Nystroem.kernel='sigmoid', Nystroem.n_components=5), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.7500000000000001, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "RandomForestClassifier(StandardScaler(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='sigmoid', Nystroem.n_components=5)), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.8500000000000001, RandomForestClassifier.min_samples_leaf=11, RandomForestClassifier.min_samples_split=19, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.4, Nystroem.kernel='sigmoid', Nystroem.n_components=6), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.8500000000000001, Nystroem.kernel='sigmoid', Nystroem.n_components=6), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.8, Nystroem.kernel='sigmoid', Nystroem.n_components=2), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.8, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.0), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.55)", "MultinomialNB(SelectFwe(SelectPercentile(data, SelectPercentile.percentile=1, SelectPercentile.score_func=f_classif), SelectFwe.alpha=0.039, SelectFwe.score_func=f_classif), alpha=1.0, fit_prior=False)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.9, Nystroem.kernel='laplacian', Nystroem.n_components=1), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.55)", "KNeighborsClassifier(RBFSampler(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RBFSampler.gamma=0.25), KNeighborsClassifier.n_neighbors=20, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='uniform')", "DecisionTreeClassifier(RBFSampler(Normalizer(data, Normalizer.norm='l1'), RBFSampler.gamma=0.0), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=10, min_samples_leaf=19, min_samples_split=7)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.30000000000000004, Nystroem.kernel='sigmoid', Nystroem.n_components=3), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=13, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "KNeighborsClassifier(Binarizer(Normalizer(data, Normalizer.norm='l1'), Binarizer.threshold=0.25), KNeighborsClassifier.n_neighbors=45, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='uniform')", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='polynomial', Nystroem.n_components=10), alpha=0.01, fit_prior=False)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='sigmoid', Nystroem.n_components=1), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.7500000000000001, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=8, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='sigmoid', Nystroem.n_components=7), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.6000000000000001, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=13, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.0), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.6000000000000001, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=13, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='poly', Nystroem.n_components=5), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.30000000000000004, Nystroem.kernel='sigmoid', Nystroem.n_components=5), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=13, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "MultinomialNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='ward'), alpha=100.0, fit_prior=False)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.0), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=11, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='sigmoid', Nystroem.n_components=9), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.6000000000000001, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=16, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.0), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=11, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "LogisticRegression(Nystroem(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), Nystroem.gamma=0.5, Nystroem.kernel='rbf', Nystroem.n_components=4), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.8500000000000001, Nystroem.kernel='sigmoid', Nystroem.n_components=8), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=11, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.0), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=11, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='poly', Nystroem.n_components=10), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.6000000000000001, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.2, Nystroem.kernel='sigmoid', Nystroem.n_components=8), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "BernoulliNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='ward'), alpha=0.001, fit_prior=False)", "MultinomialNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='complete'), alpha=0.1, fit_prior=True)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.45, Nystroem.kernel='sigmoid', Nystroem.n_components=8), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.0), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.55, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.0), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.45, Nystroem.kernel='sigmoid', Nystroem.n_components=7), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.8500000000000001, Nystroem.kernel='cosine', Nystroem.n_components=2), alpha=1.0, fit_prior=True)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='polynomial', Nystroem.n_components=1), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(Binarizer(Nystroem(data, Nystroem.gamma=0.15000000000000002, Nystroem.kernel='polynomial', Nystroem.n_components=10), Binarizer.threshold=0.75), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='sigmoid', Nystroem.n_components=9), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.55, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=9, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.9500000000000001, Nystroem.kernel='sigmoid', Nystroem.n_components=5), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=13, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.75, Nystroem.kernel='sigmoid', Nystroem.n_components=7), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=1, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.9500000000000001, Nystroem.kernel='sigmoid', Nystroem.n_components=7), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=1, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.55, Nystroem.kernel='sigmoid', Nystroem.n_components=7), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=1, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='sigmoid', Nystroem.n_components=10), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=1, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.5, Nystroem.kernel='sigmoid', Nystroem.n_components=3), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=1, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.75, Nystroem.kernel='sigmoid', Nystroem.n_components=1), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=1, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.0), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=1, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.4, Nystroem.kernel='sigmoid', Nystroem.n_components=8), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=1, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='sigmoid', Nystroem.n_components=7), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=1, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.25, Nystroem.kernel='sigmoid', Nystroem.n_components=4), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=11, GradientBoostingClassifier.min_samples_split=13, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.05, Nystroem.kernel='chi2', Nystroem.n_components=7), alpha=0.01, fit_prior=False)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.4, Nystroem.kernel='sigmoid', Nystroem.n_components=3), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "KNeighborsClassifier(Nystroem(data, Nystroem.gamma=0.30000000000000004, Nystroem.kernel='sigmoid', Nystroem.n_components=8), KNeighborsClassifier.n_neighbors=25, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='distance')", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.0), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.9500000000000001, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GaussianNB(RBFSampler(Binarizer(data, Binarizer.threshold=0.05), RBFSampler.gamma=0.0))", "BernoulliNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l2', FeatureAgglomeration.linkage='complete'), alpha=0.01, fit_prior=False)", "BernoulliNB(PolynomialFeatures(Nystroem(data, Nystroem.gamma=0.5, Nystroem.kernel='rbf', Nystroem.n_components=2), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), alpha=1.0, fit_prior=False)", "MultinomialNB(MaxAbsScaler(Nystroem(data, Nystroem.gamma=0.8500000000000001, Nystroem.kernel='linear', Nystroem.n_components=1)), alpha=0.001, fit_prior=False)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.0), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='chi2', Nystroem.n_components=10), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=8, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "KNeighborsClassifier(FastICA(Binarizer(data, Binarizer.threshold=0.5), FastICA.tol=0.8500000000000001, FastICA.whiten='unit-variance'), KNeighborsClassifier.n_neighbors=6, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='uniform')", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.0), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "RandomForestClassifier(Nystroem(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), Nystroem.gamma=1.0, Nystroem.kernel='laplacian', Nystroem.n_components=2), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.5, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=14, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='sigmoid', Nystroem.n_components=8), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.45, Nystroem.kernel='sigmoid', Nystroem.n_components=7), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='chi2', Nystroem.n_components=5), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='sigmoid', Nystroem.n_components=6), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='sigmoid', Nystroem.n_components=1), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=4, min_samples_leaf=8, min_samples_split=19)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.45, Nystroem.kernel='sigmoid', Nystroem.n_components=3), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='rbf', Nystroem.n_components=2), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)"], "kick": ["MultinomialNB(Normalizer(data, Normalizer.norm='l1'), alpha=0.1, fit_prior=True)", "MultinomialNB(Normalizer(VarianceThreshold(data, VarianceThreshold.threshold=0.8), Normalizer.norm='l2'), alpha=10.0, fit_prior=False)", "LogisticRegression(SelectPercentile(data, SelectPercentile.percentile=77, SelectPercentile.score_func=f_classif), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "BernoulliNB(FastICA(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), FastICA.tol=0.8, FastICA.whiten='unit-variance'), alpha=10.0, fit_prior=True)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.05, Nystroem.kernel='sigmoid', Nystroem.n_components=3), alpha=0.1, fit_prior=False)", "LogisticRegression(Binarizer(Normalizer(data, Normalizer.norm='l2'), Binarizer.threshold=0.05), LogisticRegression.C=0.1, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.1, Nystroem.kernel='sigmoid', Nystroem.n_components=10), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=6, min_samples_leaf=20, min_samples_split=12)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.75, Nystroem.kernel='laplacian', Nystroem.n_components=9), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=20, RandomForestClassifier.n_estimators=100)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.05, Nystroem.kernel='sigmoid', Nystroem.n_components=3), alpha=10.0, fit_prior=False)", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='rbf', Nystroem.n_components=3), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=3, min_samples_leaf=2, min_samples_split=11)", "MultinomialNB(Normalizer(data, Normalizer.norm='l1'), alpha=1.0, fit_prior=True)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=7, min_samples_leaf=16, min_samples_split=9)", "GaussianNB(SelectPercentile(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), SelectPercentile.percentile=65, SelectPercentile.score_func=f_classif))", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.55), alpha=100.0, fit_prior=False)", "GaussianNB(Nystroem(data, Nystroem.gamma=0.1, Nystroem.kernel='laplacian', Nystroem.n_components=7))", "MultinomialNB(Binarizer(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='complete'), Binarizer.threshold=0.2), alpha=0.001, fit_prior=False)", "DecisionTreeClassifier(Nystroem(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='polynomial', Nystroem.n_components=10), Nystroem.gamma=0.6000000000000001, Nystroem.kernel='rbf', Nystroem.n_components=9), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=5, min_samples_leaf=10, min_samples_split=8)", "DecisionTreeClassifier(Nystroem(SelectFwe(data, SelectFwe.alpha=0.008, SelectFwe.score_func=f_classif), Nystroem.gamma=0.6000000000000001, Nystroem.kernel='rbf', Nystroem.n_components=9), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=5, min_samples_leaf=10, min_samples_split=8)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='rbf', Nystroem.n_components=4), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.8500000000000001, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.05, Nystroem.kernel='chi2', Nystroem.n_components=6), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "LogisticRegression(data, LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GradientBoostingClassifier(RobustScaler(RBFSampler(data, RBFSampler.gamma=0.45)), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.05, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=13, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "DecisionTreeClassifier(RBFSampler(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='complete'), RBFSampler.gamma=0.5), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=7, min_samples_leaf=14, min_samples_split=4)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.8500000000000001, Nystroem.kernel='chi2', Nystroem.n_components=9), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=13, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(VarianceThreshold(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l2', FeatureAgglomeration.linkage='average'), VarianceThreshold.threshold=1.0), alpha=100.0, fit_prior=False)", "GradientBoostingClassifier(RBFSampler(RobustScaler(data), RBFSampler.gamma=0.0), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.05, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.15000000000000002)", "GaussianNB(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='chi2', Nystroem.n_components=6))", "KNeighborsClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='chi2', Nystroem.n_components=2), KNeighborsClassifier.n_neighbors=21, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='distance')", "DecisionTreeClassifier(Binarizer(VarianceThreshold(data, VarianceThreshold.threshold=0.35000000000000003), Binarizer.threshold=0.65), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=5, min_samples_leaf=19, min_samples_split=4)", "GaussianNB(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='sigmoid', Nystroem.n_components=9))", "LogisticRegression(data, LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(VarianceThreshold(data, VarianceThreshold.threshold=0.25), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(SelectPercentile(Nystroem(data, Nystroem.gamma=0.05, Nystroem.kernel='chi2', Nystroem.n_components=5), SelectPercentile.percentile=11, SelectPercentile.score_func=f_classif), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=10, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='laplacian', Nystroem.n_components=8), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=9, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(FeatureAgglomeration(Normalizer(data, Normalizer.norm='l2'), FeatureAgglomeration.affinity='l2', FeatureAgglomeration.linkage='complete'), alpha=0.001, fit_prior=True)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.30000000000000004, Nystroem.kernel='rbf', Nystroem.n_components=4), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6000000000000001, min_samples_leaf=8, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "KNeighborsClassifier(RBFSampler(VarianceThreshold(data, VarianceThreshold.threshold=0.7500000000000001), RBFSampler.gamma=0.0), KNeighborsClassifier.n_neighbors=8, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='distance')", "DecisionTreeClassifier(RBFSampler(RBFSampler(data, RBFSampler.gamma=0.4), RBFSampler.gamma=0.15000000000000002), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=3, min_samples_leaf=11, min_samples_split=14)", "GaussianNB(MinMaxScaler(PCA(data, PCA.iterated_power=1, PCA.svd_solver='randomized')))", "LogisticRegression(data, LogisticRegression.C=0.0001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=0.001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GaussianNB(FastICA(RBFSampler(data, RBFSampler.gamma=0.75), FastICA.tol=1.0, FastICA.whiten='unit-variance'))", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=12, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.2)", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.30000000000000004))", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.35000000000000003))", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.8500000000000001, Nystroem.kernel='laplacian', Nystroem.n_components=1), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "KNeighborsClassifier(Nystroem(data, Nystroem.gamma=0.8, Nystroem.kernel='laplacian', Nystroem.n_components=10), KNeighborsClassifier.n_neighbors=23, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='uniform')", "LogisticRegression(data, LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(VarianceThreshold(data, VarianceThreshold.threshold=0.8500000000000001), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=0.001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GradientBoostingClassifier(Binarizer(VarianceThreshold(data, VarianceThreshold.threshold=0.55), Binarizer.threshold=0.30000000000000004), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.5), alpha=0.001, fit_prior=True)", "GradientBoostingClassifier(SelectPercentile(RBFSampler(data, RBFSampler.gamma=0.9), SelectPercentile.percentile=98, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.7500000000000001, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.35000000000000003)", "MultinomialNB(Normalizer(data, Normalizer.norm='l1'), alpha=0.01, fit_prior=False)", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.75))", "BernoulliNB(RBFSampler(PCA(data, PCA.iterated_power=4, PCA.svd_solver='randomized'), RBFSampler.gamma=0.9), alpha=100.0, fit_prior=False)", "KNeighborsClassifier(Binarizer(data, Binarizer.threshold=1.0), KNeighborsClassifier.n_neighbors=46, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='uniform')", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.55, Nystroem.kernel='sigmoid', Nystroem.n_components=1), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=13, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GaussianNB(Nystroem(data, Nystroem.gamma=0.55, Nystroem.kernel='rbf', Nystroem.n_components=4))", "MultinomialNB(Nystroem(data, Nystroem.gamma=0.55, Nystroem.kernel='rbf', Nystroem.n_components=4), alpha=0.01, fit_prior=True)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.4, Nystroem.kernel='sigmoid', Nystroem.n_components=7), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.9500000000000001, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.0), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "MultinomialNB(Nystroem(data, Nystroem.gamma=0.9500000000000001, Nystroem.kernel='chi2', Nystroem.n_components=8), alpha=0.1, fit_prior=True)", "LogisticRegression(data, LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=0.0001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GaussianNB(RBFSampler(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), RBFSampler.gamma=0.1))", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=8, min_samples_leaf=7, min_samples_split=18)", "DecisionTreeClassifier(Nystroem(RBFSampler(data, RBFSampler.gamma=0.2), Nystroem.gamma=0.30000000000000004, Nystroem.kernel='sigmoid', Nystroem.n_components=8), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=6, min_samples_leaf=6, min_samples_split=4)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=7, min_samples_leaf=10, min_samples_split=19)", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.65, Nystroem.kernel='chi2', Nystroem.n_components=2), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=7, min_samples_leaf=14, min_samples_split=10)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='rbf', Nystroem.n_components=10), alpha=100.0, fit_prior=True)", "MultinomialNB(Binarizer(Normalizer(data, Normalizer.norm='l1'), Binarizer.threshold=0.2), alpha=1.0, fit_prior=True)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "LogisticRegression(data, LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.9), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=19, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "DecisionTreeClassifier(RBFSampler(StandardScaler(data), RBFSampler.gamma=0.7000000000000001), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=10, min_samples_leaf=7, min_samples_split=20)", "GaussianNB(StandardScaler(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False)))", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.55, Nystroem.kernel='laplacian', Nystroem.n_components=10), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=15, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "GaussianNB(Nystroem(data, Nystroem.gamma=0.75, Nystroem.kernel='chi2', Nystroem.n_components=5))", "RandomForestClassifier(Normalizer(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='polynomial', Nystroem.n_components=1), Normalizer.norm='l1'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=17, RandomForestClassifier.min_samples_split=14, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(Normalizer(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l2', FeatureAgglomeration.linkage='average'), Normalizer.norm='l2'), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.05, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(Normalizer(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l2', FeatureAgglomeration.linkage='complete'), Normalizer.norm='l1'), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)"], "cmc": ["RandomForestClassifier(SelectFwe(data, SelectFwe.alpha=0.026000000000000002, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=14, RandomForestClassifier.min_samples_split=10, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=13, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(data, SelectFwe.alpha=0.019, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.8, RandomForestClassifier.min_samples_leaf=13, RandomForestClassifier.min_samples_split=9, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(data, SelectFwe.alpha=0.04, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=13, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectPercentile(data, SelectPercentile.percentile=84, SelectPercentile.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=13, RandomForestClassifier.min_samples_split=15, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(data, SelectFwe.alpha=0.029, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7000000000000001, RandomForestClassifier.min_samples_leaf=13, RandomForestClassifier.min_samples_split=19, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(data, SelectFwe.alpha=0.022, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=14, RandomForestClassifier.min_samples_split=15, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='max'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7000000000000001, RandomForestClassifier.min_samples_leaf=19, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(data, SelectFwe.alpha=0.049, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.8, RandomForestClassifier.min_samples_leaf=13, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(data, SelectFwe.alpha=0.022, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=13, RandomForestClassifier.min_samples_split=15, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='max'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=13, RandomForestClassifier.min_samples_split=20, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='max'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7000000000000001, RandomForestClassifier.min_samples_leaf=19, RandomForestClassifier.min_samples_split=20, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='max'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7000000000000001, RandomForestClassifier.min_samples_leaf=14, RandomForestClassifier.min_samples_split=5, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='max'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=15, RandomForestClassifier.min_samples_split=6, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='max'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7000000000000001, RandomForestClassifier.min_samples_leaf=14, RandomForestClassifier.min_samples_split=16, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='max'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7000000000000001, RandomForestClassifier.min_samples_leaf=15, RandomForestClassifier.min_samples_split=5, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='max'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=14, RandomForestClassifier.min_samples_split=16, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='max'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=14, RandomForestClassifier.min_samples_split=5, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='max'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.55, RandomForestClassifier.min_samples_leaf=13, RandomForestClassifier.min_samples_split=5, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='max'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.55, RandomForestClassifier.min_samples_leaf=13, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(StandardScaler(Normalizer(data, Normalizer.norm='max')), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.8500000000000001, RandomForestClassifier.min_samples_leaf=12, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='l2'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=14, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=19, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='max'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7000000000000001, RandomForestClassifier.min_samples_leaf=12, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='max'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.9500000000000001, RandomForestClassifier.min_samples_leaf=15, RandomForestClassifier.min_samples_split=13, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='max'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.9500000000000001, RandomForestClassifier.min_samples_leaf=12, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='max'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.9500000000000001, RandomForestClassifier.min_samples_leaf=15, RandomForestClassifier.min_samples_split=19, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(data, SelectFwe.alpha=0.014, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.55, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=19, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.6000000000000001, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=19, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.55, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=19, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(VarianceThreshold(data, VarianceThreshold.threshold=0.15000000000000002), Normalizer.norm='max'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=19, RandomForestClassifier.min_samples_split=18, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='max'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.6000000000000001, RandomForestClassifier.min_samples_leaf=19, RandomForestClassifier.min_samples_split=18, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='max'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=19, RandomForestClassifier.min_samples_split=18, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(StandardScaler(Normalizer(data, Normalizer.norm='max')), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=19, RandomForestClassifier.min_samples_split=19, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='l2'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=18, RandomForestClassifier.min_samples_split=5, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='max'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=20, RandomForestClassifier.min_samples_split=19, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='max'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=19, RandomForestClassifier.min_samples_split=19, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(Normalizer(data, Normalizer.norm='max'), Normalizer.norm='max'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.6000000000000001, RandomForestClassifier.min_samples_leaf=19, RandomForestClassifier.min_samples_split=19, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(VarianceThreshold(data, VarianceThreshold.threshold=0.1), Normalizer.norm='max'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=19, RandomForestClassifier.min_samples_split=18, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RobustScaler(Normalizer(data, Normalizer.norm='l2')), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=18, RandomForestClassifier.min_samples_split=5, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='l2'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=20, RandomForestClassifier.min_samples_split=14, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='l2'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=20, RandomForestClassifier.min_samples_split=5, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(VarianceThreshold(data, VarianceThreshold.threshold=0.1), Normalizer.norm='l2'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=20, RandomForestClassifier.min_samples_split=14, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='l2'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=20, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(Normalizer(data, Normalizer.norm='l2'), SelectFwe.alpha=0.009000000000000001, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=20, RandomForestClassifier.min_samples_split=5, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='max'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=20, RandomForestClassifier.min_samples_split=14, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectPercentile(Normalizer(data, Normalizer.norm='l2'), SelectPercentile.percentile=67, SelectPercentile.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=20, RandomForestClassifier.min_samples_split=14, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(Normalizer(data, Normalizer.norm='l2'), SelectFwe.alpha=0.036000000000000004, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=20, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='l2'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=20, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(Normalizer(data, Normalizer.norm='l2'), SelectFwe.alpha=0.021, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.55, RandomForestClassifier.min_samples_leaf=20, RandomForestClassifier.min_samples_split=14, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(Normalizer(data, Normalizer.norm='max'), SelectFwe.alpha=0.024, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=15, RandomForestClassifier.min_samples_split=15, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(Normalizer(data, Normalizer.norm='max'), SelectFwe.alpha=0.028, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.8500000000000001, RandomForestClassifier.min_samples_leaf=16, RandomForestClassifier.min_samples_split=12, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(SelectPercentile(data, SelectPercentile.percentile=67, SelectPercentile.score_func=f_classif), SelectFwe.alpha=0.023, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.8500000000000001, RandomForestClassifier.min_samples_leaf=15, RandomForestClassifier.min_samples_split=14, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectPercentile(Normalizer(data, Normalizer.norm='max'), SelectPercentile.percentile=72, SelectPercentile.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.8500000000000001, RandomForestClassifier.min_samples_leaf=18, RandomForestClassifier.min_samples_split=10, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectPercentile(data, SelectPercentile.percentile=67, SelectPercentile.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.8500000000000001, RandomForestClassifier.min_samples_leaf=15, RandomForestClassifier.min_samples_split=13, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(data, SelectFwe.alpha=0.028, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.8500000000000001, RandomForestClassifier.min_samples_leaf=15, RandomForestClassifier.min_samples_split=11, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(MinMaxScaler(data), SelectFwe.alpha=0.028, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.8500000000000001, RandomForestClassifier.min_samples_leaf=15, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(StandardScaler(SelectFwe(data, SelectFwe.alpha=0.028, SelectFwe.score_func=f_classif)), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.8500000000000001, RandomForestClassifier.min_samples_leaf=15, RandomForestClassifier.min_samples_split=16, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(StandardScaler(SelectFwe(data, SelectFwe.alpha=0.027, SelectFwe.score_func=f_classif)), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.8500000000000001, RandomForestClassifier.min_samples_leaf=15, RandomForestClassifier.min_samples_split=12, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(data, SelectFwe.alpha=0.028, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.8500000000000001, RandomForestClassifier.min_samples_leaf=15, RandomForestClassifier.min_samples_split=12, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(Normalizer(data, Normalizer.norm='max'), SelectFwe.alpha=0.037, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7000000000000001, RandomForestClassifier.min_samples_leaf=19, RandomForestClassifier.min_samples_split=11, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectPercentile(Normalizer(data, Normalizer.norm='max'), SelectPercentile.percentile=58, SelectPercentile.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.55, RandomForestClassifier.min_samples_leaf=19, RandomForestClassifier.min_samples_split=17, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(Normalizer(data, Normalizer.norm='max'), SelectFwe.alpha=0.034, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7000000000000001, RandomForestClassifier.min_samples_leaf=19, RandomForestClassifier.min_samples_split=15, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectPercentile(Normalizer(data, Normalizer.norm='max'), SelectPercentile.percentile=42, SelectPercentile.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7000000000000001, RandomForestClassifier.min_samples_leaf=19, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RobustScaler(Normalizer(data, Normalizer.norm='max')), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7000000000000001, RandomForestClassifier.min_samples_leaf=19, RandomForestClassifier.min_samples_split=11, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectPercentile(Normalizer(data, Normalizer.norm='max'), SelectPercentile.percentile=64, SelectPercentile.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7000000000000001, RandomForestClassifier.min_samples_leaf=19, RandomForestClassifier.min_samples_split=16, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(Normalizer(data, Normalizer.norm='max'), SelectFwe.alpha=0.034, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7000000000000001, RandomForestClassifier.min_samples_leaf=19, RandomForestClassifier.min_samples_split=11, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='max'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.7000000000000001, RandomForestClassifier.min_samples_leaf=19, RandomForestClassifier.min_samples_split=9, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='max'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7000000000000001, RandomForestClassifier.min_samples_leaf=19, RandomForestClassifier.min_samples_split=9, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='max'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.55, RandomForestClassifier.min_samples_leaf=19, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='max'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=18, RandomForestClassifier.min_samples_split=14, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='max'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=18, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectPercentile(data, SelectPercentile.percentile=57, SelectPercentile.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=1.0, RandomForestClassifier.min_samples_leaf=18, RandomForestClassifier.min_samples_split=16, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='max'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=19, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='max'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=19, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.2), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.9500000000000001, RandomForestClassifier.min_samples_leaf=20, RandomForestClassifier.min_samples_split=13, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='max'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7000000000000001, RandomForestClassifier.min_samples_leaf=19, RandomForestClassifier.min_samples_split=12, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectPercentile(data, SelectPercentile.percentile=56, SelectPercentile.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=18, RandomForestClassifier.min_samples_split=13, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(data, SelectFwe.alpha=0.043000000000000003, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.9500000000000001, RandomForestClassifier.min_samples_leaf=20, RandomForestClassifier.min_samples_split=13, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(data, SelectFwe.alpha=0.036000000000000004, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=19, RandomForestClassifier.min_samples_split=13, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.8500000000000001, RandomForestClassifier.min_samples_leaf=14, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.8, RandomForestClassifier.min_samples_leaf=11, RandomForestClassifier.min_samples_split=9, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RobustScaler(data), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=12, RandomForestClassifier.min_samples_split=19, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.9500000000000001, RandomForestClassifier.min_samples_leaf=14, RandomForestClassifier.min_samples_split=17, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='l2'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=14, RandomForestClassifier.min_samples_split=13, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.9500000000000001, RandomForestClassifier.min_samples_leaf=16, RandomForestClassifier.min_samples_split=11, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.9000000000000001, RandomForestClassifier.min_samples_leaf=12, RandomForestClassifier.min_samples_split=13, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MinMaxScaler(data), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.8, RandomForestClassifier.min_samples_leaf=14, RandomForestClassifier.min_samples_split=11, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MinMaxScaler(data), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=11, RandomForestClassifier.min_samples_split=17, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.8, RandomForestClassifier.min_samples_leaf=14, RandomForestClassifier.min_samples_split=9, RandomForestClassifier.n_estimators=100)"], "ada": ["RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=20, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=4, RandomForestClassifier.min_samples_split=20, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.4), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=4, RandomForestClassifier.min_samples_split=20, RandomForestClassifier.n_estimators=100)", "MultinomialNB(SelectFwe(data, SelectFwe.alpha=0.028, SelectFwe.score_func=f_classif), alpha=1.0, fit_prior=False)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.65), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=4, RandomForestClassifier.min_samples_split=20, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=20, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=2, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.8), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=4, RandomForestClassifier.min_samples_split=20, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.55), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=4, RandomForestClassifier.min_samples_split=20, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.9), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=20, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.9), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.8), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.45), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "MultinomialNB(SelectFwe(data, SelectFwe.alpha=0.047, SelectFwe.score_func=f_classif), alpha=0.1, fit_prior=True)", "MultinomialNB(SelectFwe(data, SelectFwe.alpha=0.046, SelectFwe.score_func=f_classif), alpha=0.01, fit_prior=False)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(SelectPercentile(RBFSampler(data, RBFSampler.gamma=0.9), SelectPercentile.percentile=28, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.7500000000000001, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.8), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(RBFSampler(Nystroem(data, Nystroem.gamma=0.15000000000000002, Nystroem.kernel='polynomial', Nystroem.n_components=10), RBFSampler.gamma=0.25), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.25), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "MultinomialNB(SelectPercentile(data, SelectPercentile.percentile=56, SelectPercentile.score_func=f_classif), alpha=10.0, fit_prior=False)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7000000000000001)", "KNeighborsClassifier(Normalizer(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), Normalizer.norm='l1'), KNeighborsClassifier.n_neighbors=26, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='distance')", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=8, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.4), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7000000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.55), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7000000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.75), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7000000000000001)", "MultinomialNB(VarianceThreshold(SelectFwe(data, SelectFwe.alpha=0.021, SelectFwe.score_func=f_classif), VarianceThreshold.threshold=0.5), alpha=10.0, fit_prior=True)", "MultinomialNB(SelectFwe(data, SelectFwe.alpha=0.047, SelectFwe.score_func=f_classif), alpha=10.0, fit_prior=False)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.4), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.2), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.75), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.55)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.55)", "MultinomialNB(SelectFwe(data, SelectFwe.alpha=0.027, SelectFwe.score_func=f_classif), alpha=1.0, fit_prior=True)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.65), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.55)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.2), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.5)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.2), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.55)", "GradientBoostingClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.45)", "KNeighborsClassifier(RBFSampler(data, RBFSampler.gamma=1.0), KNeighborsClassifier.n_neighbors=48, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='uniform')", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.2), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.45)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.5), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.55)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.1), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.55)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.25), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.45)", "MultinomialNB(SelectFwe(data, SelectFwe.alpha=0.02, SelectFwe.score_func=f_classif), alpha=1.0, fit_prior=True)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.5), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.55)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.1), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=11, RandomForestClassifier.min_samples_split=19, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.55)", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.15000000000000002))", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.65), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.2), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.9), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=11, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "MultinomialNB(SelectFwe(data, SelectFwe.alpha=0.004, SelectFwe.score_func=f_classif), alpha=0.1, fit_prior=True)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=1.0), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.55), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.9), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "MultinomialNB(SelectPercentile(data, SelectPercentile.percentile=55, SelectPercentile.score_func=f_classif), alpha=10.0, fit_prior=False)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.25), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.75), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.45), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "MultinomialNB(SelectFwe(data, SelectFwe.alpha=0.034, SelectFwe.score_func=f_classif), alpha=1.0, fit_prior=False)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.9), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GaussianNB(StandardScaler(RBFSampler(data, RBFSampler.gamma=0.9500000000000001)))", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.45), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.1), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.8), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.5), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.5), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.5)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.5), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.8), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=8, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.8), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.8), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.5)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "MultinomialNB(SelectPercentile(data, SelectPercentile.percentile=28, SelectPercentile.score_func=f_classif), alpha=0.001, fit_prior=True)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=1.0), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.25), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.1), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=12, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.4), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.65), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=11, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "MultinomialNB(SelectFwe(data, SelectFwe.alpha=0.007, SelectFwe.score_func=f_classif), alpha=0.01, fit_prior=True)"], "adult": ["MultinomialNB(SelectFwe(data, SelectFwe.alpha=0.029, SelectFwe.score_func=f_classif), alpha=100.0, fit_prior=True)", "MultinomialNB(SelectFwe(data, SelectFwe.alpha=0.038, SelectFwe.score_func=f_classif), alpha=10.0, fit_prior=True)", "MultinomialNB(SelectFwe(data, SelectFwe.alpha=0.048, SelectFwe.score_func=f_classif), alpha=0.1, fit_prior=False)", "KNeighborsClassifier(Normalizer(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), Normalizer.norm='l1'), KNeighborsClassifier.n_neighbors=26, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='distance')", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.9500000000000001, Nystroem.kernel='laplacian', Nystroem.n_components=9), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.55)", "BernoulliNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='complete'), alpha=0.01, fit_prior=True)", "GaussianNB(FeatureAgglomeration(Nystroem(data, Nystroem.gamma=0.25, Nystroem.kernel='rbf', Nystroem.n_components=4), FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='average'))", "BernoulliNB(MinMaxScaler(Nystroem(StandardScaler(data), Nystroem.gamma=0.2, Nystroem.kernel='polynomial', Nystroem.n_components=7)), alpha=1.0, fit_prior=True)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.8500000000000001, Nystroem.kernel='cosine', Nystroem.n_components=2), alpha=1.0, fit_prior=True)", "GaussianNB(Nystroem(data, Nystroem.gamma=0.45, Nystroem.kernel='chi2', Nystroem.n_components=1))", "MultinomialNB(SelectPercentile(data, SelectPercentile.percentile=32, SelectPercentile.score_func=f_classif), alpha=0.1, fit_prior=False)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=2, min_samples_leaf=11, min_samples_split=20)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.25, Nystroem.kernel='rbf', Nystroem.n_components=10), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.8500000000000001, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GaussianNB(Nystroem(data, Nystroem.gamma=0.55, Nystroem.kernel='laplacian', Nystroem.n_components=4))", "ExtraTreesClassifier(FastICA(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), FastICA.tol=0.25, FastICA.whiten='unit-variance'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.55, min_samples_leaf=8, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=1.0), alpha=100.0, fit_prior=True)", "GaussianNB(StandardScaler(RBFSampler(data, RBFSampler.gamma=0.9500000000000001)))", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=1.0), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.65), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=5, min_samples_leaf=20, min_samples_split=8)", "GaussianNB(Nystroem(data, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='additive_chi2', Nystroem.n_components=5))", "MultinomialNB(SelectPercentile(data, SelectPercentile.percentile=63, SelectPercentile.score_func=f_classif), alpha=100.0, fit_prior=False)", "MultinomialNB(SelectPercentile(data, SelectPercentile.percentile=56, SelectPercentile.score_func=f_classif), alpha=0.001, fit_prior=True)", "MultinomialNB(SelectPercentile(data, SelectPercentile.percentile=78, SelectPercentile.score_func=f_classif), alpha=10.0, fit_prior=True)", "MultinomialNB(SelectFwe(data, SelectFwe.alpha=0.034, SelectFwe.score_func=f_classif), alpha=10.0, fit_prior=True)", "MultinomialNB(SelectFwe(data, SelectFwe.alpha=0.036000000000000004, SelectFwe.score_func=f_classif), alpha=0.1, fit_prior=True)", "MultinomialNB(SelectFwe(data, SelectFwe.alpha=0.036000000000000004, SelectFwe.score_func=f_classif), alpha=0.01, fit_prior=True)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.75), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.9500000000000001, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "LogisticRegression(Binarizer(MinMaxScaler(data), Binarizer.threshold=1.0), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GaussianNB(Nystroem(VarianceThreshold(data, VarianceThreshold.threshold=0.45), Nystroem.gamma=0.75, Nystroem.kernel='laplacian', Nystroem.n_components=1))", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.4, Nystroem.kernel='laplacian', Nystroem.n_components=5), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "MultinomialNB(SelectFwe(data, SelectFwe.alpha=0.013000000000000001, SelectFwe.score_func=f_classif), alpha=10.0, fit_prior=False)", "GaussianNB(RBFSampler(Binarizer(data, Binarizer.threshold=0.05), RBFSampler.gamma=0.0))", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='sigmoid', Nystroem.n_components=3), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=8, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='sigmoid', Nystroem.n_components=4), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=1, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(PolynomialFeatures(Nystroem(data, Nystroem.gamma=0.5, Nystroem.kernel='rbf', Nystroem.n_components=2), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), alpha=1.0, fit_prior=False)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.8500000000000001, Nystroem.kernel='chi2', Nystroem.n_components=4), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=1, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(FeatureAgglomeration(RBFSampler(data, RBFSampler.gamma=0.2), FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='average'), alpha=10.0, fit_prior=True)", "BernoulliNB(RBFSampler(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RBFSampler.gamma=0.8), alpha=10.0, fit_prior=True)", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.1), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.9500000000000001, Nystroem.kernel='poly', Nystroem.n_components=4), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=3, min_samples_leaf=2, min_samples_split=11)", "MultinomialNB(SelectFwe(data, SelectFwe.alpha=0.028, SelectFwe.score_func=f_classif), alpha=1.0, fit_prior=False)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.2)", "DecisionTreeClassifier(FastICA(RBFSampler(data, RBFSampler.gamma=0.1), FastICA.tol=0.4, FastICA.whiten='unit-variance'), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=7, min_samples_leaf=15, min_samples_split=4)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.2), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "GaussianNB(PolynomialFeatures(Nystroem(data, Nystroem.gamma=0.65, Nystroem.kernel='sigmoid', Nystroem.n_components=5), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False))", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.5, Nystroem.kernel='laplacian', Nystroem.n_components=5), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.2)", "DecisionTreeClassifier(Nystroem(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), Nystroem.gamma=0.55, Nystroem.kernel='sigmoid', Nystroem.n_components=4), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=4, min_samples_leaf=8, min_samples_split=7)", "RandomForestClassifier(StandardScaler(Nystroem(data, Nystroem.gamma=0.9500000000000001, Nystroem.kernel='laplacian', Nystroem.n_components=8)), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.7000000000000001, RandomForestClassifier.min_samples_leaf=7, RandomForestClassifier.min_samples_split=15, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(Normalizer(Nystroem(data, Nystroem.gamma=0.5, Nystroem.kernel='laplacian', Nystroem.n_components=10), Normalizer.norm='l1'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.2, min_samples_leaf=9, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.1), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=7, min_samples_leaf=15, min_samples_split=4)", "MultinomialNB(SelectFwe(data, SelectFwe.alpha=0.046, SelectFwe.score_func=f_classif), alpha=10.0, fit_prior=True)", "GaussianNB(Nystroem(data, Nystroem.gamma=0.5, Nystroem.kernel='polynomial', Nystroem.n_components=5))", "BernoulliNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='average'), alpha=10.0, fit_prior=False)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.55, Nystroem.kernel='laplacian', Nystroem.n_components=10), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=15, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.9500000000000001, Nystroem.kernel='laplacian', Nystroem.n_components=2), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "BernoulliNB(Nystroem(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), Nystroem.gamma=0.30000000000000004, Nystroem.kernel='chi2', Nystroem.n_components=5), alpha=0.1, fit_prior=False)", "RandomForestClassifier(Normalizer(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='polynomial', Nystroem.n_components=1), Normalizer.norm='l1'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=17, RandomForestClassifier.min_samples_split=14, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.9, Nystroem.kernel='laplacian', Nystroem.n_components=7), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=14, RandomForestClassifier.min_samples_split=17, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.2, Nystroem.kernel='laplacian', Nystroem.n_components=8), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=16, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.9), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=14, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "MultinomialNB(SelectPercentile(data, SelectPercentile.percentile=56, SelectPercentile.score_func=f_classif), alpha=100.0, fit_prior=False)", "MultinomialNB(SelectFwe(SelectPercentile(data, SelectPercentile.percentile=77, SelectPercentile.score_func=f_classif), SelectFwe.alpha=0.034, SelectFwe.score_func=f_classif), alpha=0.01, fit_prior=False)", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.30000000000000004, Nystroem.kernel='rbf', Nystroem.n_components=9), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=7, min_samples_leaf=6, min_samples_split=5)", "BernoulliNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='average'), alpha=0.001, fit_prior=False)", "BernoulliNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='ward'), alpha=0.001, fit_prior=False)", "RandomForestClassifier(Nystroem(SelectFwe(data, SelectFwe.alpha=0.017, SelectFwe.score_func=f_classif), Nystroem.gamma=0.15000000000000002, Nystroem.kernel='sigmoid', Nystroem.n_components=4), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=6, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.30000000000000004, Nystroem.kernel='rbf', Nystroem.n_components=7), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.6000000000000001, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.0), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.6000000000000001, RandomForestClassifier.min_samples_leaf=7, RandomForestClassifier.min_samples_split=6, RandomForestClassifier.n_estimators=100)", "LogisticRegression(Nystroem(data, Nystroem.gamma=0.8, Nystroem.kernel='rbf', Nystroem.n_components=7), LogisticRegression.C=0.0001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "KNeighborsClassifier(RBFSampler(data, RBFSampler.gamma=1.0), KNeighborsClassifier.n_neighbors=50, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='distance')", "KNeighborsClassifier(RBFSampler(data, RBFSampler.gamma=1.0), KNeighborsClassifier.n_neighbors=48, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='uniform')", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.8), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.15000000000000002)", "MultinomialNB(SelectFwe(SelectPercentile(data, SelectPercentile.percentile=1, SelectPercentile.score_func=f_classif), SelectFwe.alpha=0.039, SelectFwe.score_func=f_classif), alpha=1.0, fit_prior=False)", "BernoulliNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='ward'), alpha=100.0, fit_prior=True)", "LogisticRegression(Nystroem(data, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='poly', Nystroem.n_components=10), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.4), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=2, min_samples_leaf=18, min_samples_split=7)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.9, Nystroem.kernel='chi2', Nystroem.n_components=4), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=7, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.5), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=7, min_samples_leaf=7, min_samples_split=15)", "KNeighborsClassifier(RBFSampler(data, RBFSampler.gamma=0.55), KNeighborsClassifier.n_neighbors=32, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='uniform')", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.8500000000000001, Nystroem.kernel='chi2', Nystroem.n_components=10), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=8, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.55)", "MultinomialNB(VarianceThreshold(SelectFwe(data, SelectFwe.alpha=0.021, SelectFwe.score_func=f_classif), VarianceThreshold.threshold=0.5), alpha=10.0, fit_prior=True)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.2), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=10, min_samples_leaf=2, min_samples_split=15)", "RandomForestClassifier(RBFSampler(SelectFwe(data, SelectFwe.alpha=0.005, SelectFwe.score_func=f_classif), RBFSampler.gamma=0.0), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=19, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.75, Nystroem.kernel='rbf', Nystroem.n_components=9), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=19, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.05, Nystroem.kernel='sigmoid', Nystroem.n_components=3), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "BernoulliNB(Nystroem(PCA(data, PCA.iterated_power=2, PCA.svd_solver='randomized'), Nystroem.gamma=0.15000000000000002, Nystroem.kernel='rbf', Nystroem.n_components=4), alpha=0.001, fit_prior=True)", "LogisticRegression(FastICA(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), FastICA.tol=0.1, FastICA.whiten='unit-variance'), LogisticRegression.C=0.1, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "RandomForestClassifier(PolynomialFeatures(Nystroem(data, Nystroem.gamma=0.75, Nystroem.kernel='chi2', Nystroem.n_components=4), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.9500000000000001, RandomForestClassifier.min_samples_leaf=12, RandomForestClassifier.min_samples_split=20, RandomForestClassifier.n_estimators=100)", "BernoulliNB(RBFSampler(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='complete'), RBFSampler.gamma=0.75), alpha=0.1, fit_prior=True)", "RandomForestClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='average'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.9500000000000001, RandomForestClassifier.min_samples_leaf=12, RandomForestClassifier.min_samples_split=11, RandomForestClassifier.n_estimators=100)"], "nomao": ["BernoulliNB(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='laplacian', Nystroem.n_components=4), alpha=0.1, fit_prior=False)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='polynomial', Nystroem.n_components=4), alpha=0.001, fit_prior=False)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.9), alpha=0.1, fit_prior=True)", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.9), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GaussianNB(StandardScaler(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='rbf', Nystroem.n_components=6)))", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.15000000000000002)", "GaussianNB(RobustScaler(RBFSampler(data, RBFSampler.gamma=0.7000000000000001)))", "GradientBoostingClassifier(MinMaxScaler(FeatureAgglomeration(data, FeatureAgglomeration.affinity='manhattan', FeatureAgglomeration.linkage='average')), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GradientBoostingClassifier(MinMaxScaler(FeatureAgglomeration(data, FeatureAgglomeration.affinity='manhattan', FeatureAgglomeration.linkage='average')), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "BernoulliNB(FeatureAgglomeration(Normalizer(data, Normalizer.norm='l2'), FeatureAgglomeration.affinity='l2', FeatureAgglomeration.linkage='complete'), alpha=0.001, fit_prior=True)", "GradientBoostingClassifier(Nystroem(SelectPercentile(data, SelectPercentile.percentile=75, SelectPercentile.score_func=f_classif), Nystroem.gamma=0.75, Nystroem.kernel='sigmoid', Nystroem.n_components=6), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "DecisionTreeClassifier(RBFSampler(RBFSampler(data, RBFSampler.gamma=0.4), RBFSampler.gamma=0.15000000000000002), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=3, min_samples_leaf=11, min_samples_split=14)", "GradientBoostingClassifier(PCA(data, PCA.iterated_power=7, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.9), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=6, min_samples_leaf=7, min_samples_split=19)", "LogisticRegression(MaxAbsScaler(RBFSampler(data, RBFSampler.gamma=0.55)), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MaxAbsScaler(RBFSampler(Binarizer(data, Binarizer.threshold=0.1), RBFSampler.gamma=0.55)), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=1.0), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "ExtraTreesClassifier(SelectPercentile(Nystroem(data, Nystroem.gamma=0.05, Nystroem.kernel='chi2', Nystroem.n_components=5), SelectPercentile.percentile=11, SelectPercentile.score_func=f_classif), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=10, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.9), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "KNeighborsClassifier(PCA(Binarizer(data, Binarizer.threshold=1.0), PCA.iterated_power=6, PCA.svd_solver='randomized'), KNeighborsClassifier.n_neighbors=46, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='uniform')", "KNeighborsClassifier(RBFSampler(Binarizer(data, Binarizer.threshold=1.0), RBFSampler.gamma=0.25), KNeighborsClassifier.n_neighbors=46, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='uniform')", "KNeighborsClassifier(Binarizer(data, Binarizer.threshold=1.0), KNeighborsClassifier.n_neighbors=46, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='uniform')", "KNeighborsClassifier(Nystroem(data, Nystroem.gamma=0.55, Nystroem.kernel='sigmoid', Nystroem.n_components=1), KNeighborsClassifier.n_neighbors=46, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='uniform')", "GaussianNB(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='rbf', Nystroem.n_components=4))", "GradientBoostingClassifier(PCA(Nystroem(data, Nystroem.gamma=0.75, Nystroem.kernel='rbf', Nystroem.n_components=1), PCA.iterated_power=4, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.15000000000000002)", "DecisionTreeClassifier(RBFSampler(RobustScaler(data), RBFSampler.gamma=0.5), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=6, min_samples_leaf=3, min_samples_split=14)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.05, Nystroem.kernel='additive_chi2', Nystroem.n_components=7), alpha=1.0, fit_prior=False)", "KNeighborsClassifier(Nystroem(data, Nystroem.gamma=0.25, Nystroem.kernel='sigmoid', Nystroem.n_components=2), KNeighborsClassifier.n_neighbors=46, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='uniform')", "BernoulliNB(Nystroem(FastICA(data, FastICA.tol=0.9500000000000001, FastICA.whiten='unit-variance'), Nystroem.gamma=0.4, Nystroem.kernel='cosine', Nystroem.n_components=8), alpha=10.0, fit_prior=True)", "MultinomialNB(Nystroem(Normalizer(data, Normalizer.norm='l2'), Nystroem.gamma=0.9500000000000001, Nystroem.kernel='chi2', Nystroem.n_components=1), alpha=100.0, fit_prior=True)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.0), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.7500000000000001, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "DecisionTreeClassifier(Nystroem(Nystroem(data, Nystroem.gamma=0.9, Nystroem.kernel='sigmoid', Nystroem.n_components=7), Nystroem.gamma=0.7000000000000001, Nystroem.kernel='rbf', Nystroem.n_components=5), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=4, min_samples_leaf=8, min_samples_split=7)", "RandomForestClassifier(FeatureAgglomeration(RBFSampler(data, RBFSampler.gamma=0.0), FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='average'), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=7, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "BernoulliNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='average'), alpha=1.0, fit_prior=True)", "BernoulliNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='average'), alpha=0.1, fit_prior=False)", "DecisionTreeClassifier(Binarizer(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='rbf', Nystroem.n_components=5), Binarizer.threshold=0.4), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=4, min_samples_leaf=8, min_samples_split=7)", "GradientBoostingClassifier(FeatureAgglomeration(Nystroem(data, Nystroem.gamma=0.30000000000000004, Nystroem.kernel='sigmoid', Nystroem.n_components=3), FeatureAgglomeration.affinity='l1', FeatureAgglomeration.linkage='average'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "MultinomialNB(Binarizer(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='ward'), Binarizer.threshold=0.55), alpha=100.0, fit_prior=False)", "GradientBoostingClassifier(Nystroem(SelectPercentile(data, SelectPercentile.percentile=43, SelectPercentile.score_func=f_classif), Nystroem.gamma=0.8, Nystroem.kernel='sigmoid', Nystroem.n_components=8), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "GaussianNB(RBFSampler(FastICA(data, FastICA.tol=0.9500000000000001, FastICA.whiten='unit-variance'), RBFSampler.gamma=1.0))", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='sigmoid', Nystroem.n_components=2), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=3, min_samples_leaf=2, min_samples_split=11)", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='sigmoid', Nystroem.n_components=2), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=7, min_samples_leaf=2, min_samples_split=11)", "BernoulliNB(SelectFwe(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='cosine', Nystroem.n_components=4), SelectFwe.alpha=0.031, SelectFwe.score_func=f_classif), alpha=10.0, fit_prior=False)", "BernoulliNB(SelectFwe(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='cosine', Nystroem.n_components=4), SelectFwe.alpha=0.031, SelectFwe.score_func=f_classif), alpha=10.0, fit_prior=True)", "GaussianNB(Nystroem(RobustScaler(data), Nystroem.gamma=0.6000000000000001, Nystroem.kernel='polynomial', Nystroem.n_components=6))", "GaussianNB(RBFSampler(FastICA(data, FastICA.tol=0.9500000000000001, FastICA.whiten='unit-variance'), RBFSampler.gamma=0.55))", "BernoulliNB(RBFSampler(FastICA(data, FastICA.tol=0.9500000000000001, FastICA.whiten='unit-variance'), RBFSampler.gamma=0.55), alpha=1.0, fit_prior=True)", "BernoulliNB(RBFSampler(StandardScaler(data), RBFSampler.gamma=0.55), alpha=1.0, fit_prior=True)", "GradientBoostingClassifier(Binarizer(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l1', FeatureAgglomeration.linkage='average'), Binarizer.threshold=0.15000000000000002), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='rbf', Nystroem.n_components=10), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=5, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MinMaxScaler(RBFSampler(data, RBFSampler.gamma=0.0)), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=7, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='rbf', Nystroem.n_components=10), alpha=100.0, fit_prior=True)", "BernoulliNB(MinMaxScaler(FastICA(data, FastICA.tol=0.9, FastICA.whiten='unit-variance')), alpha=1.0, fit_prior=False)", "DecisionTreeClassifier(SelectFwe(SelectFwe(Nystroem(data, Nystroem.gamma=0.9, Nystroem.kernel='cosine', Nystroem.n_components=3), SelectFwe.alpha=0.038, SelectFwe.score_func=f_classif), SelectFwe.alpha=0.01, SelectFwe.score_func=f_classif), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=6, min_samples_split=6)", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.75, Nystroem.kernel='cosine', Nystroem.n_components=1), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=5, min_samples_leaf=7, min_samples_split=10)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=1.0), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=5, min_samples_leaf=7, min_samples_split=14)", "GaussianNB(RBFSampler(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), RBFSampler.gamma=0.1))", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.8), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=5, min_samples_leaf=1, min_samples_split=10)", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.7000000000000001))", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='chi2', Nystroem.n_components=2), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=11, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.9, Nystroem.kernel='linear', Nystroem.n_components=9), alpha=10.0, fit_prior=False)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.45, Nystroem.kernel='laplacian', Nystroem.n_components=9), alpha=0.001, fit_prior=False)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='laplacian', Nystroem.n_components=10), alpha=0.01, fit_prior=True)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.65), alpha=0.001, fit_prior=False)", "GaussianNB(SelectPercentile(FastICA(data, FastICA.tol=1.0, FastICA.whiten='unit-variance'), SelectPercentile.percentile=60, SelectPercentile.score_func=f_classif))", "GaussianNB(SelectPercentile(data, SelectPercentile.percentile=96, SelectPercentile.score_func=f_classif))", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=7, min_samples_leaf=6, min_samples_split=14)", "GaussianNB(Binarizer(data, Binarizer.threshold=0.5))", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.5), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=10, min_samples_leaf=4, min_samples_split=17)", "ExtraTreesClassifier(Binarizer(RBFSampler(data, RBFSampler.gamma=1.0), Binarizer.threshold=0.15000000000000002), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=13, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.55), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=19, min_samples_split=16)", "GaussianNB(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='rbf', Nystroem.n_components=4))", "RandomForestClassifier(RobustScaler(Nystroem(data, Nystroem.gamma=0.30000000000000004, Nystroem.kernel='cosine', Nystroem.n_components=1)), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.8500000000000001, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(SelectPercentile(data, SelectPercentile.percentile=20, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.05)", "RandomForestClassifier(Nystroem(RBFSampler(data, RBFSampler.gamma=0.9), Nystroem.gamma=0.35000000000000003, Nystroem.kernel='rbf', Nystroem.n_components=4), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.8500000000000001, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Nystroem(Normalizer(data, Normalizer.norm='l2'), Nystroem.gamma=0.8, Nystroem.kernel='additive_chi2', Nystroem.n_components=1), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.9500000000000001, RandomForestClassifier.min_samples_leaf=12, RandomForestClassifier.min_samples_split=20, RandomForestClassifier.n_estimators=100)", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.75))", "GaussianNB(MinMaxScaler(PCA(data, PCA.iterated_power=2, PCA.svd_solver='randomized')))", "MultinomialNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='ward'), alpha=10.0, fit_prior=False)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.0), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=5, RandomForestClassifier.min_samples_split=6, RandomForestClassifier.n_estimators=100)", "MultinomialNB(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='laplacian', Nystroem.n_components=1), alpha=0.001, fit_prior=True)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.8, Nystroem.kernel='additive_chi2', Nystroem.n_components=1), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=11, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "GaussianNB(StandardScaler(RBFSampler(data, RBFSampler.gamma=0.9500000000000001)))", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.8), alpha=0.001, fit_prior=True)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='chi2', Nystroem.n_components=4), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=9, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.9), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.65), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "DecisionTreeClassifier(FastICA(Normalizer(data, Normalizer.norm='l1'), FastICA.tol=0.9, FastICA.whiten='unit-variance'), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=3, min_samples_leaf=3, min_samples_split=13)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.05, Nystroem.kernel='polynomial', Nystroem.n_components=1), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.5, RandomForestClassifier.min_samples_leaf=5, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)"], "gina": ["ExtraTreesClassifier(StandardScaler(RBFSampler(data, RBFSampler.gamma=0.25)), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=6, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "KNeighborsClassifier(RBFSampler(data, RBFSampler.gamma=0.05), KNeighborsClassifier.n_neighbors=43, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='uniform')", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=1.0), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), alpha=100.0, fit_prior=True)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.4), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.1), alpha=0.01, fit_prior=False)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.65), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=3, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(SelectFwe(data, SelectFwe.alpha=0.004, SelectFwe.score_func=f_classif), RBFSampler.gamma=0.30000000000000004), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=13, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.75), alpha=0.01, fit_prior=False)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.55), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "KNeighborsClassifier(RBFSampler(data, RBFSampler.gamma=0.4), KNeighborsClassifier.n_neighbors=22, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='uniform')", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.4), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.6000000000000001, RandomForestClassifier.min_samples_leaf=12, RandomForestClassifier.min_samples_split=6, RandomForestClassifier.n_estimators=100)", "LogisticRegression(MaxAbsScaler(RBFSampler(data, RBFSampler.gamma=0.2)), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.9), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=5, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.45), alpha=100.0, fit_prior=False)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.1), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.6000000000000001, RandomForestClassifier.min_samples_leaf=12, RandomForestClassifier.min_samples_split=13, RandomForestClassifier.n_estimators=100)", "LogisticRegression(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='poly', Nystroem.n_components=6), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='laplacian', Nystroem.n_components=4), alpha=0.1, fit_prior=False)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.25, Nystroem.kernel='chi2', Nystroem.n_components=6), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.6000000000000001, RandomForestClassifier.min_samples_leaf=8, RandomForestClassifier.min_samples_split=9, RandomForestClassifier.n_estimators=100)", "GaussianNB(StandardScaler(RBFSampler(data, RBFSampler.gamma=0.9500000000000001)))", "BernoulliNB(StandardScaler(RBFSampler(data, RBFSampler.gamma=0.8)), alpha=0.001, fit_prior=True)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.65), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=3, min_samples_leaf=11, min_samples_split=13)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.6000000000000001, GradientBoostingClassifier.min_samples_leaf=12, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.8, Nystroem.kernel='rbf', Nystroem.n_components=6), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=5, RandomForestClassifier.min_samples_split=6, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(SelectFwe(Nystroem(data, Nystroem.gamma=0.15000000000000002, Nystroem.kernel='sigmoid', Nystroem.n_components=6), SelectFwe.alpha=0.025, SelectFwe.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.6000000000000001, GradientBoostingClassifier.min_samples_leaf=12, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.4, Nystroem.kernel='rbf', Nystroem.n_components=5), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=9, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.0), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=5, RandomForestClassifier.min_samples_split=6, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='laplacian', Nystroem.n_components=1), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=9, RandomForestClassifier.min_samples_split=5, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.75, Nystroem.kernel='chi2', Nystroem.n_components=8), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=1, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(VarianceThreshold(data, VarianceThreshold.threshold=0.1), RBFSampler.gamma=0.5), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.05, GradientBoostingClassifier.min_samples_leaf=12, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.05)", "RandomForestClassifier(SelectPercentile(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), SelectPercentile.percentile=40, SelectPercentile.score_func=f_classif), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.05, RandomForestClassifier.min_samples_leaf=17, RandomForestClassifier.min_samples_split=14, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.2), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.6000000000000001, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.8), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(RBFSampler(StandardScaler(data), RBFSampler.gamma=0.5), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.55), LogisticRegression.C=0.001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.15000000000000002, Nystroem.kernel='rbf', Nystroem.n_components=3), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "KNeighborsClassifier(FastICA(RBFSampler(data, RBFSampler.gamma=0.65), FastICA.tol=0.05, FastICA.whiten='unit-variance'), KNeighborsClassifier.n_neighbors=29, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='distance')", "ExtraTreesClassifier(RBFSampler(MinMaxScaler(data), RBFSampler.gamma=0.75), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=1, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.65), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=2, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=13, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "ExtraTreesClassifier(FastICA(RBFSampler(data, RBFSampler.gamma=0.65), FastICA.tol=0.05, FastICA.whiten='unit-variance'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=13, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(VarianceThreshold(data, VarianceThreshold.threshold=0.9500000000000001), RBFSampler.gamma=0.05), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "DecisionTreeClassifier(RBFSampler(Normalizer(data, Normalizer.norm='max'), RBFSampler.gamma=0.1), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=7, min_samples_leaf=15, min_samples_split=4)", "DecisionTreeClassifier(Binarizer(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='rbf', Nystroem.n_components=5), Binarizer.threshold=0.4), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=4, min_samples_leaf=8, min_samples_split=7)", "GaussianNB(Nystroem(data, Nystroem.gamma=0.8, Nystroem.kernel='laplacian', Nystroem.n_components=3))", "ExtraTreesClassifier(Nystroem(SelectFwe(data, SelectFwe.alpha=0.019, SelectFwe.score_func=f_classif), Nystroem.gamma=0.25, Nystroem.kernel='laplacian', Nystroem.n_components=6), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.05, min_samples_leaf=6, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.65), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=13, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "DecisionTreeClassifier(Nystroem(RBFSampler(data, RBFSampler.gamma=0.2), Nystroem.gamma=0.30000000000000004, Nystroem.kernel='sigmoid', Nystroem.n_components=8), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=6, min_samples_leaf=6, min_samples_split=4)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=3, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.1))", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=7, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.65), alpha=1.0, fit_prior=True)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7000000000000001)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.55), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=16, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=7, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='rbf', Nystroem.n_components=10), alpha=100.0, fit_prior=True)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), alpha=0.01, fit_prior=True)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.6000000000000001, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.05, Nystroem.kernel='laplacian', Nystroem.n_components=1), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=13, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.5, Nystroem.kernel='cosine', Nystroem.n_components=2), alpha=100.0, fit_prior=False)", "GradientBoostingClassifier(Nystroem(SelectFwe(data, SelectFwe.alpha=0.038, SelectFwe.score_func=f_classif), Nystroem.gamma=0.30000000000000004, Nystroem.kernel='sigmoid', Nystroem.n_components=9), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.6000000000000001, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "ExtraTreesClassifier(SelectFwe(Nystroem(data, Nystroem.gamma=0.5, Nystroem.kernel='sigmoid', Nystroem.n_components=7), SelectFwe.alpha=0.046, SelectFwe.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=11, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(Binarizer(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='complete'), Binarizer.threshold=0.35000000000000003), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.3)", "GradientBoostingClassifier(Nystroem(SelectFwe(data, SelectFwe.alpha=0.042, SelectFwe.score_func=f_classif), Nystroem.gamma=0.5, Nystroem.kernel='rbf', Nystroem.n_components=5), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.3)", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.4))", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.4), alpha=10.0, fit_prior=False)", "KNeighborsClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), KNeighborsClassifier.n_neighbors=46, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='uniform')", "KNeighborsClassifier(RBFSampler(data, RBFSampler.gamma=1.0), KNeighborsClassifier.n_neighbors=16, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='uniform')", "BernoulliNB(RBFSampler(PCA(data, PCA.iterated_power=4, PCA.svd_solver='randomized'), RBFSampler.gamma=0.9), alpha=100.0, fit_prior=False)", "GradientBoostingClassifier(RBFSampler(MaxAbsScaler(data), RBFSampler.gamma=0.45), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.3)", "DecisionTreeClassifier(RBFSampler(RobustScaler(data), RBFSampler.gamma=0.5), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=6, min_samples_leaf=3, min_samples_split=14)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "KNeighborsClassifier(RBFSampler(SelectFwe(data, SelectFwe.alpha=0.017, SelectFwe.score_func=f_classif), RBFSampler.gamma=0.1), KNeighborsClassifier.n_neighbors=9, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='distance')", "DecisionTreeClassifier(RBFSampler(MaxAbsScaler(data), RBFSampler.gamma=0.7000000000000001), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=3, min_samples_leaf=17, min_samples_split=4)", "GradientBoostingClassifier(RBFSampler(RobustScaler(data), RBFSampler.gamma=0.9), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=13, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "KNeighborsClassifier(Binarizer(Normalizer(data, Normalizer.norm='l1'), Binarizer.threshold=1.0), KNeighborsClassifier.n_neighbors=46, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='uniform')", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.75), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=7, min_samples_leaf=11, min_samples_split=9)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=1.0), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=12, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "KNeighborsClassifier(RBFSampler(VarianceThreshold(data, VarianceThreshold.threshold=0.7500000000000001), RBFSampler.gamma=0.0), KNeighborsClassifier.n_neighbors=8, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='distance')", "GradientBoostingClassifier(RBFSampler(Binarizer(data, Binarizer.threshold=0.30000000000000004), RBFSampler.gamma=0.8), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.55)", "DecisionTreeClassifier(RBFSampler(RBFSampler(data, RBFSampler.gamma=0.4), RBFSampler.gamma=0.15000000000000002), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=3, min_samples_leaf=11, min_samples_split=14)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.9), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=4, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.75), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=12, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.35000000000000003)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.5), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=6, min_samples_leaf=7, min_samples_split=12)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.2, Nystroem.kernel='laplacian', Nystroem.n_components=10), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.55)", "LogisticRegression(Nystroem(MinMaxScaler(data), Nystroem.gamma=0.9, Nystroem.kernel='laplacian', Nystroem.n_components=10), LogisticRegression.C=0.001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')"], "bank-marketing": ["ExtraTreesClassifier(RBFSampler(SelectFwe(data, SelectFwe.alpha=0.014, SelectFwe.score_func=f_classif), RBFSampler.gamma=0.30000000000000004), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=11, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(FeatureAgglomeration(MaxAbsScaler(data), FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='average'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.8500000000000001, RandomForestClassifier.min_samples_leaf=7, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=2, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.8), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=8, min_samples_leaf=4, min_samples_split=9)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.65), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=7, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.1), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.8, Nystroem.kernel='rbf', Nystroem.n_components=9), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=7, RandomForestClassifier.min_samples_split=15, RandomForestClassifier.n_estimators=100)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=4, min_samples_leaf=15, min_samples_split=4)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=7, min_samples_leaf=15, min_samples_split=4)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.1), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=7, min_samples_leaf=15, min_samples_split=4)", "LogisticRegression(VarianceThreshold(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), VarianceThreshold.threshold=1.0), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "KNeighborsClassifier(RBFSampler(data, RBFSampler.gamma=0.1), KNeighborsClassifier.n_neighbors=27, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='distance')", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.75, Nystroem.kernel='laplacian', Nystroem.n_components=5), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=3, min_samples_leaf=2, min_samples_split=11)", "GaussianNB(RBFSampler(Binarizer(data, Binarizer.threshold=0.05), RBFSampler.gamma=0.0))", "KNeighborsClassifier(RBFSampler(data, RBFSampler.gamma=0.0), KNeighborsClassifier.n_neighbors=29, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='uniform')", "KNeighborsClassifier(Binarizer(Nystroem(data, Nystroem.gamma=0.65, Nystroem.kernel='cosine', Nystroem.n_components=4), Binarizer.threshold=0.4), KNeighborsClassifier.n_neighbors=27, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='distance')", "BernoulliNB(FeatureAgglomeration(RBFSampler(data, RBFSampler.gamma=0.2), FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='average'), alpha=10.0, fit_prior=True)", "BernoulliNB(PolynomialFeatures(Nystroem(data, Nystroem.gamma=0.5, Nystroem.kernel='rbf', Nystroem.n_components=2), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), alpha=1.0, fit_prior=False)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.2, Nystroem.kernel='laplacian', Nystroem.n_components=7), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "KNeighborsClassifier(Binarizer(data, Binarizer.threshold=0.9500000000000001), KNeighborsClassifier.n_neighbors=11, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='distance')", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.1), alpha=100.0, fit_prior=True)", "GradientBoostingClassifier(RBFSampler(SelectFwe(data, SelectFwe.alpha=0.03, SelectFwe.score_func=f_classif), RBFSampler.gamma=0.8), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.8500000000000001, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.55)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.75), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.55, min_samples_leaf=15, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.0), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.9500000000000001, RandomForestClassifier.min_samples_leaf=12, RandomForestClassifier.min_samples_split=11, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.75, Nystroem.kernel='rbf', Nystroem.n_components=9), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=4, RandomForestClassifier.min_samples_split=17, RandomForestClassifier.n_estimators=100)", "LogisticRegression(FastICA(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), FastICA.tol=0.1, FastICA.whiten='unit-variance'), LogisticRegression.C=0.1, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(Nystroem(SelectFwe(data, SelectFwe.alpha=0.008, SelectFwe.score_func=f_classif), Nystroem.gamma=0.2, Nystroem.kernel='laplacian', Nystroem.n_components=5), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=10, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(RBFSampler(SelectPercentile(data, SelectPercentile.percentile=85, SelectPercentile.score_func=f_classif), RBFSampler.gamma=0.55), LogisticRegression.C=0.001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "BernoulliNB(RBFSampler(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='complete'), RBFSampler.gamma=0.75), alpha=0.1, fit_prior=True)", "BernoulliNB(Nystroem(PCA(data, PCA.iterated_power=2, PCA.svd_solver='randomized'), Nystroem.gamma=0.15000000000000002, Nystroem.kernel='rbf', Nystroem.n_components=4), alpha=0.001, fit_prior=True)", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.45), LogisticRegression.C=0.0001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), LogisticRegression.C=0.001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=10, min_samples_leaf=11, min_samples_split=18)", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=1.0), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.0), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=1.0, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=10, RandomForestClassifier.n_estimators=100)", "GaussianNB(StandardScaler(RBFSampler(data, RBFSampler.gamma=0.9500000000000001)))", "ExtraTreesClassifier(FastICA(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), FastICA.tol=0.25, FastICA.whiten='unit-variance'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.55, min_samples_leaf=8, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "KNeighborsClassifier(FeatureAgglomeration(FastICA(data, FastICA.tol=0.2, FastICA.whiten='unit-variance'), FeatureAgglomeration.affinity='l1', FeatureAgglomeration.linkage='complete'), KNeighborsClassifier.n_neighbors=11, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='distance')", "KNeighborsClassifier(Binarizer(data, Binarizer.threshold=0.7000000000000001), KNeighborsClassifier.n_neighbors=43, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='distance')", "LogisticRegression(Nystroem(data, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='poly', Nystroem.n_components=10), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.55), alpha=100.0, fit_prior=True)", "RandomForestClassifier(RBFSampler(VarianceThreshold(data, VarianceThreshold.threshold=0.45), RBFSampler.gamma=0.75), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.05, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.4), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=2, min_samples_leaf=18, min_samples_split=7)", "GaussianNB(FastICA(RBFSampler(data, RBFSampler.gamma=0.05), FastICA.tol=0.30000000000000004, FastICA.whiten='unit-variance'))", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=1.0), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=19, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "MultinomialNB(SelectFwe(SelectPercentile(data, SelectPercentile.percentile=1, SelectPercentile.score_func=f_classif), SelectFwe.alpha=0.039, SelectFwe.score_func=f_classif), alpha=1.0, fit_prior=False)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.15000000000000002, Nystroem.kernel='rbf', Nystroem.n_components=4), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=10, RandomForestClassifier.min_samples_split=14, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.45, Nystroem.kernel='rbf', Nystroem.n_components=7), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=11, RandomForestClassifier.min_samples_split=19, RandomForestClassifier.n_estimators=100)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.5), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=7, min_samples_leaf=7, min_samples_split=15)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.9), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=14, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(SelectPercentile(Nystroem(data, Nystroem.gamma=0.1, Nystroem.kernel='rbf', Nystroem.n_components=2), SelectPercentile.percentile=64, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.6000000000000001, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.55, Nystroem.kernel='laplacian', Nystroem.n_components=10), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=15, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "DecisionTreeClassifier(FeatureAgglomeration(RBFSampler(data, RBFSampler.gamma=0.9), FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='ward'), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=1, min_samples_leaf=17, min_samples_split=14)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.55), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=6, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(SelectPercentile(RBFSampler(data, RBFSampler.gamma=0.9), SelectPercentile.percentile=28, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.7500000000000001, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "RandomForestClassifier(Normalizer(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='polynomial', Nystroem.n_components=1), Normalizer.norm='l1'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=17, RandomForestClassifier.min_samples_split=14, RandomForestClassifier.n_estimators=100)", "GaussianNB(Nystroem(Nystroem(data, Nystroem.gamma=0.5, Nystroem.kernel='polynomial', Nystroem.n_components=5), Nystroem.gamma=0.45, Nystroem.kernel='polynomial', Nystroem.n_components=4))", "RandomForestClassifier(FeatureAgglomeration(MinMaxScaler(data), FeatureAgglomeration.affinity='l1', FeatureAgglomeration.linkage='complete'), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=1.0, RandomForestClassifier.min_samples_leaf=14, RandomForestClassifier.min_samples_split=9, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(Normalizer(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='ward'), Normalizer.norm='l2'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=6, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LogisticRegression.C=0.1, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Nystroem(data, Nystroem.gamma=0.25, Nystroem.kernel='polynomial', Nystroem.n_components=4), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.05, min_samples_leaf=8, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(Binarizer(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), Binarizer.threshold=0.05), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.75), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=12, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.05), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=8, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.45, Nystroem.kernel='rbf', Nystroem.n_components=3), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=6, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "LogisticRegression(Binarizer(MaxAbsScaler(data), Binarizer.threshold=1.0), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "KNeighborsClassifier(Binarizer(Normalizer(data, Normalizer.norm='l1'), Binarizer.threshold=0.25), KNeighborsClassifier.n_neighbors=45, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='uniform')", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=1.0), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=8, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "GaussianNB(Nystroem(data, Nystroem.gamma=0.15000000000000002, Nystroem.kernel='laplacian', Nystroem.n_components=1))", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "KNeighborsClassifier(Nystroem(data, Nystroem.gamma=0.30000000000000004, Nystroem.kernel='sigmoid', Nystroem.n_components=2), KNeighborsClassifier.n_neighbors=35, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='uniform')", "GradientBoostingClassifier(FeatureAgglomeration(Nystroem(data, Nystroem.gamma=0.25, Nystroem.kernel='rbf', Nystroem.n_components=4), FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='average'), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.15000000000000002)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.65, Nystroem.kernel='rbf', Nystroem.n_components=2), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=7, RandomForestClassifier.min_samples_split=6, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.9500000000000001, Nystroem.kernel='laplacian', Nystroem.n_components=9), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=1.0, RandomForestClassifier.min_samples_leaf=6, RandomForestClassifier.min_samples_split=10, RandomForestClassifier.n_estimators=100)", "GaussianNB(FeatureAgglomeration(Nystroem(data, Nystroem.gamma=0.25, Nystroem.kernel='rbf', Nystroem.n_components=4), FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='average'))", "GaussianNB(Nystroem(data, Nystroem.gamma=0.75, Nystroem.kernel='laplacian', Nystroem.n_components=1))", "KNeighborsClassifier(Normalizer(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), Normalizer.norm='l1'), KNeighborsClassifier.n_neighbors=26, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='distance')", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.25, Nystroem.kernel='sigmoid', Nystroem.n_components=2), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.8500000000000001, RandomForestClassifier.min_samples_leaf=7, RandomForestClassifier.min_samples_split=9, RandomForestClassifier.n_estimators=100)", "LogisticRegression(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=6, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(RobustScaler(RBFSampler(data, RBFSampler.gamma=0.8500000000000001)), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.3)", "GaussianNB(RBFSampler(Normalizer(data, Normalizer.norm='l2'), RBFSampler.gamma=0.0))", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.0), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=7, RandomForestClassifier.min_samples_split=18, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MaxAbsScaler(Nystroem(data, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='rbf', Nystroem.n_components=10)), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=6, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "LogisticRegression(Nystroem(data, Nystroem.gamma=0.8, Nystroem.kernel='rbf', Nystroem.n_components=7), LogisticRegression.C=0.0001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(Normalizer(Nystroem(data, Nystroem.gamma=0.30000000000000004, Nystroem.kernel='rbf', Nystroem.n_components=7), Normalizer.norm='l1'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=3, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.05), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.8), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=13, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)"], "guillermo": ["ExtraTreesClassifier(StandardScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.8500000000000001)), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.05, min_samples_leaf=16, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "GaussianNB(VarianceThreshold(data, VarianceThreshold.threshold=0.1))", "MultinomialNB(Normalizer(MinMaxScaler(data), Normalizer.norm='max'), alpha=0.001, fit_prior=True)", "GaussianNB(VarianceThreshold(Nystroem(data, Nystroem.gamma=0.05, Nystroem.kernel='linear', Nystroem.n_components=9), VarianceThreshold.threshold=0.1))", "GaussianNB(StandardScaler(RBFSampler(data, RBFSampler.gamma=0.7000000000000001)))", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), alpha=0.01, fit_prior=False)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.9), alpha=0.01, fit_prior=False)", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.7000000000000001))", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=4, min_samples_leaf=4, min_samples_split=15)", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.8500000000000001, Nystroem.kernel='linear', Nystroem.n_components=6), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=7, min_samples_split=9)", "DecisionTreeClassifier(Normalizer(VarianceThreshold(data, VarianceThreshold.threshold=0.6000000000000001), Normalizer.norm='max'), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=6, min_samples_leaf=2, min_samples_split=7)", "BernoulliNB(MinMaxScaler(data), alpha=100.0, fit_prior=False)", "DecisionTreeClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.2), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=3, min_samples_leaf=17, min_samples_split=9)", "BernoulliNB(VarianceThreshold(data, VarianceThreshold.threshold=0.9000000000000001), alpha=100.0, fit_prior=False)", "BernoulliNB(VarianceThreshold(RobustScaler(data), VarianceThreshold.threshold=0.6500000000000001), alpha=100.0, fit_prior=False)", "BernoulliNB(PCA(RBFSampler(data, RBFSampler.gamma=0.2), PCA.iterated_power=5, PCA.svd_solver='randomized'), alpha=0.001, fit_prior=True)", "BernoulliNB(Binarizer(MinMaxScaler(data), Binarizer.threshold=0.2), alpha=0.01, fit_prior=True)", "BernoulliNB(PCA(RBFSampler(data, RBFSampler.gamma=0.2), PCA.iterated_power=5, PCA.svd_solver='randomized'), alpha=0.001, fit_prior=False)", "GaussianNB(Normalizer(data, Normalizer.norm='max'))", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.9, Nystroem.kernel='laplacian', Nystroem.n_components=10), alpha=100.0, fit_prior=False)", "LogisticRegression(VarianceThreshold(data, VarianceThreshold.threshold=0.6500000000000001), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GaussianNB(MinMaxScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.15000000000000002)))", "GaussianNB(VarianceThreshold(data, VarianceThreshold.threshold=0.15000000000000002))", "BernoulliNB(MinMaxScaler(data), alpha=1.0, fit_prior=False)", "BernoulliNB(VarianceThreshold(data, VarianceThreshold.threshold=0.4), alpha=0.001, fit_prior=False)", "BernoulliNB(MinMaxScaler(data), alpha=0.1, fit_prior=False)", "BernoulliNB(VarianceThreshold(data, VarianceThreshold.threshold=0.6000000000000001), alpha=0.001, fit_prior=False)", "BernoulliNB(MinMaxScaler(data), alpha=0.01, fit_prior=True)", "BernoulliNB(MinMaxScaler(data), alpha=0.01, fit_prior=False)", "BernoulliNB(MinMaxScaler(data), alpha=0.001, fit_prior=True)", "LogisticRegression(VarianceThreshold(data, VarianceThreshold.threshold=0.4), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(data), LogisticRegression.C=0.1, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(data), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='poly', Nystroem.n_components=4), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=4, min_samples_leaf=11, min_samples_split=5)", "LogisticRegression(Nystroem(StandardScaler(data), Nystroem.gamma=0.65, Nystroem.kernel='polynomial', Nystroem.n_components=2), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "BernoulliNB(Nystroem(MinMaxScaler(data), Nystroem.gamma=0.55, Nystroem.kernel='rbf', Nystroem.n_components=4), alpha=0.01, fit_prior=True)", "DecisionTreeClassifier(PCA(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='rbf', Nystroem.n_components=1), PCA.iterated_power=9, PCA.svd_solver='randomized'), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=8, min_samples_leaf=10, min_samples_split=4)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.55, Nystroem.kernel='sigmoid', Nystroem.n_components=1), alpha=0.1, fit_prior=True)", "MultinomialNB(Nystroem(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), Nystroem.gamma=0.8500000000000001, Nystroem.kernel='rbf', Nystroem.n_components=1), alpha=0.01, fit_prior=True)", "GaussianNB(data)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.2, Nystroem.kernel='linear', Nystroem.n_components=8), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=14, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.9, Nystroem.kernel='cosine', Nystroem.n_components=6), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=11, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "DecisionTreeClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.35000000000000003), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=8, min_samples_leaf=13, min_samples_split=11)", "BernoulliNB(SelectPercentile(MinMaxScaler(data), SelectPercentile.percentile=96, SelectPercentile.score_func=f_classif), alpha=100.0, fit_prior=True)", "BernoulliNB(MinMaxScaler(data), alpha=100.0, fit_prior=False)", "BernoulliNB(MinMaxScaler(data), alpha=100.0, fit_prior=True)", "MultinomialNB(MinMaxScaler(data), alpha=10.0, fit_prior=False)", "BernoulliNB(Binarizer(Nystroem(data, Nystroem.gamma=0.9, Nystroem.kernel='cosine', Nystroem.n_components=6), Binarizer.threshold=0.45), alpha=0.01, fit_prior=True)", "GradientBoostingClassifier(RBFSampler(MaxAbsScaler(data), RBFSampler.gamma=0.2), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=8, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "DecisionTreeClassifier(FastICA(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), FastICA.tol=0.05, FastICA.whiten='unit-variance'), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=3, min_samples_leaf=18, min_samples_split=18)", "LogisticRegression(MinMaxScaler(Binarizer(VarianceThreshold(data, VarianceThreshold.threshold=0.45), Binarizer.threshold=0.25)), LogisticRegression.C=0.001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GaussianNB(VarianceThreshold(data, VarianceThreshold.threshold=0.45))", "BernoulliNB(Normalizer(VarianceThreshold(data, VarianceThreshold.threshold=0.8500000000000001), Normalizer.norm='l2'), alpha=0.01, fit_prior=True)", "LogisticRegression(MaxAbsScaler(RBFSampler(Normalizer(data, Normalizer.norm='l2'), RBFSampler.gamma=0.2)), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.75))", "DecisionTreeClassifier(Nystroem(MinMaxScaler(data), Nystroem.gamma=0.25, Nystroem.kernel='rbf', Nystroem.n_components=6), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=7, min_samples_leaf=18, min_samples_split=10)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.75), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=13, min_samples_split=19, ExtraTreesClassifier.n_estimators=100)", "GaussianNB(RBFSampler(MaxAbsScaler(data), RBFSampler.gamma=0.8500000000000001))", "BernoulliNB(Nystroem(Normalizer(data, Normalizer.norm='l1'), Nystroem.gamma=0.35000000000000003, Nystroem.kernel='linear', Nystroem.n_components=6), alpha=10.0, fit_prior=True)", "BernoulliNB(Nystroem(SelectPercentile(data, SelectPercentile.percentile=44, SelectPercentile.score_func=f_classif), Nystroem.gamma=0.0, Nystroem.kernel='poly', Nystroem.n_components=6), alpha=10.0, fit_prior=False)", "DecisionTreeClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.3), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=8, min_samples_leaf=4, min_samples_split=20)", "DecisionTreeClassifier(Normalizer(VarianceThreshold(data, VarianceThreshold.threshold=0.25), Normalizer.norm='l2'), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=6, min_samples_leaf=11, min_samples_split=2)", "DecisionTreeClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.25), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=6, min_samples_leaf=11, min_samples_split=2)", "GaussianNB(VarianceThreshold(RobustScaler(data), VarianceThreshold.threshold=0.8))", "BernoulliNB(MinMaxScaler(data), alpha=0.001, fit_prior=True)", "GradientBoostingClassifier(RBFSampler(Normalizer(data, Normalizer.norm='l1'), RBFSampler.gamma=0.35000000000000003), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.3)", "DecisionTreeClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.25), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=2, min_samples_leaf=14, min_samples_split=14)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), alpha=0.01, fit_prior=True)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.9), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=2, min_samples_leaf=14, min_samples_split=14)", "BernoulliNB(RBFSampler(StandardScaler(data), RBFSampler.gamma=0.7000000000000001), alpha=0.01, fit_prior=True)", "GaussianNB(VarianceThreshold(data, VarianceThreshold.threshold=0.3))", "BernoulliNB(MaxAbsScaler(MinMaxScaler(data)), alpha=10.0, fit_prior=False)", "GaussianNB(VarianceThreshold(data, VarianceThreshold.threshold=0.9500000000000001))", "BernoulliNB(VarianceThreshold(data, VarianceThreshold.threshold=0.1), alpha=0.1, fit_prior=False)", "ExtraTreesClassifier(RBFSampler(Binarizer(data, Binarizer.threshold=0.55), RBFSampler.gamma=0.05), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=4, min_samples_split=13, ExtraTreesClassifier.n_estimators=100)", "DecisionTreeClassifier(MaxAbsScaler(Nystroem(data, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='linear', Nystroem.n_components=4)), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=8, min_samples_leaf=10, min_samples_split=14)", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.8500000000000001, Nystroem.kernel='laplacian', Nystroem.n_components=1), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=10, min_samples_leaf=18, min_samples_split=11)", "ExtraTreesClassifier(FeatureAgglomeration(RBFSampler(data, RBFSampler.gamma=0.0), FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='average'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=7, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(SelectPercentile(Nystroem(data, Nystroem.gamma=0.8, Nystroem.kernel='sigmoid', Nystroem.n_components=8), SelectPercentile.percentile=20, SelectPercentile.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.5, RandomForestClassifier.min_samples_leaf=7, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "DecisionTreeClassifier(Nystroem(MaxAbsScaler(data), Nystroem.gamma=0.8500000000000001, Nystroem.kernel='polynomial', Nystroem.n_components=3), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=8, min_samples_leaf=10, min_samples_split=14)", "LogisticRegression(Binarizer(StandardScaler(Binarizer(data, Binarizer.threshold=1.0)), Binarizer.threshold=0.8500000000000001), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(Binarizer(data, Binarizer.threshold=1.0)), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "DecisionTreeClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.15000000000000002), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=7, min_samples_leaf=1, min_samples_split=4)", "DecisionTreeClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.5), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=7, min_samples_leaf=9, min_samples_split=4)", "DecisionTreeClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.5), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=7, min_samples_leaf=1, min_samples_split=19)", "DecisionTreeClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.5), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=7, min_samples_leaf=1, min_samples_split=4)", "DecisionTreeClassifier(VarianceThreshold(data, VarianceThreshold.threshold=1.0), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=7, min_samples_leaf=1, min_samples_split=4)", "GaussianNB(VarianceThreshold(VarianceThreshold(data, VarianceThreshold.threshold=0.15000000000000002), VarianceThreshold.threshold=0.4))", "BernoulliNB(StandardScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.45)), alpha=0.001, fit_prior=False)", "LogisticRegression(RobustScaler(data), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')"], "Click_prediction_small": ["MultinomialNB(Normalizer(Normalizer(data, Normalizer.norm='l2'), Normalizer.norm='l1'), alpha=0.1, fit_prior=False)", "MultinomialNB(Normalizer(data, Normalizer.norm='l2'), alpha=0.001, fit_prior=True)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.4, Nystroem.kernel='cosine', Nystroem.n_components=3), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=4, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "KNeighborsClassifier(Binarizer(Normalizer(data, Normalizer.norm='l1'), Binarizer.threshold=0.25), KNeighborsClassifier.n_neighbors=45, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='uniform')", "ExtraTreesClassifier(Normalizer(Normalizer(data, Normalizer.norm='l1'), Normalizer.norm='max'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=16, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.0), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=18, RandomForestClassifier.min_samples_split=12, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='max'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=13, RandomForestClassifier.min_samples_split=12, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(SelectPercentile(Normalizer(data, Normalizer.norm='l1'), SelectPercentile.percentile=78, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.6000000000000001, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='l1'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=16, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "GaussianNB(Nystroem(VarianceThreshold(data, VarianceThreshold.threshold=0.45), Nystroem.gamma=0.75, Nystroem.kernel='laplacian', Nystroem.n_components=1))", "KNeighborsClassifier(Nystroem(FeatureAgglomeration(data, FeatureAgglomeration.affinity='manhattan', FeatureAgglomeration.linkage='average'), Nystroem.gamma=0.05, Nystroem.kernel='chi2', Nystroem.n_components=4), KNeighborsClassifier.n_neighbors=29, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='uniform')", "RandomForestClassifier(MinMaxScaler(Nystroem(data, Nystroem.gamma=0.25, Nystroem.kernel='chi2', Nystroem.n_components=5)), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=15, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "GaussianNB(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False))", "RandomForestClassifier(Normalizer(data, Normalizer.norm='l1'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=16, RandomForestClassifier.min_samples_split=16, RandomForestClassifier.n_estimators=100)", "MultinomialNB(SelectPercentile(data, SelectPercentile.percentile=4, SelectPercentile.score_func=f_classif), alpha=0.01, fit_prior=False)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='chi2', Nystroem.n_components=1), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "MultinomialNB(Nystroem(data, Nystroem.gamma=0.30000000000000004, Nystroem.kernel='cosine', Nystroem.n_components=3), alpha=0.1, fit_prior=False)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='max'), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=10, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "LogisticRegression(data, LogisticRegression.C=0.001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.15000000000000002, Nystroem.kernel='cosine', Nystroem.n_components=7), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.8500000000000001, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "MultinomialNB(Normalizer(data, Normalizer.norm='l2'), alpha=0.1, fit_prior=True)", "GaussianNB(Nystroem(data, Nystroem.gamma=0.5, Nystroem.kernel='polynomial', Nystroem.n_components=5))", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.55, Nystroem.kernel='laplacian', Nystroem.n_components=10), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=15, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(Normalizer(data, Normalizer.norm='l2'), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.15000000000000002)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='l2'), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=16, RandomForestClassifier.min_samples_split=13, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='l1'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.5, RandomForestClassifier.min_samples_leaf=7, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.55, Nystroem.kernel='laplacian', Nystroem.n_components=10), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=15, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.9500000000000001, Nystroem.kernel='cosine', Nystroem.n_components=2), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=19, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(Normalizer(data, Normalizer.norm='max'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=13, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='l2'), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=14, RandomForestClassifier.min_samples_split=17, RandomForestClassifier.n_estimators=100)", "GaussianNB(Normalizer(data, Normalizer.norm='max'))", "KNeighborsClassifier(SelectPercentile(data, SelectPercentile.percentile=11, SelectPercentile.score_func=f_classif), KNeighborsClassifier.n_neighbors=20, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='uniform')", "GaussianNB(SelectPercentile(Normalizer(data, Normalizer.norm='l1'), SelectPercentile.percentile=17, SelectPercentile.score_func=f_classif))", "GradientBoostingClassifier(RBFSampler(SelectFwe(data, SelectFwe.alpha=0.01, SelectFwe.score_func=f_classif), RBFSampler.gamma=0.9500000000000001), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.9500000000000001, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.25, Nystroem.kernel='sigmoid', Nystroem.n_components=2), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=5, min_samples_leaf=19, min_samples_split=12)", "BernoulliNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='complete'), alpha=0.01, fit_prior=True)", "DecisionTreeClassifier(Normalizer(data, Normalizer.norm='l2'), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=9, min_samples_leaf=15, min_samples_split=6)", "GradientBoostingClassifier(Normalizer(data, Normalizer.norm='max'), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.9500000000000001, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "RandomForestClassifier(MinMaxScaler(Nystroem(data, Nystroem.gamma=0.8500000000000001, Nystroem.kernel='sigmoid', Nystroem.n_components=5)), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=17, RandomForestClassifier.min_samples_split=9, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(Normalizer(data, Normalizer.norm='l2'), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=14, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "GaussianNB(Normalizer(data, Normalizer.norm='l2'))", "RandomForestClassifier(SelectPercentile(data, SelectPercentile.percentile=17, SelectPercentile.score_func=f_classif), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.05, Nystroem.kernel='laplacian', Nystroem.n_components=9), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=11, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Normalizer(data, Normalizer.norm='max'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=7, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(Normalizer(data, Normalizer.norm='max'), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=12, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.05)", "GaussianNB(Nystroem(data, Nystroem.gamma=0.5, Nystroem.kernel='laplacian', Nystroem.n_components=5))", "ExtraTreesClassifier(Normalizer(data, Normalizer.norm='l2'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=15, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(FeatureAgglomeration(MinMaxScaler(data), FeatureAgglomeration.affinity='l1', FeatureAgglomeration.linkage='average'), alpha=0.01, fit_prior=True)", "ExtraTreesClassifier(Normalizer(Nystroem(data, Nystroem.gamma=0.5, Nystroem.kernel='laplacian', Nystroem.n_components=10), Normalizer.norm='l1'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.2, min_samples_leaf=9, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Binarizer(Normalizer(data, Normalizer.norm='l1'), Binarizer.threshold=0.9500000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=11, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='l1'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.05, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='l2'), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=11, RandomForestClassifier.min_samples_split=19, RandomForestClassifier.n_estimators=100)", "LogisticRegression(Nystroem(data, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='poly', Nystroem.n_components=10), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "DecisionTreeClassifier(Normalizer(data, Normalizer.norm='l1'), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=1, min_samples_leaf=11, min_samples_split=20)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='l2'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.05, RandomForestClassifier.min_samples_leaf=19, RandomForestClassifier.min_samples_split=17, RandomForestClassifier.n_estimators=100)", "DecisionTreeClassifier(Normalizer(data, Normalizer.norm='l1'), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=1, min_samples_leaf=11, min_samples_split=15)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='cosine', Nystroem.n_components=4), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=6, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(Normalizer(Normalizer(data, Normalizer.norm='max'), Normalizer.norm='l1'), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.9500000000000001, Nystroem.kernel='chi2', Nystroem.n_components=1), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.05, RandomForestClassifier.min_samples_leaf=19, RandomForestClassifier.min_samples_split=11, RandomForestClassifier.n_estimators=100)", "LogisticRegression(Nystroem(data, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='poly', Nystroem.n_components=10), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "KNeighborsClassifier(Nystroem(data, Nystroem.gamma=0.65, Nystroem.kernel='cosine', Nystroem.n_components=4), KNeighborsClassifier.n_neighbors=27, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='distance')", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.75, Nystroem.kernel='laplacian', Nystroem.n_components=5), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=3, min_samples_leaf=2, min_samples_split=11)", "GradientBoostingClassifier(Normalizer(data, Normalizer.norm='max'), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "LogisticRegression(VarianceThreshold(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l1', FeatureAgglomeration.linkage='complete'), VarianceThreshold.threshold=1.0), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GradientBoostingClassifier(Normalizer(data, Normalizer.norm='l2'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.30000000000000004, Nystroem.kernel='sigmoid', Nystroem.n_components=8), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(Normalizer(data, Normalizer.norm='l1'), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.9500000000000001, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.5, Nystroem.kernel='chi2', Nystroem.n_components=2), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(Normalizer(data, Normalizer.norm='max'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "MultinomialNB(Normalizer(data, Normalizer.norm='max'), alpha=0.1, fit_prior=False)", "MultinomialNB(Normalizer(data, Normalizer.norm='max'), alpha=0.001, fit_prior=False)", "GaussianNB(Normalizer(data, Normalizer.norm='max'))", "RandomForestClassifier(MinMaxScaler(Nystroem(data, Nystroem.gamma=0.75, Nystroem.kernel='cosine', Nystroem.n_components=4)), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=9, RandomForestClassifier.min_samples_split=10, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='l1'), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=6, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "DecisionTreeClassifier(Normalizer(data, Normalizer.norm='l2'), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=3, min_samples_leaf=9, min_samples_split=4)", "LogisticRegression(Normalizer(data, Normalizer.norm='max'), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "RandomForestClassifier(Normalizer(data, Normalizer.norm='max'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=6, RandomForestClassifier.min_samples_split=10, RandomForestClassifier.n_estimators=100)", "MultinomialNB(Normalizer(data, Normalizer.norm='l2'), alpha=10.0, fit_prior=False)", "MultinomialNB(Normalizer(data, Normalizer.norm='l2'), alpha=10.0, fit_prior=True)", "MultinomialNB(Normalizer(data, Normalizer.norm='l2'), alpha=0.001, fit_prior=True)", "GaussianNB(Normalizer(data, Normalizer.norm='max'))", "GaussianNB(Normalizer(Normalizer(data, Normalizer.norm='max'), Normalizer.norm='max'))", "GradientBoostingClassifier(PCA(data, PCA.iterated_power=2, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.55)", "ExtraTreesClassifier(Normalizer(data, Normalizer.norm='l1'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=1, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.55, Nystroem.kernel='cosine', Nystroem.n_components=8), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=8, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LogisticRegression.C=0.001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.55, Nystroem.kernel='laplacian', Nystroem.n_components=4), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=9, min_samples_leaf=2, min_samples_split=9)"], "arcene": ["LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.65), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RBFSampler(SelectPercentile(data, SelectPercentile.percentile=38, SelectPercentile.score_func=f_classif), RBFSampler.gamma=0.2), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectPercentile(RBFSampler(data, RBFSampler.gamma=0.2), SelectPercentile.percentile=38, SelectPercentile.score_func=f_classif), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectPercentile(FastICA(data, FastICA.tol=0.5, FastICA.whiten='unit-variance'), SelectPercentile.percentile=38, SelectPercentile.score_func=f_classif), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectPercentile(RBFSampler(data, RBFSampler.gamma=0.9), SelectPercentile.percentile=38, SelectPercentile.score_func=f_classif), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RBFSampler(SelectPercentile(data, SelectPercentile.percentile=52, SelectPercentile.score_func=f_classif), RBFSampler.gamma=0.2), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectPercentile(FastICA(data, FastICA.tol=0.25, FastICA.whiten='unit-variance'), SelectPercentile.percentile=39, SelectPercentile.score_func=f_classif), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectPercentile(FastICA(data, FastICA.tol=0.45, FastICA.whiten='unit-variance'), SelectPercentile.percentile=38, SelectPercentile.score_func=f_classif), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectPercentile(FastICA(data, FastICA.tol=0.65, FastICA.whiten='unit-variance'), SelectPercentile.percentile=38, SelectPercentile.score_func=f_classif), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectPercentile(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), SelectPercentile.percentile=39, SelectPercentile.score_func=f_classif), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectPercentile(RBFSampler(data, RBFSampler.gamma=0.4), SelectPercentile.percentile=44, SelectPercentile.score_func=f_classif), LogisticRegression.C=0.1, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.45), LogisticRegression.C=0.0001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectPercentile(RBFSampler(data, RBFSampler.gamma=0.9), SelectPercentile.percentile=60, SelectPercentile.score_func=f_classif), LogisticRegression.C=0.1, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RBFSampler(StandardScaler(data), RBFSampler.gamma=0.8), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.45), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.8), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), LogisticRegression.C=0.1, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RBFSampler(VarianceThreshold(data, VarianceThreshold.threshold=0.35000000000000003), RBFSampler.gamma=0.30000000000000004), LogisticRegression.C=0.1, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.5), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(FastICA(data, FastICA.tol=0.5, FastICA.whiten='unit-variance'), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(FastICA(data, FastICA.tol=0.25, FastICA.whiten='unit-variance'), LogisticRegression.C=0.0001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(FastICA(data, FastICA.tol=0.5, FastICA.whiten='unit-variance'), LogisticRegression.C=0.001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(FastICA(data, FastICA.tol=0.15000000000000002, FastICA.whiten='unit-variance'), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(FastICA(data, FastICA.tol=0.7000000000000001, FastICA.whiten='unit-variance'), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(FastICA(data, FastICA.tol=0.8, FastICA.whiten='unit-variance'), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(FastICA(data, FastICA.tol=0.6000000000000001, FastICA.whiten='unit-variance'), LogisticRegression.C=0.001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(FastICA(data, FastICA.tol=0.8, FastICA.whiten='unit-variance'), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(FastICA(data, FastICA.tol=0.0, FastICA.whiten='unit-variance'), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(FastICA(data, FastICA.tol=0.35000000000000003, FastICA.whiten='unit-variance'), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=1.0), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.1), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.25), LogisticRegression.C=0.1, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PCA(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), PCA.iterated_power=1, PCA.svd_solver='randomized'), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GradientBoostingClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.4), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.5)", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.25), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(FastICA(VarianceThreshold(data, VarianceThreshold.threshold=0.2), FastICA.tol=0.30000000000000004, FastICA.whiten='unit-variance'), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RBFSampler(PCA(data, PCA.iterated_power=9, PCA.svd_solver='randomized'), RBFSampler.gamma=0.30000000000000004), LogisticRegression.C=0.001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.8), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "KNeighborsClassifier(SelectPercentile(FastICA(data, FastICA.tol=0.5, FastICA.whiten='unit-variance'), SelectPercentile.percentile=4, SelectPercentile.score_func=f_classif), KNeighborsClassifier.n_neighbors=4, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='distance')", "KNeighborsClassifier(SelectPercentile(FastICA(data, FastICA.tol=0.55, FastICA.whiten='unit-variance'), SelectPercentile.percentile=13, SelectPercentile.score_func=f_classif), KNeighborsClassifier.n_neighbors=4, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='distance')", "LogisticRegression(FastICA(SelectPercentile(data, SelectPercentile.percentile=80, SelectPercentile.score_func=f_classif), FastICA.tol=0.45, FastICA.whiten='unit-variance'), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "KNeighborsClassifier(RBFSampler(data, RBFSampler.gamma=0.45), KNeighborsClassifier.n_neighbors=4, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='distance')", "KNeighborsClassifier(FastICA(data, FastICA.tol=0.0, FastICA.whiten='unit-variance'), KNeighborsClassifier.n_neighbors=5, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='distance')", "ExtraTreesClassifier(PCA(RBFSampler(data, RBFSampler.gamma=0.55), PCA.iterated_power=7, PCA.svd_solver='randomized'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=2, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "KNeighborsClassifier(FastICA(data, FastICA.tol=0.0, FastICA.whiten='unit-variance'), KNeighborsClassifier.n_neighbors=5, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='distance')", "KNeighborsClassifier(SelectPercentile(FastICA(data, FastICA.tol=0.8500000000000001, FastICA.whiten='unit-variance'), SelectPercentile.percentile=8, SelectPercentile.score_func=f_classif), KNeighborsClassifier.n_neighbors=4, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='distance')", "KNeighborsClassifier(FastICA(SelectPercentile(data, SelectPercentile.percentile=8, SelectPercentile.score_func=f_classif), FastICA.tol=0.05, FastICA.whiten='unit-variance'), KNeighborsClassifier.n_neighbors=4, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='distance')", "KNeighborsClassifier(SelectPercentile(FastICA(data, FastICA.tol=0.7000000000000001, FastICA.whiten='unit-variance'), SelectPercentile.percentile=8, SelectPercentile.score_func=f_classif), KNeighborsClassifier.n_neighbors=4, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='distance')", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.45), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=5, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.75), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=5, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.75), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=5, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.75), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=10, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(RobustScaler(data), RBFSampler.gamma=0.35000000000000003), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=1, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(SelectPercentile(data, SelectPercentile.percentile=35, SelectPercentile.score_func=f_classif), RBFSampler.gamma=0.8), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=5, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "DecisionTreeClassifier(RBFSampler(RBFSampler(data, RBFSampler.gamma=0.4), RBFSampler.gamma=0.15000000000000002), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=3, min_samples_leaf=11, min_samples_split=14)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.45), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=3, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(FastICA(MinMaxScaler(data), FastICA.tol=0.30000000000000004, FastICA.whiten='unit-variance'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=3, min_samples_split=13, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=1, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=1, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.4), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=1, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.2), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=12, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.25), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=1, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.65), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.15000000000000002, min_samples_leaf=2, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.45), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.05), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=7, min_samples_split=18, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(SelectPercentile(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), SelectPercentile.percentile=43, SelectPercentile.score_func=f_classif), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RBFSampler(SelectPercentile(data, SelectPercentile.percentile=50, SelectPercentile.score_func=f_classif), RBFSampler.gamma=0.45), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GradientBoostingClassifier(PCA(RBFSampler(data, RBFSampler.gamma=0.65), PCA.iterated_power=4, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=13, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "LogisticRegression(FastICA(SelectPercentile(data, SelectPercentile.percentile=46, SelectPercentile.score_func=f_classif), FastICA.tol=1.0, FastICA.whiten='unit-variance'), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectPercentile(RBFSampler(data, RBFSampler.gamma=0.4), SelectPercentile.percentile=46, SelectPercentile.score_func=f_classif), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=3, min_samples_leaf=17, min_samples_split=4)", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectPercentile(RBFSampler(data, RBFSampler.gamma=0.45), SelectPercentile.percentile=22, SelectPercentile.score_func=f_classif), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectPercentile(RBFSampler(data, RBFSampler.gamma=0.2), SelectPercentile.percentile=6, SelectPercentile.score_func=f_classif), LogisticRegression.C=0.1, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectPercentile(RobustScaler(data), SelectPercentile.percentile=39, SelectPercentile.score_func=f_classif), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.75), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(FastICA(data, FastICA.tol=0.30000000000000004, FastICA.whiten='unit-variance'), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.9500000000000001, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=3, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.1), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.9500000000000001, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=1.0), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6000000000000001, min_samples_leaf=5, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.2), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.4), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "KNeighborsClassifier(RBFSampler(PCA(data, PCA.iterated_power=3, PCA.svd_solver='randomized'), RBFSampler.gamma=0.9500000000000001), KNeighborsClassifier.n_neighbors=48, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='uniform')"], "Fashion-MNIST": ["DecisionTreeClassifier(Binarizer(MaxAbsScaler(Binarizer(data, Binarizer.threshold=0.8500000000000001)), Binarizer.threshold=0.30000000000000004), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=9, min_samples_leaf=16, min_samples_split=10)", "DecisionTreeClassifier(SelectPercentile(data, SelectPercentile.percentile=44, SelectPercentile.score_func=f_classif), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=8, min_samples_leaf=11, min_samples_split=9)", "DecisionTreeClassifier(MaxAbsScaler(data), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=9, min_samples_leaf=16, min_samples_split=10)", "DecisionTreeClassifier(Binarizer(MaxAbsScaler(Binarizer(data, Binarizer.threshold=0.8500000000000001)), Binarizer.threshold=0.30000000000000004), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=9, min_samples_leaf=16, min_samples_split=10)", "DecisionTreeClassifier(MaxAbsScaler(data), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=9, min_samples_leaf=16, min_samples_split=10)", "DecisionTreeClassifier(MaxAbsScaler(data), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=9, min_samples_leaf=16, min_samples_split=13)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=9, min_samples_leaf=16, min_samples_split=10)", "DecisionTreeClassifier(Binarizer(MaxAbsScaler(data), Binarizer.threshold=0.30000000000000004), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=9, min_samples_leaf=16, min_samples_split=10)", "DecisionTreeClassifier(StandardScaler(Nystroem(MinMaxScaler(data), Nystroem.gamma=0.25, Nystroem.kernel='rbf', Nystroem.n_components=6)), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=7, min_samples_leaf=18, min_samples_split=10)", "DecisionTreeClassifier(Nystroem(MinMaxScaler(data), Nystroem.gamma=0.25, Nystroem.kernel='rbf', Nystroem.n_components=6), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=7, min_samples_leaf=18, min_samples_split=10)", "LogisticRegression(MaxAbsScaler(MaxAbsScaler(data)), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MaxAbsScaler(data), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(data), LogisticRegression.C=0.0001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "BernoulliNB(PCA(Binarizer(data, Binarizer.threshold=0.5), PCA.iterated_power=2, PCA.svd_solver='randomized'), alpha=0.001, fit_prior=True)", "BernoulliNB(PCA(data, PCA.iterated_power=2, PCA.svd_solver='randomized'), alpha=0.001, fit_prior=True)", "LogisticRegression(SelectPercentile(data, SelectPercentile.percentile=9, SelectPercentile.score_func=f_classif), LogisticRegression.C=0.0001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=4, min_samples_leaf=6, min_samples_split=15)", "LogisticRegression(data, LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=0.1, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(data), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectPercentile(data, SelectPercentile.percentile=52, SelectPercentile.score_func=f_classif), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "RandomForestClassifier(MaxAbsScaler(SelectPercentile(data, SelectPercentile.percentile=12, SelectPercentile.score_func=f_classif)), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=13, RandomForestClassifier.min_samples_split=15, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MaxAbsScaler(SelectPercentile(data, SelectPercentile.percentile=12, SelectPercentile.score_func=f_classif)), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=20, RandomForestClassifier.min_samples_split=15, RandomForestClassifier.n_estimators=100)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=6, min_samples_leaf=6, min_samples_split=3)", "DecisionTreeClassifier(RobustScaler(data), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=8, min_samples_leaf=4, min_samples_split=11)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=5, min_samples_leaf=4, min_samples_split=5)", "LogisticRegression(MaxAbsScaler(data), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=0.001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(StandardScaler(data), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.05, min_samples_leaf=9, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.05, min_samples_leaf=17, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(StandardScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.8500000000000001)), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.05, min_samples_leaf=16, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(StandardScaler(RobustScaler(data)), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.05, min_samples_leaf=16, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectPercentile(data, SelectPercentile.percentile=24, SelectPercentile.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.05, min_samples_leaf=17, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=6, min_samples_leaf=13, min_samples_split=14)", "LogisticRegression(data, LogisticRegression.C=0.0001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=7, min_samples_leaf=1, min_samples_split=10)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=7, min_samples_leaf=1, min_samples_split=4)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=7, min_samples_leaf=1, min_samples_split=4)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=9, min_samples_leaf=19, min_samples_split=7)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=5, min_samples_leaf=14, min_samples_split=3)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=5, min_samples_leaf=1, min_samples_split=20)", "DecisionTreeClassifier(RobustScaler(data), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=10, min_samples_leaf=16, min_samples_split=7)", "DecisionTreeClassifier(RobustScaler(data), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=10, min_samples_leaf=16, min_samples_split=9)", "LogisticRegression(MinMaxScaler(Normalizer(data, Normalizer.norm='l2')), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MinMaxScaler(data), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MinMaxScaler(MinMaxScaler(data)), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.2, Nystroem.kernel='linear', Nystroem.n_components=8), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=14, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RobustScaler(Nystroem(data, Nystroem.gamma=0.2, Nystroem.kernel='linear', Nystroem.n_components=8)), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=14, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.2, Nystroem.kernel='linear', Nystroem.n_components=8), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=19, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=7, min_samples_leaf=19, min_samples_split=18)", "DecisionTreeClassifier(StandardScaler(data), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=7, min_samples_leaf=19, min_samples_split=18)", "DecisionTreeClassifier(MaxAbsScaler(data), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=7, min_samples_leaf=19, min_samples_split=18)", "LogisticRegression(data, LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(data), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(StandardScaler(data)), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "DecisionTreeClassifier(SelectFwe(data, SelectFwe.alpha=0.037, SelectFwe.score_func=f_classif), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=5, min_samples_leaf=12, min_samples_split=4)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=5, min_samples_leaf=12, min_samples_split=4)", "DecisionTreeClassifier(Normalizer(data, Normalizer.norm='l1'), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=5, min_samples_leaf=12, min_samples_split=4)", "BernoulliNB(StandardScaler(PCA(data, PCA.iterated_power=4, PCA.svd_solver='randomized')), alpha=0.01, fit_prior=True)", "MultinomialNB(Normalizer(data, Normalizer.norm='l2'), alpha=10.0, fit_prior=False)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=4, min_samples_leaf=16, min_samples_split=12)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=4, min_samples_leaf=11, min_samples_split=5)", "DecisionTreeClassifier(SelectFwe(data, SelectFwe.alpha=0.023, SelectFwe.score_func=f_classif), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=6, min_samples_leaf=20, min_samples_split=18)", "DecisionTreeClassifier(SelectFwe(data, SelectFwe.alpha=0.023, SelectFwe.score_func=f_classif), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=6, min_samples_leaf=20, min_samples_split=19)", "DecisionTreeClassifier(VarianceThreshold(SelectFwe(data, SelectFwe.alpha=0.023, SelectFwe.score_func=f_classif), VarianceThreshold.threshold=0.5), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=6, min_samples_leaf=20, min_samples_split=18)", "DecisionTreeClassifier(MaxAbsScaler(data), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=6, min_samples_leaf=20, min_samples_split=18)", "DecisionTreeClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.6000000000000001), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=6, min_samples_leaf=20, min_samples_split=18)", "DecisionTreeClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.5), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=6, min_samples_leaf=20, min_samples_split=18)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=6, min_samples_leaf=13, min_samples_split=10)", "DecisionTreeClassifier(RobustScaler(data), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=6, min_samples_leaf=20, min_samples_split=18)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=6, min_samples_leaf=20, min_samples_split=18)", "DecisionTreeClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.5), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=6, min_samples_leaf=17, min_samples_split=18)", "LogisticRegression(StandardScaler(data), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(VarianceThreshold(data, VarianceThreshold.threshold=0.2), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "DecisionTreeClassifier(Normalizer(VarianceThreshold(data, VarianceThreshold.threshold=0.6000000000000001), Normalizer.norm='max'), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=6, min_samples_leaf=2, min_samples_split=7)", "DecisionTreeClassifier(SelectFwe(data, SelectFwe.alpha=0.001, SelectFwe.score_func=f_classif), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=6, min_samples_leaf=17, min_samples_split=20)", "DecisionTreeClassifier(SelectFwe(SelectFwe(data, SelectFwe.alpha=0.032, SelectFwe.score_func=f_classif), SelectFwe.alpha=0.001, SelectFwe.score_func=f_classif), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=6, min_samples_leaf=17, min_samples_split=20)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=6, min_samples_leaf=2, min_samples_split=7)", "DecisionTreeClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.8), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=7, min_samples_leaf=16, min_samples_split=8)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=7, min_samples_leaf=16, min_samples_split=8)", "DecisionTreeClassifier(SelectFwe(SelectFwe(Binarizer(data, Binarizer.threshold=0.9500000000000001), SelectFwe.alpha=0.032, SelectFwe.score_func=f_classif), SelectFwe.alpha=0.001, SelectFwe.score_func=f_classif), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=6, min_samples_leaf=17, min_samples_split=20)", "BernoulliNB(PCA(FastICA(data, FastICA.tol=0.7000000000000001, FastICA.whiten='unit-variance'), PCA.iterated_power=2, PCA.svd_solver='randomized'), alpha=0.1, fit_prior=False)"], "PhishingWebsites": ["BernoulliNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='ward'), alpha=0.001, fit_prior=True)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='sigmoid', Nystroem.n_components=8), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=7, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "MultinomialNB(SelectFwe(SelectPercentile(data, SelectPercentile.percentile=1, SelectPercentile.score_func=f_classif), SelectFwe.alpha=0.039, SelectFwe.score_func=f_classif), alpha=1.0, fit_prior=False)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.55, Nystroem.kernel='linear', Nystroem.n_components=3), alpha=0.001, fit_prior=True)", "KNeighborsClassifier(Binarizer(RBFSampler(data, RBFSampler.gamma=1.0), Binarizer.threshold=0.65), KNeighborsClassifier.n_neighbors=48, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='uniform')", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.45, Nystroem.kernel='sigmoid', Nystroem.n_components=6), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=6, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Normalizer(FastICA(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='complete'), FastICA.tol=0.9500000000000001, FastICA.whiten='unit-variance'), Normalizer.norm='max'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.55, min_samples_leaf=17, min_samples_split=20, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l2', FeatureAgglomeration.linkage='complete'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=14, min_samples_split=20, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l2', FeatureAgglomeration.linkage='complete'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=12, GradientBoostingClassifier.min_samples_split=13, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.55)", "GradientBoostingClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l1', FeatureAgglomeration.linkage='complete'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.15000000000000002)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.0), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=10, min_samples_leaf=12, min_samples_split=11)", "BernoulliNB(PolynomialFeatures(Nystroem(data, Nystroem.gamma=0.5, Nystroem.kernel='rbf', Nystroem.n_components=2), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), alpha=1.0, fit_prior=False)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.65, Nystroem.kernel='sigmoid', Nystroem.n_components=7), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=14, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.9, Nystroem.kernel='sigmoid', Nystroem.n_components=1), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.05, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GaussianNB(RBFSampler(Binarizer(data, Binarizer.threshold=0.05), RBFSampler.gamma=0.0))", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='chi2', Nystroem.n_components=10), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=2, min_samples_split=18, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='sigmoid', Nystroem.n_components=3), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='poly', Nystroem.n_components=6), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=13, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='sigmoid', Nystroem.n_components=7), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=6, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='complete'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=13, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "RandomForestClassifier(Binarizer(Normalizer(data, Normalizer.norm='l1'), Binarizer.threshold=0.25), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.05, RandomForestClassifier.min_samples_leaf=6, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Binarizer(Normalizer(data, Normalizer.norm='l1'), Binarizer.threshold=0.2), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.05, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.9500000000000001, Nystroem.kernel='sigmoid', Nystroem.n_components=9), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.9000000000000001, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.30000000000000004, Nystroem.kernel='linear', Nystroem.n_components=7), alpha=100.0, fit_prior=False)", "BernoulliNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='ward'), alpha=0.001, fit_prior=False)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.0), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(FeatureAgglomeration(SelectFwe(data, SelectFwe.alpha=0.029, SelectFwe.score_func=f_classif), FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='average'), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=5, RandomForestClassifier.n_estimators=100)", "DecisionTreeClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='complete'), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=6, min_samples_leaf=9, min_samples_split=4)", "RandomForestClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l2', FeatureAgglomeration.linkage='complete'), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "GaussianNB(MinMaxScaler(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l1', FeatureAgglomeration.linkage='average')))", "KNeighborsClassifier(PCA(FeatureAgglomeration(data, FeatureAgglomeration.affinity='manhattan', FeatureAgglomeration.linkage='average'), PCA.iterated_power=10, PCA.svd_solver='randomized'), KNeighborsClassifier.n_neighbors=49, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='distance')", "BernoulliNB(MinMaxScaler(StandardScaler(Nystroem(data, Nystroem.gamma=0.25, Nystroem.kernel='chi2', Nystroem.n_components=1))), alpha=1.0, fit_prior=True)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.8500000000000001, Nystroem.kernel='cosine', Nystroem.n_components=2), alpha=1.0, fit_prior=True)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.9500000000000001, Nystroem.kernel='sigmoid', Nystroem.n_components=5), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "BernoulliNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='complete'), alpha=0.01, fit_prior=True)", "RandomForestClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='ward'), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=7, RandomForestClassifier.min_samples_split=9, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='manhattan', FeatureAgglomeration.linkage='complete'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.9500000000000001, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "RandomForestClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='complete'), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.5, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=10, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l1', FeatureAgglomeration.linkage='complete'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.9500000000000001, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "GradientBoostingClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='complete'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.8500000000000001, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.55)", "RandomForestClassifier(MaxAbsScaler(Nystroem(data, Nystroem.gamma=0.45, Nystroem.kernel='sigmoid', Nystroem.n_components=1)), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=10, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Nystroem(SelectFwe(data, SelectFwe.alpha=0.04, SelectFwe.score_func=f_classif), Nystroem.gamma=0.75, Nystroem.kernel='sigmoid', Nystroem.n_components=9), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=1.0, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=18, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='sigmoid', Nystroem.n_components=10), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='poly', Nystroem.n_components=10), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(Nystroem(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), Nystroem.gamma=0.30000000000000004, Nystroem.kernel='chi2', Nystroem.n_components=1), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=13, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='complete'), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "RandomForestClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='manhattan', FeatureAgglomeration.linkage='complete'), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='complete'), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=6, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l1', FeatureAgglomeration.linkage='complete'), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=10, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='manhattan', FeatureAgglomeration.linkage='complete'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=6, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.55, Nystroem.kernel='sigmoid', Nystroem.n_components=5), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=1, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.0), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=1, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(Nystroem(PCA(data, PCA.iterated_power=2, PCA.svd_solver='randomized'), Nystroem.gamma=0.15000000000000002, Nystroem.kernel='rbf', Nystroem.n_components=4), alpha=0.001, fit_prior=True)", "GradientBoostingClassifier(MaxAbsScaler(Nystroem(data, Nystroem.gamma=0.9500000000000001, Nystroem.kernel='sigmoid', Nystroem.n_components=6)), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "ExtraTreesClassifier(Binarizer(Normalizer(data, Normalizer.norm='l1'), Binarizer.threshold=0.9500000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.55, min_samples_leaf=15, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='laplacian', Nystroem.n_components=9), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.05, min_samples_leaf=1, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='sigmoid', Nystroem.n_components=4), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.05, min_samples_leaf=1, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.45, Nystroem.kernel='sigmoid', Nystroem.n_components=8), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=5, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(RBFSampler(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='complete'), RBFSampler.gamma=0.75), alpha=0.1, fit_prior=True)", "ExtraTreesClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='complete'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.55, min_samples_leaf=5, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='sigmoid', Nystroem.n_components=1), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.0), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "ExtraTreesClassifier(Binarizer(Normalizer(data, Normalizer.norm='l1'), Binarizer.threshold=0.9500000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=11, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.0), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=2, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "GaussianNB(PolynomialFeatures(Nystroem(data, Nystroem.gamma=0.65, Nystroem.kernel='sigmoid', Nystroem.n_components=5), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False))", "MultinomialNB(Nystroem(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='average'), Nystroem.gamma=0.6000000000000001, Nystroem.kernel='linear', Nystroem.n_components=4), alpha=100.0, fit_prior=False)", "RandomForestClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='complete'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.7000000000000001, RandomForestClassifier.min_samples_leaf=7, RandomForestClassifier.min_samples_split=15, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='ward'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=4, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l1', FeatureAgglomeration.linkage='complete'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=4, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l1', FeatureAgglomeration.linkage='complete'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=2, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "KNeighborsClassifier(MinMaxScaler(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l2', FeatureAgglomeration.linkage='complete')), KNeighborsClassifier.n_neighbors=23, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='uniform')", "LogisticRegression(FeatureAgglomeration(data, FeatureAgglomeration.affinity='manhattan', FeatureAgglomeration.linkage='complete'), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "BernoulliNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='complete'), alpha=100.0, fit_prior=False)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.45, Nystroem.kernel='sigmoid', Nystroem.n_components=9), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "MultinomialNB(SelectPercentile(data, SelectPercentile.percentile=2, SelectPercentile.score_func=f_classif), alpha=10.0, fit_prior=True)", "KNeighborsClassifier(Binarizer(Normalizer(data, Normalizer.norm='l1'), Binarizer.threshold=0.25), KNeighborsClassifier.n_neighbors=45, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='uniform')", "GradientBoostingClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='complete'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l1', FeatureAgglomeration.linkage='complete'), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l1', FeatureAgglomeration.linkage='complete'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=8, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "KNeighborsClassifier(RBFSampler(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RBFSampler.gamma=0.25), KNeighborsClassifier.n_neighbors=20, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='uniform')", "RandomForestClassifier(Normalizer(Nystroem(Binarizer(data, Binarizer.threshold=0.4), Nystroem.gamma=0.35000000000000003, Nystroem.kernel='polynomial', Nystroem.n_components=1), Normalizer.norm='l1'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=17, RandomForestClassifier.min_samples_split=14, RandomForestClassifier.n_estimators=100)", "BernoulliNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='ward'), alpha=0.1, fit_prior=False)", "BernoulliNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='complete'), alpha=0.001, fit_prior=True)", "RandomForestClassifier(FeatureAgglomeration(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='poly', Nystroem.n_components=10), FeatureAgglomeration.affinity='l1', FeatureAgglomeration.linkage='complete'), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=1.0, RandomForestClassifier.min_samples_leaf=14, RandomForestClassifier.min_samples_split=9, RandomForestClassifier.n_estimators=100)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.4, Nystroem.kernel='laplacian', Nystroem.n_components=4), alpha=0.1, fit_prior=False)", "RandomForestClassifier(Normalizer(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='polynomial', Nystroem.n_components=1), Normalizer.norm='l1'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=17, RandomForestClassifier.min_samples_split=14, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Nystroem(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), Nystroem.gamma=0.45, Nystroem.kernel='laplacian', Nystroem.n_components=1), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.5, RandomForestClassifier.min_samples_leaf=12, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(SelectPercentile(RBFSampler(data, RBFSampler.gamma=0.9), SelectPercentile.percentile=28, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.7500000000000001, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "DecisionTreeClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='average'), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=4, min_samples_leaf=7, min_samples_split=10)", "GradientBoostingClassifier(Normalizer(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l2', FeatureAgglomeration.linkage='complete'), Normalizer.norm='l1'), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)"], "dionis": ["BernoulliNB(StandardScaler(PCA(data, PCA.iterated_power=9, PCA.svd_solver='randomized')), alpha=100.0, fit_prior=False)", "BernoulliNB(StandardScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.45)), alpha=0.001, fit_prior=True)", "BernoulliNB(StandardScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.45)), alpha=0.001, fit_prior=False)", "BernoulliNB(StandardScaler(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized')), alpha=0.01, fit_prior=False)", "BernoulliNB(StandardScaler(PCA(data, PCA.iterated_power=9, PCA.svd_solver='randomized')), alpha=0.01, fit_prior=False)", "BernoulliNB(FastICA(data, FastICA.tol=0.2, FastICA.whiten='unit-variance'), alpha=10.0, fit_prior=False)", "ExtraTreesClassifier(MaxAbsScaler(data), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.05, min_samples_leaf=9, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.05, min_samples_leaf=9, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MaxAbsScaler(data), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.05, min_samples_leaf=9, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(data, alpha=100.0, fit_prior=False)", "BernoulliNB(StandardScaler(data), alpha=10.0, fit_prior=True)", "ExtraTreesClassifier(Binarizer(MinMaxScaler(data), Binarizer.threshold=0.9500000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=18, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "DecisionTreeClassifier(RobustScaler(SelectFwe(data, SelectFwe.alpha=0.005, SelectFwe.score_func=f_classif)), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=8, min_samples_leaf=4, min_samples_split=11)", "BernoulliNB(data, alpha=0.1, fit_prior=True)", "BernoulliNB(data, alpha=0.1, fit_prior=False)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=6, min_samples_leaf=6, min_samples_split=3)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=5, min_samples_leaf=4, min_samples_split=5)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=1, min_samples_leaf=7, min_samples_split=9)", "BernoulliNB(MaxAbsScaler(MinMaxScaler(data)), alpha=10.0, fit_prior=False)", "ExtraTreesClassifier(FeatureAgglomeration(RBFSampler(data, RBFSampler.gamma=0.0), FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='average'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=7, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(Binarizer(StandardScaler(data), Binarizer.threshold=0.5), alpha=10.0, fit_prior=False)", "BernoulliNB(PCA(data, PCA.iterated_power=9, PCA.svd_solver='randomized'), alpha=100.0, fit_prior=False)", "BernoulliNB(MaxAbsScaler(RobustScaler(data)), alpha=100.0, fit_prior=False)", "BernoulliNB(MaxAbsScaler(RobustScaler(RobustScaler(data))), alpha=100.0, fit_prior=False)", "BernoulliNB(MaxAbsScaler(RobustScaler(data)), alpha=100.0, fit_prior=True)", "BernoulliNB(MaxAbsScaler(RobustScaler(data)), alpha=0.1, fit_prior=True)", "BernoulliNB(data, alpha=100.0, fit_prior=False)", "BernoulliNB(data, alpha=100.0, fit_prior=True)", "BernoulliNB(data, alpha=10.0, fit_prior=True)", "BernoulliNB(data, alpha=1.0, fit_prior=False)", "BernoulliNB(StandardScaler(MaxAbsScaler(data)), alpha=0.001, fit_prior=False)", "BernoulliNB(StandardScaler(RobustScaler(data)), alpha=0.001, fit_prior=False)", "GaussianNB(SelectPercentile(data, SelectPercentile.percentile=52, SelectPercentile.score_func=f_classif))", "BernoulliNB(StandardScaler(PCA(data, PCA.iterated_power=10, PCA.svd_solver='randomized')), alpha=0.001, fit_prior=False)", "BernoulliNB(Normalizer(SelectPercentile(data, SelectPercentile.percentile=45, SelectPercentile.score_func=f_classif), Normalizer.norm='l1'), alpha=10.0, fit_prior=True)", "BernoulliNB(data, alpha=10.0, fit_prior=True)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=8, min_samples_leaf=13, min_samples_split=11)", "DecisionTreeClassifier(MinMaxScaler(data), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=7, min_samples_leaf=7, min_samples_split=8)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=6, min_samples_leaf=7, min_samples_split=8)", "DecisionTreeClassifier(RobustScaler(data), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=4, min_samples_leaf=18, min_samples_split=17)", "BernoulliNB(SelectFwe(FastICA(data, FastICA.tol=0.9500000000000001, FastICA.whiten='unit-variance'), SelectFwe.alpha=0.013000000000000001, SelectFwe.score_func=f_classif), alpha=1.0, fit_prior=False)", "BernoulliNB(SelectFwe(FastICA(data, FastICA.tol=0.9500000000000001, FastICA.whiten='unit-variance'), SelectFwe.alpha=0.041, SelectFwe.score_func=f_classif), alpha=1.0, fit_prior=False)", "GaussianNB(SelectPercentile(data, SelectPercentile.percentile=47, SelectPercentile.score_func=f_classif))", "GaussianNB(SelectPercentile(data, SelectPercentile.percentile=37, SelectPercentile.score_func=f_classif))", "GaussianNB(SelectPercentile(FastICA(data, FastICA.tol=0.65, FastICA.whiten='unit-variance'), SelectPercentile.percentile=37, SelectPercentile.score_func=f_classif))", "GaussianNB(SelectPercentile(data, SelectPercentile.percentile=29, SelectPercentile.score_func=f_classif))", "GaussianNB(SelectPercentile(FastICA(data, FastICA.tol=0.65, FastICA.whiten='unit-variance'), SelectPercentile.percentile=47, SelectPercentile.score_func=f_classif))", "GaussianNB(SelectPercentile(FastICA(Normalizer(data, Normalizer.norm='max'), FastICA.tol=0.65, FastICA.whiten='unit-variance'), SelectPercentile.percentile=47, SelectPercentile.score_func=f_classif))", "BernoulliNB(data, alpha=10.0, fit_prior=False)", "BernoulliNB(MaxAbsScaler(data), alpha=10.0, fit_prior=False)", "BernoulliNB(SelectFwe(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized'), SelectFwe.alpha=0.032, SelectFwe.score_func=f_classif), alpha=0.1, fit_prior=True)", "BernoulliNB(SelectFwe(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized'), SelectFwe.alpha=0.032, SelectFwe.score_func=f_classif), alpha=0.01, fit_prior=False)", "BernoulliNB(SelectFwe(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized'), SelectFwe.alpha=0.032, SelectFwe.score_func=f_classif), alpha=0.01, fit_prior=True)", "BernoulliNB(SelectFwe(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized'), SelectFwe.alpha=0.032, SelectFwe.score_func=f_classif), alpha=0.1, fit_prior=False)", "BernoulliNB(PCA(RobustScaler(data), PCA.iterated_power=8, PCA.svd_solver='randomized'), alpha=0.01, fit_prior=False)", "BernoulliNB(RobustScaler(data), alpha=0.01, fit_prior=False)", "GaussianNB(SelectPercentile(data, SelectPercentile.percentile=34, SelectPercentile.score_func=f_classif))", "BernoulliNB(SelectFwe(data, SelectFwe.alpha=0.041, SelectFwe.score_func=f_classif), alpha=0.01, fit_prior=False)", "GaussianNB(SelectPercentile(data, SelectPercentile.percentile=16, SelectPercentile.score_func=f_classif))", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.05, min_samples_leaf=17, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(FastICA(VarianceThreshold(data, VarianceThreshold.threshold=0.8500000000000001), FastICA.tol=0.65, FastICA.whiten='unit-variance'), alpha=100.0, fit_prior=True)", "BernoulliNB(FastICA(data, FastICA.tol=0.65, FastICA.whiten='unit-variance'), alpha=100.0, fit_prior=False)", "BernoulliNB(FastICA(VarianceThreshold(data, VarianceThreshold.threshold=0.45), FastICA.tol=0.65, FastICA.whiten='unit-variance'), alpha=100.0, fit_prior=True)", "BernoulliNB(FastICA(data, FastICA.tol=0.65, FastICA.whiten='unit-variance'), alpha=100.0, fit_prior=True)", "BernoulliNB(FastICA(data, FastICA.tol=0.65, FastICA.whiten='unit-variance'), alpha=10.0, fit_prior=True)", "BernoulliNB(FastICA(data, FastICA.tol=0.65, FastICA.whiten='unit-variance'), alpha=10.0, fit_prior=False)", "BernoulliNB(StandardScaler(Binarizer(MinMaxScaler(data), Binarizer.threshold=0.65)), alpha=1.0, fit_prior=True)", "BernoulliNB(Binarizer(MinMaxScaler(data), Binarizer.threshold=0.65), alpha=1.0, fit_prior=True)", "BernoulliNB(Binarizer(MinMaxScaler(data), Binarizer.threshold=0.65), alpha=0.1, fit_prior=True)", "BernoulliNB(StandardScaler(Binarizer(MinMaxScaler(data), Binarizer.threshold=0.65)), alpha=1.0, fit_prior=False)", "BernoulliNB(PCA(MinMaxScaler(data), PCA.iterated_power=2, PCA.svd_solver='randomized'), alpha=0.1, fit_prior=False)", "BernoulliNB(PCA(FastICA(data, FastICA.tol=0.7000000000000001, FastICA.whiten='unit-variance'), PCA.iterated_power=2, PCA.svd_solver='randomized'), alpha=0.1, fit_prior=False)", "BernoulliNB(data, alpha=100.0, fit_prior=False)", "DecisionTreeClassifier(SelectFwe(data, SelectFwe.alpha=0.001, SelectFwe.score_func=f_classif), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=6, min_samples_leaf=17, min_samples_split=20)", "DecisionTreeClassifier(SelectFwe(SelectFwe(data, SelectFwe.alpha=0.032, SelectFwe.score_func=f_classif), SelectFwe.alpha=0.001, SelectFwe.score_func=f_classif), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=6, min_samples_leaf=17, min_samples_split=20)", "BernoulliNB(data, alpha=10.0, fit_prior=False)", "BernoulliNB(data, alpha=0.01, fit_prior=False)", "DecisionTreeClassifier(RobustScaler(data), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=3, min_samples_leaf=12, min_samples_split=14)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=4, min_samples_leaf=2, min_samples_split=18)", "DecisionTreeClassifier(Nystroem(SelectPercentile(data, SelectPercentile.percentile=5, SelectPercentile.score_func=f_classif), Nystroem.gamma=0.15000000000000002, Nystroem.kernel='poly', Nystroem.n_components=9), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=7, min_samples_leaf=5, min_samples_split=4)"], "car": ["GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(Normalizer(data, Normalizer.norm='max'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(MinMaxScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "LogisticRegression(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(StandardScaler(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False)), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.55, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MinMaxScaler(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False)), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.55, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(Normalizer(data, Normalizer.norm='l2'), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.55, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.55, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(Normalizer(data, Normalizer.norm='max'), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.55, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Binarizer(data, Binarizer.threshold=0.15000000000000002), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.7500000000000001, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=13, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=8, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(StandardScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(StandardScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(Normalizer(data, Normalizer.norm='l2'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.9500000000000001, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.7500000000000001, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(Binarizer(data, Binarizer.threshold=0.55), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.9500000000000001, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.9500000000000001, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.9500000000000001, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.7500000000000001, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.9500000000000001, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.9500000000000001, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=8, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(MinMaxScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.9500000000000001, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=8, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=8, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=13, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(StandardScaler(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False)), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=13, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(Binarizer(data, Binarizer.threshold=0.9), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.7500000000000001, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(Binarizer(data, Binarizer.threshold=0.9), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=13, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.7500000000000001, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(SelectPercentile(data, SelectPercentile.percentile=97, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(Binarizer(data, Binarizer.threshold=0.4), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(Normalizer(data, Normalizer.norm='l2'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(Normalizer(data, Normalizer.norm='max'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=13, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(Normalizer(data, Normalizer.norm='l1'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(MinMaxScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(MinMaxScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(Binarizer(data, Binarizer.threshold=0.35000000000000003), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "LogisticRegression(PolynomialFeatures(StandardScaler(data), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PolynomialFeatures(StandardScaler(data), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GradientBoostingClassifier(Binarizer(data, Binarizer.threshold=0.35000000000000003), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "LogisticRegression(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Binarizer(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), Binarizer.threshold=0.05), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PolynomialFeatures(MinMaxScaler(data), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PolynomialFeatures(Normalizer(data, Normalizer.norm='max'), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PolynomialFeatures(Binarizer(data, Binarizer.threshold=0.25), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PolynomialFeatures(MaxAbsScaler(data), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MaxAbsScaler(PolynomialFeatures(Normalizer(data, Normalizer.norm='l1'), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False)), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GradientBoostingClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.15000000000000002), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.55)", "RandomForestClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=6, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='l2'), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Binarizer(data, Binarizer.threshold=0.8500000000000001), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Binarizer(data, Binarizer.threshold=0.75), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.6000000000000001, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.6000000000000001, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=1.0, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.05), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.6000000000000001, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='l1'), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)"], "volkert": ["ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=8, min_samples_split=20, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RobustScaler(data), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=7, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=7, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=7, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MaxAbsScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.05, min_samples_leaf=9, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MaxAbsScaler(MinMaxScaler(data)), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.05, min_samples_leaf=9, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MaxAbsScaler(data), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.05, min_samples_leaf=9, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MaxAbsScaler(data), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.05, min_samples_leaf=9, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(StandardScaler(data), LogisticRegression.C=0.001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(RobustScaler(data), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.15000000000000002, min_samples_leaf=10, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.15000000000000002, min_samples_leaf=10, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectFwe(RobustScaler(data), SelectFwe.alpha=0.037, SelectFwe.score_func=f_classif), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.15000000000000002, min_samples_leaf=10, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.15000000000000002, min_samples_leaf=10, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=14, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=14, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Normalizer(data, Normalizer.norm='l2'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=14, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(MaxAbsScaler(data), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MaxAbsScaler(data), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.15000000000000002, min_samples_leaf=10, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=11, min_samples_split=19, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(StandardScaler(data), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PCA(StandardScaler(data), PCA.iterated_power=3, PCA.svd_solver='randomized'), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(SelectPercentile(data, SelectPercentile.percentile=52, SelectPercentile.score_func=f_classif)), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='cosine', Nystroem.n_components=7), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.5, RandomForestClassifier.min_samples_leaf=12, RandomForestClassifier.min_samples_split=10, RandomForestClassifier.n_estimators=100)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=6, min_samples_leaf=17, min_samples_split=9)", "DecisionTreeClassifier(SelectFwe(SelectFwe(data, SelectFwe.alpha=0.032, SelectFwe.score_func=f_classif), SelectFwe.alpha=0.001, SelectFwe.score_func=f_classif), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=6, min_samples_leaf=17, min_samples_split=20)", "DecisionTreeClassifier(SelectFwe(MinMaxScaler(data), SelectFwe.alpha=0.001, SelectFwe.score_func=f_classif), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=6, min_samples_leaf=17, min_samples_split=20)", "ExtraTreesClassifier(Binarizer(data, Binarizer.threshold=0.30000000000000004), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=11, min_samples_split=19, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Binarizer(data, Binarizer.threshold=0.30000000000000004), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=20, min_samples_split=19, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=10, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=10, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MaxAbsScaler(data), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=10, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=10, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(StandardScaler(data), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=10, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RobustScaler(data), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=10, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(StandardScaler(data), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=10, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=19, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Normalizer(RobustScaler(data), Normalizer.norm='l2'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=10, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(MinMaxScaler(Normalizer(data, Normalizer.norm='l2')), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(data), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PCA(MinMaxScaler(data), PCA.iterated_power=3, PCA.svd_solver='randomized'), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(RBFSampler(MaxAbsScaler(MaxAbsScaler(data)), RBFSampler.gamma=0.2)), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(RBFSampler(MaxAbsScaler(data), RBFSampler.gamma=0.2)), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MinMaxScaler(data), LogisticRegression.C=0.1, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PCA(data, PCA.iterated_power=3, PCA.svd_solver='randomized'), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(RBFSampler(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized'), RBFSampler.gamma=0.2)), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(RBFSampler(data, RBFSampler.gamma=0.2)), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Normalizer(RBFSampler(data, RBFSampler.gamma=0.2), Normalizer.norm='max'), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Normalizer(RBFSampler(data, RBFSampler.gamma=0.2), Normalizer.norm='max'), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(Normalizer(data, Normalizer.norm='l2'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=4, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=9, min_samples_split=20, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectFwe(data, SelectFwe.alpha=0.041, SelectFwe.score_func=f_classif), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=9, min_samples_split=20, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=12, min_samples_split=20, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(StandardScaler(data), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(VarianceThreshold(StandardScaler(data), VarianceThreshold.threshold=0.7500000000000001), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(data), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(data), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=20, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RobustScaler(data), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=20, min_samples_split=19, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=9, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=9, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RobustScaler(data), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=9, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=17, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=18, min_samples_split=18, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(StandardScaler(data), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.05, min_samples_leaf=4, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.05), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=9, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(StandardScaler(data), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MinMaxScaler(data), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MinMaxScaler(data), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(Normalizer(data, Normalizer.norm='l1'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=10, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=16, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=16, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Normalizer(MinMaxScaler(data), Normalizer.norm='l1'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=16, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Normalizer(data, Normalizer.norm='l1'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=16, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.15000000000000002, min_samples_leaf=12, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.15000000000000002, min_samples_leaf=12, min_samples_split=18, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=20, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectFwe(data, SelectFwe.alpha=0.029, SelectFwe.score_func=f_classif), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.15000000000000002, min_samples_leaf=10, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.15000000000000002, min_samples_leaf=12, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(StandardScaler(RobustScaler(data)), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.05, RandomForestClassifier.min_samples_leaf=13, RandomForestClassifier.min_samples_split=15, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(StandardScaler(SelectFwe(RobustScaler(data), SelectFwe.alpha=0.038, SelectFwe.score_func=f_classif)), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.05, RandomForestClassifier.min_samples_leaf=13, RandomForestClassifier.min_samples_split=15, RandomForestClassifier.n_estimators=100)", "LogisticRegression(Normalizer(MinMaxScaler(data), Normalizer.norm='max'), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MinMaxScaler(data), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MinMaxScaler(data), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MinMaxScaler(MaxAbsScaler(data)), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MinMaxScaler(MinMaxScaler(data)), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MinMaxScaler(MaxAbsScaler(data)), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MinMaxScaler(SelectPercentile(data, SelectPercentile.percentile=78, SelectPercentile.score_func=f_classif)), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MaxAbsScaler(data), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')"], "KDDCup09_appetency": ["GradientBoostingClassifier(RBFSampler(Normalizer(data, Normalizer.norm='l1'), RBFSampler.gamma=0.35000000000000003), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.3)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=10, min_samples_leaf=14, min_samples_split=8)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.55), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=6, min_samples_leaf=8, min_samples_split=19)", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='laplacian', Nystroem.n_components=5), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=3, min_samples_leaf=13, min_samples_split=10)", "RandomForestClassifier(Binarizer(Normalizer(data, Normalizer.norm='l2'), Binarizer.threshold=1.0), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=6, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.0), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=4, min_samples_leaf=1, min_samples_split=10)", "BernoulliNB(Binarizer(MaxAbsScaler(data), Binarizer.threshold=1.0), alpha=100.0, fit_prior=False)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=3, min_samples_leaf=13, min_samples_split=10)", "BernoulliNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='manhattan', FeatureAgglomeration.linkage='complete'), alpha=10.0, fit_prior=False)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=10, min_samples_leaf=14, min_samples_split=8)", "BernoulliNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='average'), alpha=0.01, fit_prior=False)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.5, Nystroem.kernel='sigmoid', Nystroem.n_components=7), alpha=100.0, fit_prior=True)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.75, Nystroem.kernel='cosine', Nystroem.n_components=1), alpha=100.0, fit_prior=False)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='rbf', Nystroem.n_components=7), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "DecisionTreeClassifier(MaxAbsScaler(Nystroem(data, Nystroem.gamma=0.45, Nystroem.kernel='laplacian', Nystroem.n_components=9)), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=7, min_samples_leaf=1, min_samples_split=4)", "GradientBoostingClassifier(PCA(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='rbf', Nystroem.n_components=7), PCA.iterated_power=4, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "GradientBoostingClassifier(RBFSampler(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='rbf', Nystroem.n_components=7), RBFSampler.gamma=0.7000000000000001), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "GradientBoostingClassifier(SelectPercentile(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), SelectPercentile.percentile=37, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=8, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.5)", "GaussianNB(RBFSampler(RBFSampler(data, RBFSampler.gamma=0.45), RBFSampler.gamma=0.2))", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.45), alpha=100.0, fit_prior=True)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), alpha=10.0, fit_prior=False)", "LogisticRegression(RBFSampler(PCA(data, PCA.iterated_power=3, PCA.svd_solver='randomized'), RBFSampler.gamma=0.6000000000000001), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GradientBoostingClassifier(MaxAbsScaler(RBFSampler(data, RBFSampler.gamma=0.8500000000000001)), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "GradientBoostingClassifier(StandardScaler(data), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.2))", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.45))", "LogisticRegression(MaxAbsScaler(RBFSampler(data, RBFSampler.gamma=0.2)), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "BernoulliNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l1', FeatureAgglomeration.linkage='average'), alpha=0.01, fit_prior=True)", "LogisticRegression(MinMaxScaler(Binarizer(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='ward'), Binarizer.threshold=0.8)), LogisticRegression.C=0.001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l1', FeatureAgglomeration.linkage='complete'), LogisticRegression.C=0.001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=6, min_samples_leaf=6, min_samples_split=3)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.45), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=8, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "GradientBoostingClassifier(Nystroem(RobustScaler(data), Nystroem.gamma=0.8500000000000001, Nystroem.kernel='cosine', Nystroem.n_components=9), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.05)", "BernoulliNB(FeatureAgglomeration(StandardScaler(data), FeatureAgglomeration.affinity='l2', FeatureAgglomeration.linkage='average'), alpha=10.0, fit_prior=False)", "GaussianNB(RobustScaler(RBFSampler(data, RBFSampler.gamma=0.05)))", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=1, min_samples_leaf=4, min_samples_split=2)", "DecisionTreeClassifier(FeatureAgglomeration(RBFSampler(data, RBFSampler.gamma=0.0), FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='average'), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=2, min_samples_leaf=6, min_samples_split=7)", "ExtraTreesClassifier(FeatureAgglomeration(RBFSampler(data, RBFSampler.gamma=0.0), FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='average'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=7, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.45, Nystroem.kernel='laplacian', Nystroem.n_components=7), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.05)", "ExtraTreesClassifier(StandardScaler(RBFSampler(SelectPercentile(data, SelectPercentile.percentile=35, SelectPercentile.score_func=f_classif), RBFSampler.gamma=0.9)), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=10, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.05), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.05), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.15000000000000002, min_samples_leaf=13, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.05))", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.4, Nystroem.kernel='rbf', Nystroem.n_components=5), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.0), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=11, min_samples_split=13, ExtraTreesClassifier.n_estimators=100)", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='laplacian', Nystroem.n_components=1), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=8, min_samples_leaf=13, min_samples_split=11)", "ExtraTreesClassifier(Nystroem(SelectFwe(data, SelectFwe.alpha=0.009000000000000001, SelectFwe.score_func=f_classif), Nystroem.gamma=0.4, Nystroem.kernel='rbf', Nystroem.n_components=7), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=11, min_samples_split=13, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(MinMaxScaler(data), RBFSampler.gamma=0.0), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=17, RandomForestClassifier.min_samples_split=18, RandomForestClassifier.n_estimators=100)", "GaussianNB(Binarizer(data, Binarizer.threshold=0.7000000000000001))", "GradientBoostingClassifier(RBFSampler(RobustScaler(data), RBFSampler.gamma=0.75), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.2)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "MultinomialNB(FeatureAgglomeration(Binarizer(data, Binarizer.threshold=0.8500000000000001), FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='ward'), alpha=1.0, fit_prior=True)", "GaussianNB(FastICA(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), FastICA.tol=0.5, FastICA.whiten='unit-variance'))", "BernoulliNB(PCA(RBFSampler(data, RBFSampler.gamma=0.2), PCA.iterated_power=5, PCA.svd_solver='randomized'), alpha=0.001, fit_prior=True)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.55), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=12, GradientBoostingClassifier.min_samples_split=13, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "MultinomialNB(Nystroem(VarianceThreshold(data, VarianceThreshold.threshold=0.45), Nystroem.gamma=0.30000000000000004, Nystroem.kernel='rbf', Nystroem.n_components=3), alpha=100.0, fit_prior=True)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.8, Nystroem.kernel='laplacian', Nystroem.n_components=4), alpha=10.0, fit_prior=False)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.5), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=4, min_samples_leaf=2, min_samples_split=18)", "LogisticRegression(Nystroem(StandardScaler(data), Nystroem.gamma=0.55, Nystroem.kernel='laplacian', Nystroem.n_components=3), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GradientBoostingClassifier(MinMaxScaler(SelectPercentile(data, SelectPercentile.percentile=6, SelectPercentile.score_func=f_classif)), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7000000000000001)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.9), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=2, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='manhattan', FeatureAgglomeration.linkage='average'), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(MinMaxScaler(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='poly', Nystroem.n_components=4)), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), alpha=0.01, fit_prior=True)", "GradientBoostingClassifier(Nystroem(SelectPercentile(data, SelectPercentile.percentile=99, SelectPercentile.score_func=f_classif), Nystroem.gamma=1.0, Nystroem.kernel='sigmoid', Nystroem.n_components=10), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "DecisionTreeClassifier(PCA(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='rbf', Nystroem.n_components=1), PCA.iterated_power=9, PCA.svd_solver='randomized'), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=8, min_samples_leaf=10, min_samples_split=4)", "GaussianNB(Nystroem(data, Nystroem.gamma=0.65, Nystroem.kernel='rbf', Nystroem.n_components=6))", "GaussianNB(Nystroem(SelectFwe(data, SelectFwe.alpha=0.022, SelectFwe.score_func=f_classif), Nystroem.gamma=0.65, Nystroem.kernel='rbf', Nystroem.n_components=6))", "MultinomialNB(Nystroem(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), Nystroem.gamma=0.8500000000000001, Nystroem.kernel='rbf', Nystroem.n_components=1), alpha=0.01, fit_prior=True)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.55), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=18, min_samples_split=18, ExtraTreesClassifier.n_estimators=100)", "GaussianNB(StandardScaler(RBFSampler(data, RBFSampler.gamma=0.6000000000000001)))", "ExtraTreesClassifier(PCA(RBFSampler(data, RBFSampler.gamma=0.45), PCA.iterated_power=9, PCA.svd_solver='randomized'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.05, min_samples_leaf=17, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.2), alpha=0.001, fit_prior=True)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.15000000000000002)", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.6000000000000001))", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), alpha=0.01, fit_prior=True)", "BernoulliNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l1', FeatureAgglomeration.linkage='average'), alpha=0.1, fit_prior=True)", "DecisionTreeClassifier(Nystroem(FastICA(data, FastICA.tol=0.45, FastICA.whiten='unit-variance'), Nystroem.gamma=0.0, Nystroem.kernel='poly', Nystroem.n_components=7), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=9, min_samples_leaf=5, min_samples_split=7)", "DecisionTreeClassifier(Nystroem(VarianceThreshold(FastICA(data, FastICA.tol=0.45, FastICA.whiten='unit-variance'), VarianceThreshold.threshold=0.5), Nystroem.gamma=0.0, Nystroem.kernel='poly', Nystroem.n_components=7), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=9, min_samples_leaf=5, min_samples_split=7)", "LogisticRegression(FeatureAgglomeration(data, FeatureAgglomeration.affinity='manhattan', FeatureAgglomeration.linkage='average'), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.1), alpha=0.001, fit_prior=False)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=7, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "GaussianNB(StandardScaler(data))", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.5), alpha=0.1, fit_prior=False)", "LogisticRegression(RobustScaler(data), LogisticRegression.C=0.0001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(data), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GaussianNB(MaxAbsScaler(data))", "GaussianNB(MinMaxScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.15000000000000002)))", "RandomForestClassifier(FeatureAgglomeration(RobustScaler(data), FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='complete'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7000000000000001, RandomForestClassifier.min_samples_leaf=6, RandomForestClassifier.min_samples_split=15, RandomForestClassifier.n_estimators=100)"], "Australian": ["GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.9), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.3)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.4), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.3)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.35000000000000003)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.3)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.2), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.3)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=8, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.25), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.5)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.25), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.65), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.3)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=12, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.4), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=13, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.8), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.2), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.4), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.2), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.1), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.25), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.9), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.1), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=12, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.75), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.8), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.8500000000000001, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.4), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.9), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.25), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=14, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=16, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.75), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=14, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=20, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=20, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.75), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=16, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=12, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.75), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=15, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=20, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.2), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=20, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.65), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.35000000000000003)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.3)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.25), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.65), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.65), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.5), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.55), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.55), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.3)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.2), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.9), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=19, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.05), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.35000000000000003)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.2), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=12, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.6000000000000001, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.35000000000000003)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.5), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.55, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.6000000000000001, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=19, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.9), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.7500000000000001, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.4), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.7500000000000001, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.4), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.45), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.45), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.9), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.7500000000000001, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.55)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.2), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.1), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.55), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.2), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.65), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.6000000000000001, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.55), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.6000000000000001, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.6000000000000001, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.25), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.35000000000000003)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.05), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.15000000000000002)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.6000000000000001, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.65), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.6000000000000001, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.3)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.75), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.15000000000000002)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.3)"], "connect-4": ["GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(SelectFwe(data, SelectFwe.alpha=0.027, SelectFwe.score_func=f_classif), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(SelectPercentile(Normalizer(data, Normalizer.norm='max'), SelectPercentile.percentile=93, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(StandardScaler(data), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(SelectPercentile(data, SelectPercentile.percentile=55, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=8, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.45)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=8, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.45)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=8, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.45)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=8, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.45)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=8, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.45)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.45)", "GradientBoostingClassifier(RobustScaler(data), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.45)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=8, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.45)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.45)", "GradientBoostingClassifier(RobustScaler(Normalizer(data, Normalizer.norm='max')), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.45)", "GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(MinMaxScaler(data), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(RobustScaler(data), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(MaxAbsScaler(MaxAbsScaler(data)), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(SelectFwe(MinMaxScaler(data), SelectFwe.alpha=0.012, SelectFwe.score_func=f_classif), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(MinMaxScaler(data), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(MinMaxScaler(data), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=5, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=5, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectFwe(data, SelectFwe.alpha=0.022, SelectFwe.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=5, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectFwe(data, SelectFwe.alpha=0.011, SelectFwe.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=5, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=5, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MaxAbsScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=10, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=10, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(StandardScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=10, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=10, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.5)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=11, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RobustScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=13, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=15, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=15, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='l1'), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=19, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RobustScaler(data), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=13, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=9, RandomForestClassifier.min_samples_split=11, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RobustScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=9, RandomForestClassifier.min_samples_split=11, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(StandardScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=9, RandomForestClassifier.min_samples_split=11, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "GradientBoostingClassifier(SelectPercentile(data, SelectPercentile.percentile=88, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "GradientBoostingClassifier(Binarizer(SelectPercentile(data, SelectPercentile.percentile=88, SelectPercentile.score_func=f_classif), Binarizer.threshold=0.30000000000000004), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "GradientBoostingClassifier(Binarizer(SelectPercentile(data, SelectPercentile.percentile=44, SelectPercentile.score_func=f_classif), Binarizer.threshold=0.30000000000000004), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "ExtraTreesClassifier(SelectPercentile(data, SelectPercentile.percentile=44, SelectPercentile.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=10, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(VarianceThreshold(SelectPercentile(data, SelectPercentile.percentile=66, SelectPercentile.score_func=f_classif), VarianceThreshold.threshold=0.1), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=8, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(VarianceThreshold(SelectPercentile(data, SelectPercentile.percentile=88, SelectPercentile.score_func=f_classif), VarianceThreshold.threshold=0.1), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "RandomForestClassifier(SelectPercentile(data, SelectPercentile.percentile=22, SelectPercentile.score_func=f_classif), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=6, RandomForestClassifier.min_samples_split=10, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(MaxAbsScaler(data), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=2, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MaxAbsScaler(data), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=2, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=2, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=9, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=9, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=9, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=9, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=15, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=13, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=17, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(RobustScaler(data), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.2)", "GradientBoostingClassifier(SelectFwe(RobustScaler(data), SelectFwe.alpha=0.019, SelectFwe.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.2)", "GradientBoostingClassifier(RobustScaler(data), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.2)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=6, min_samples_split=19, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=8, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(StandardScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=11, RandomForestClassifier.min_samples_split=9, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(StandardScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=11, RandomForestClassifier.min_samples_split=9, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=6, min_samples_split=19, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=11, min_samples_split=19, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=11, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=7, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=7, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=7, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=13, RandomForestClassifier.min_samples_split=15, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(StandardScaler(data), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=11, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=11, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='max'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=11, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=19, RandomForestClassifier.min_samples_split=20, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=13, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MinMaxScaler(data), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=13, RandomForestClassifier.min_samples_split=15, RandomForestClassifier.n_estimators=100)"], "segment": ["GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(SelectPercentile(data, SelectPercentile.percentile=73, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(StandardScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=2, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=2, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=2, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=2, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectPercentile(data, SelectPercentile.percentile=66, SelectPercentile.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=2, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=2, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=2, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectPercentile(data, SelectPercentile.percentile=90, SelectPercentile.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=2, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectPercentile(data, SelectPercentile.percentile=67, SelectPercentile.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=2, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectPercentile(data, SelectPercentile.percentile=81, SelectPercentile.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=2, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=12, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7000000000000001)", "GradientBoostingClassifier(RobustScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=12, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(SelectFwe(data, SelectFwe.alpha=0.027, SelectFwe.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(StandardScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=12, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=12, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=6, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(data, SelectFwe.alpha=0.015, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.7500000000000001), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(VarianceThreshold(data, VarianceThreshold.threshold=1.0), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MaxAbsScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MinMaxScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=12, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(StandardScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.55)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7000000000000001)", "GradientBoostingClassifier(MinMaxScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(RobustScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.9500000000000001, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(RobustScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(RobustScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7000000000000001)", "GradientBoostingClassifier(SelectFwe(data, SelectFwe.alpha=0.048, SelectFwe.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MinMaxScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.5), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=5, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.7000000000000001), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MaxAbsScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.7500000000000001), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(SelectFwe(data, SelectFwe.alpha=0.04, SelectFwe.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(SelectFwe(MinMaxScaler(data), SelectFwe.alpha=0.043000000000000003, SelectFwe.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(MinMaxScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)"], "okcupid-stem": ["GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.55)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(SelectFwe(data, SelectFwe.alpha=0.046, SelectFwe.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(SelectFwe(SelectFwe(data, SelectFwe.alpha=0.028, SelectFwe.score_func=f_classif), SelectFwe.alpha=0.027, SelectFwe.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(SelectFwe(SelectFwe(data, SelectFwe.alpha=0.028, SelectFwe.score_func=f_classif), SelectFwe.alpha=0.001, SelectFwe.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(SelectFwe(SelectFwe(data, SelectFwe.alpha=0.028, SelectFwe.score_func=f_classif), SelectFwe.alpha=0.001, SelectFwe.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.8500000000000001, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.55)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.8500000000000001, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.8500000000000001, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(RobustScaler(SelectPercentile(data, SelectPercentile.percentile=83, SelectPercentile.score_func=f_classif)), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.7500000000000001, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.3)", "GradientBoostingClassifier(SelectPercentile(SelectPercentile(data, SelectPercentile.percentile=83, SelectPercentile.score_func=f_classif), SelectPercentile.percentile=80, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.7500000000000001, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.3)", "GradientBoostingClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.05), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(RobustScaler(SelectPercentile(data, SelectPercentile.percentile=60, SelectPercentile.score_func=f_classif)), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.7500000000000001, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.3)", "GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(MaxAbsScaler(MaxAbsScaler(data)), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.8500000000000001, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(MinMaxScaler(StandardScaler(data)), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.8500000000000001, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=12, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(MinMaxScaler(data), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(StandardScaler(StandardScaler(data)), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(RobustScaler(data), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(StandardScaler(data), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=11, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.3)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.6000000000000001, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.3)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.3)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.3)", "GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.3)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.3)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.3)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.3)", "GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.3)", "ExtraTreesClassifier(MinMaxScaler(data), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=7, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(StandardScaler(data), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=12, RandomForestClassifier.min_samples_split=20, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=13, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(StandardScaler(data), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=11, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=12, RandomForestClassifier.min_samples_split=20, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(MaxAbsScaler(MinMaxScaler(data)), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=7, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=13, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MinMaxScaler(data), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=12, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(StandardScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=20, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MaxAbsScaler(data), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=7, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(RobustScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=11, RandomForestClassifier.min_samples_split=19, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(StandardScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=11, RandomForestClassifier.min_samples_split=19, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RobustScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=11, RandomForestClassifier.min_samples_split=19, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=11, RandomForestClassifier.min_samples_split=19, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MinMaxScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=11, RandomForestClassifier.min_samples_split=5, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=8, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.55)", "RandomForestClassifier(MinMaxScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=11, RandomForestClassifier.min_samples_split=19, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=11, RandomForestClassifier.min_samples_split=13, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=13, RandomForestClassifier.min_samples_split=19, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=11, RandomForestClassifier.min_samples_split=5, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=20, RandomForestClassifier.min_samples_split=18, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RobustScaler(data), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=20, RandomForestClassifier.min_samples_split=18, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=20, RandomForestClassifier.min_samples_split=18, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=20, RandomForestClassifier.min_samples_split=5, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.6000000000000001, RandomForestClassifier.min_samples_leaf=15, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=20, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=20, RandomForestClassifier.min_samples_split=18, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=12, RandomForestClassifier.min_samples_split=18, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=7, RandomForestClassifier.min_samples_split=18, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=20, RandomForestClassifier.min_samples_split=18, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.9500000000000001, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(RobustScaler(data), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.9500000000000001, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.9500000000000001, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "GradientBoostingClassifier(RobustScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.9500000000000001, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.9500000000000001, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=13, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "GradientBoostingClassifier(RobustScaler(MinMaxScaler(data)), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.9500000000000001, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(MinMaxScaler(SelectPercentile(data, SelectPercentile.percentile=78, SelectPercentile.score_func=f_classif)), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(SelectPercentile(data, SelectPercentile.percentile=78, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)"], "numerai28_6": ["KNeighborsClassifier(FeatureAgglomeration(FastICA(data, FastICA.tol=0.2, FastICA.whiten='unit-variance'), FeatureAgglomeration.affinity='l1', FeatureAgglomeration.linkage='complete'), KNeighborsClassifier.n_neighbors=11, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='distance')", "ExtraTreesClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='manhattan', FeatureAgglomeration.linkage='average'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(MinMaxScaler(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized')), alpha=0.01, fit_prior=False)", "BernoulliNB(SelectFwe(data, SelectFwe.alpha=0.023, SelectFwe.score_func=f_classif), alpha=0.01, fit_prior=False)", "BernoulliNB(SelectPercentile(data, SelectPercentile.percentile=87, SelectPercentile.score_func=f_classif), alpha=10.0, fit_prior=False)", "BernoulliNB(SelectPercentile(data, SelectPercentile.percentile=87, SelectPercentile.score_func=f_classif), alpha=0.1, fit_prior=True)", "BernoulliNB(SelectFwe(data, SelectFwe.alpha=0.002, SelectFwe.score_func=f_classif), alpha=10.0, fit_prior=False)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.0), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.55)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.0), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.2)", "BernoulliNB(MaxAbsScaler(data), alpha=10.0, fit_prior=True)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='additive_chi2', Nystroem.n_components=1), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=15, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), alpha=0.1, fit_prior=False)", "BernoulliNB(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), alpha=0.1, fit_prior=True)", "RandomForestClassifier(MinMaxScaler(Binarizer(data, Binarizer.threshold=1.0)), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.9000000000000001, RandomForestClassifier.min_samples_leaf=11, RandomForestClassifier.min_samples_split=15, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='polynomial', Nystroem.n_components=1), Normalizer.norm='l1'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=17, RandomForestClassifier.min_samples_split=14, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l2', FeatureAgglomeration.linkage='average'), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.05, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "BernoulliNB(data, alpha=0.001, fit_prior=True)", "BernoulliNB(Normalizer(data, Normalizer.norm='max'), alpha=0.001, fit_prior=True)", "BernoulliNB(MaxAbsScaler(data), alpha=0.1, fit_prior=False)", "BernoulliNB(data, alpha=0.1, fit_prior=False)", "ExtraTreesClassifier(RBFSampler(FastICA(data, FastICA.tol=0.9, FastICA.whiten='unit-variance'), RBFSampler.gamma=0.30000000000000004), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=17, min_samples_split=18, ExtraTreesClassifier.n_estimators=100)", "MultinomialNB(SelectPercentile(data, SelectPercentile.percentile=2, SelectPercentile.score_func=f_classif), alpha=100.0, fit_prior=False)", "LogisticRegression(Binarizer(data, Binarizer.threshold=1.0), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Binarizer(data, Binarizer.threshold=1.0), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "KNeighborsClassifier(Binarizer(Normalizer(data, Normalizer.norm='l1'), Binarizer.threshold=0.25), KNeighborsClassifier.n_neighbors=45, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='uniform')", "BernoulliNB(data, alpha=1.0, fit_prior=False)", "BernoulliNB(data, alpha=10.0, fit_prior=True)", "BernoulliNB(data, alpha=1.0, fit_prior=True)", "BernoulliNB(Normalizer(data, Normalizer.norm='max'), alpha=0.1, fit_prior=True)", "BernoulliNB(data, alpha=100.0, fit_prior=False)", "KNeighborsClassifier(Binarizer(data, Binarizer.threshold=0.1), KNeighborsClassifier.n_neighbors=47, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='uniform')", "KNeighborsClassifier(MaxAbsScaler(Binarizer(data, Binarizer.threshold=0.1)), KNeighborsClassifier.n_neighbors=45, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='distance')", "LogisticRegression(RBFSampler(FastICA(data, FastICA.tol=0.1, FastICA.whiten='unit-variance'), RBFSampler.gamma=0.8500000000000001), LogisticRegression.C=0.1, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "RandomForestClassifier(StandardScaler(Binarizer(data, Binarizer.threshold=1.0)), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=5, RandomForestClassifier.min_samples_split=12, RandomForestClassifier.n_estimators=100)", "BernoulliNB(MinMaxScaler(data), alpha=1.0, fit_prior=True)", "BernoulliNB(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), alpha=100.0, fit_prior=False)", "BernoulliNB(data, alpha=100.0, fit_prior=False)", "BernoulliNB(Normalizer(data, Normalizer.norm='l1'), alpha=0.01, fit_prior=False)", "BernoulliNB(data, alpha=0.001, fit_prior=False)", "BernoulliNB(MinMaxScaler(SelectPercentile(data, SelectPercentile.percentile=24, SelectPercentile.score_func=f_classif)), alpha=0.001, fit_prior=True)", "BernoulliNB(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), alpha=1.0, fit_prior=True)", "ExtraTreesClassifier(Binarizer(Normalizer(data, Normalizer.norm='l1'), Binarizer.threshold=0.9500000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=11, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(FeatureAgglomeration(MinMaxScaler(data), FeatureAgglomeration.affinity='l1', FeatureAgglomeration.linkage='average'), alpha=0.01, fit_prior=True)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.0), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=4, min_samples_leaf=3, min_samples_split=19)", "BernoulliNB(data, alpha=1.0, fit_prior=True)", "BernoulliNB(MaxAbsScaler(data), alpha=0.01, fit_prior=True)", "BernoulliNB(Normalizer(data, Normalizer.norm='l2'), alpha=10.0, fit_prior=True)", "BernoulliNB(MinMaxScaler(data), alpha=1.0, fit_prior=False)", "KNeighborsClassifier(SelectPercentile(StandardScaler(data), SelectPercentile.percentile=12, SelectPercentile.score_func=f_classif), KNeighborsClassifier.n_neighbors=26, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='distance')", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.2)", "KNeighborsClassifier(Binarizer(data, Binarizer.threshold=0.15000000000000002), KNeighborsClassifier.n_neighbors=48, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='uniform')", "LogisticRegression(Normalizer(RBFSampler(data, RBFSampler.gamma=0.0), Normalizer.norm='max'), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "MultinomialNB(Nystroem(data, Nystroem.gamma=0.65, Nystroem.kernel='linear', Nystroem.n_components=1), alpha=10.0, fit_prior=False)", "MultinomialNB(SelectFwe(SelectPercentile(data, SelectPercentile.percentile=1, SelectPercentile.score_func=f_classif), SelectFwe.alpha=0.039, SelectFwe.score_func=f_classif), alpha=1.0, fit_prior=False)", "BernoulliNB(data, alpha=0.001, fit_prior=True)", "BernoulliNB(data, alpha=0.001, fit_prior=False)", "BernoulliNB(data, alpha=0.01, fit_prior=True)", "BernoulliNB(data, alpha=100.0, fit_prior=True)", "BernoulliNB(data, alpha=0.01, fit_prior=False)", "BernoulliNB(data, alpha=10.0, fit_prior=True)", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.0), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "BernoulliNB(MinMaxScaler(data), alpha=1.0, fit_prior=True)", "BernoulliNB(MinMaxScaler(RobustScaler(data)), alpha=1.0, fit_prior=True)", "LogisticRegression(Binarizer(data, Binarizer.threshold=0.0), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GaussianNB(Binarizer(FeatureAgglomeration(data, FeatureAgglomeration.affinity='manhattan', FeatureAgglomeration.linkage='average'), Binarizer.threshold=0.9500000000000001))", "GaussianNB(Binarizer(Normalizer(data, Normalizer.norm='l1'), Binarizer.threshold=0.25))", "BernoulliNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='ward'), alpha=0.001, fit_prior=False)", "BernoulliNB(FeatureAgglomeration(MinMaxScaler(data), FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='ward'), alpha=0.001, fit_prior=False)", "BernoulliNB(data, alpha=100.0, fit_prior=False)", "BernoulliNB(data, alpha=0.01, fit_prior=False)", "BernoulliNB(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), alpha=0.01, fit_prior=False)", "GaussianNB(Normalizer(Binarizer(data, Binarizer.threshold=0.0), Normalizer.norm='l1'))", "BernoulliNB(SelectFwe(data, SelectFwe.alpha=0.04, SelectFwe.score_func=f_classif), alpha=0.01, fit_prior=False)", "BernoulliNB(SelectPercentile(data, SelectPercentile.percentile=82, SelectPercentile.score_func=f_classif), alpha=100.0, fit_prior=True)", "GradientBoostingClassifier(Nystroem(FastICA(data, FastICA.tol=0.45, FastICA.whiten='unit-variance'), Nystroem.gamma=0.0, Nystroem.kernel='sigmoid', Nystroem.n_components=9), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.5)", "GaussianNB(RBFSampler(Binarizer(data, Binarizer.threshold=0.05), RBFSampler.gamma=0.0))", "BernoulliNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='manhattan', FeatureAgglomeration.linkage='average'), alpha=0.01, fit_prior=False)", "BernoulliNB(FeatureAgglomeration(RBFSampler(data, RBFSampler.gamma=0.2), FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='average'), alpha=10.0, fit_prior=True)", "BernoulliNB(Normalizer(MinMaxScaler(data), Normalizer.norm='max'), alpha=10.0, fit_prior=False)", "BernoulliNB(MinMaxScaler(data), alpha=0.01, fit_prior=True)", "KNeighborsClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='average'), KNeighborsClassifier.n_neighbors=46, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='uniform')", "LogisticRegression(Binarizer(MaxAbsScaler(data), Binarizer.threshold=0.0), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "BernoulliNB(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), alpha=1.0, fit_prior=True)", "BernoulliNB(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), alpha=0.001, fit_prior=True)", "BernoulliNB(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), alpha=0.001, fit_prior=False)", "BernoulliNB(SelectFwe(data, SelectFwe.alpha=0.041, SelectFwe.score_func=f_classif), alpha=0.1, fit_prior=True)", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.0), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Normalizer(Nystroem(data, Nystroem.gamma=0.45, Nystroem.kernel='linear', Nystroem.n_components=1), Normalizer.norm='l2'), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Binarizer(data, Binarizer.threshold=1.0), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "BernoulliNB(SelectFwe(FeatureAgglomeration(data, FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='complete'), SelectFwe.alpha=0.041, SelectFwe.score_func=f_classif), alpha=0.01, fit_prior=True)"], "porto-seguro": ["GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='rbf', Nystroem.n_components=7), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "BernoulliNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l1', FeatureAgglomeration.linkage='average'), alpha=0.01, fit_prior=False)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='rbf', Nystroem.n_components=7), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "BernoulliNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='ward'), alpha=0.01, fit_prior=False)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.2), alpha=100.0, fit_prior=True)", "BernoulliNB(Normalizer(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), Normalizer.norm='l1'), alpha=10.0, fit_prior=False)", "MultinomialNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l1', FeatureAgglomeration.linkage='complete'), alpha=0.001, fit_prior=True)", "LogisticRegression(Nystroem(data, Nystroem.gamma=0.1, Nystroem.kernel='additive_chi2', Nystroem.n_components=2), LogisticRegression.C=0.001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GaussianNB(MinMaxScaler(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l1', FeatureAgglomeration.linkage='complete')))", "ExtraTreesClassifier(FastICA(Nystroem(data, Nystroem.gamma=0.75, Nystroem.kernel='additive_chi2', Nystroem.n_components=2), FastICA.tol=0.7000000000000001, FastICA.whiten='unit-variance'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=13, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "GaussianNB(RBFSampler(data, RBFSampler.gamma=1.0))", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.9), alpha=0.001, fit_prior=True)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.65, Nystroem.kernel='laplacian', Nystroem.n_components=5), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.9, Nystroem.kernel='cosine', Nystroem.n_components=5), alpha=0.01, fit_prior=False)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.9, Nystroem.kernel='cosine', Nystroem.n_components=6), alpha=0.01, fit_prior=False)", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.4))", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.9, Nystroem.kernel='cosine', Nystroem.n_components=6), alpha=0.01, fit_prior=True)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.4, Nystroem.kernel='chi2', Nystroem.n_components=3), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=8, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='chi2', Nystroem.n_components=3), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=8, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='chi2', Nystroem.n_components=3), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=8, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.0), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=4, min_samples_leaf=1, min_samples_split=19)", "MultinomialNB(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='sigmoid', Nystroem.n_components=1), alpha=1.0, fit_prior=True)", "BernoulliNB(Binarizer(Nystroem(StandardScaler(data), Nystroem.gamma=0.35000000000000003, Nystroem.kernel='laplacian', Nystroem.n_components=10), Binarizer.threshold=0.5), alpha=10.0, fit_prior=False)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.0), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=4, min_samples_leaf=1, min_samples_split=10)", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.45, Nystroem.kernel='sigmoid', Nystroem.n_components=9), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=4, min_samples_leaf=1, min_samples_split=10)", "RandomForestClassifier(Binarizer(Normalizer(data, Normalizer.norm='l2'), Binarizer.threshold=1.0), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=6, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "DecisionTreeClassifier(FeatureAgglomeration(MinMaxScaler(data), FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='average'), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=4, min_samples_leaf=13, min_samples_split=7)", "DecisionTreeClassifier(SelectFwe(Nystroem(data, Nystroem.gamma=0.9500000000000001, Nystroem.kernel='linear', Nystroem.n_components=1), SelectFwe.alpha=0.009000000000000001, SelectFwe.score_func=f_classif), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=4, min_samples_leaf=1, min_samples_split=10)", "DecisionTreeClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='manhattan', FeatureAgglomeration.linkage='average'), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=4, min_samples_leaf=1, min_samples_split=10)", "DecisionTreeClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.7000000000000001), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=2, min_samples_leaf=14, min_samples_split=14)", "GaussianNB(Normalizer(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), Normalizer.norm='l1'))", "GaussianNB(PCA(RBFSampler(data, RBFSampler.gamma=0.8), PCA.iterated_power=2, PCA.svd_solver='randomized'))", "BernoulliNB(PCA(RBFSampler(data, RBFSampler.gamma=0.8), PCA.iterated_power=2, PCA.svd_solver='randomized'), alpha=10.0, fit_prior=True)", "RandomForestClassifier(SelectPercentile(Nystroem(data, Nystroem.gamma=0.8, Nystroem.kernel='sigmoid', Nystroem.n_components=8), SelectPercentile.percentile=20, SelectPercentile.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.5, RandomForestClassifier.min_samples_leaf=7, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.8500000000000001, Nystroem.kernel='laplacian', Nystroem.n_components=1), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=7, min_samples_split=9)", "ExtraTreesClassifier(FeatureAgglomeration(RBFSampler(data, RBFSampler.gamma=0.0), FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='average'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=7, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.75), alpha=0.1, fit_prior=False)", "DecisionTreeClassifier(FeatureAgglomeration(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='complete'), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=10, min_samples_leaf=10, min_samples_split=2)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=1, min_samples_leaf=4, min_samples_split=2)", "DecisionTreeClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='average'), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=5, min_samples_leaf=4, min_samples_split=5)", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), LogisticRegression.C=0.0001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "MultinomialNB(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='sigmoid', Nystroem.n_components=2), alpha=0.001, fit_prior=False)", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='sigmoid', Nystroem.n_components=2), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=7, min_samples_split=13)", "DecisionTreeClassifier(MinMaxScaler(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='sigmoid', Nystroem.n_components=2)), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=7, min_samples_split=13)", "MultinomialNB(Nystroem(StandardScaler(data), Nystroem.gamma=0.0, Nystroem.kernel='sigmoid', Nystroem.n_components=2), alpha=0.001, fit_prior=False)", "GaussianNB(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='rbf', Nystroem.n_components=4))", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='poly', Nystroem.n_components=6), alpha=0.01, fit_prior=False)", "LogisticRegression(FeatureAgglomeration(data, FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='average'), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GaussianNB(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='cosine', Nystroem.n_components=4))", "LogisticRegression(FeatureAgglomeration(data, FeatureAgglomeration.affinity='manhattan', FeatureAgglomeration.linkage='average'), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.6000000000000001))", "GaussianNB(SelectPercentile(RBFSampler(data, RBFSampler.gamma=0.25), SelectPercentile.percentile=1, SelectPercentile.score_func=f_classif))", "GaussianNB(Nystroem(data, Nystroem.gamma=0.8500000000000001, Nystroem.kernel='laplacian', Nystroem.n_components=9))", "GaussianNB(StandardScaler(RBFSampler(data, RBFSampler.gamma=0.6000000000000001)))", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), alpha=0.01, fit_prior=False)", "GaussianNB(Nystroem(data, Nystroem.gamma=0.45, Nystroem.kernel='chi2', Nystroem.n_components=9))", "MultinomialNB(Nystroem(Normalizer(data, Normalizer.norm='l1'), Nystroem.gamma=0.2, Nystroem.kernel='polynomial', Nystroem.n_components=7), alpha=1.0, fit_prior=True)", "GaussianNB(Nystroem(data, Nystroem.gamma=0.1, Nystroem.kernel='polynomial', Nystroem.n_components=3))", "GaussianNB(Nystroem(data, Nystroem.gamma=0.15000000000000002, Nystroem.kernel='linear', Nystroem.n_components=9))", "LogisticRegression(Nystroem(data, Nystroem.gamma=0.1, Nystroem.kernel='laplacian', Nystroem.n_components=7), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GaussianNB(SelectPercentile(RBFSampler(data, RBFSampler.gamma=0.5), SelectPercentile.percentile=22, SelectPercentile.score_func=f_classif))", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.25), LogisticRegression.C=0.0001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MaxAbsScaler(RBFSampler(data, RBFSampler.gamma=0.2)), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.45))", "BernoulliNB(Binarizer(Normalizer(data, Normalizer.norm='max'), Binarizer.threshold=1.0), alpha=0.01, fit_prior=True)", "RandomForestClassifier(FeatureAgglomeration(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='chi2', Nystroem.n_components=4), FeatureAgglomeration.affinity='manhattan', FeatureAgglomeration.linkage='average'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.9500000000000001, RandomForestClassifier.min_samples_leaf=5, RandomForestClassifier.min_samples_split=18, RandomForestClassifier.n_estimators=100)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), alpha=1.0, fit_prior=False)", "LogisticRegression(MaxAbsScaler(RBFSampler(data, RBFSampler.gamma=0.7000000000000001)), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.9), alpha=0.1, fit_prior=False)", "BernoulliNB(Nystroem(Normalizer(data, Normalizer.norm='l1'), Nystroem.gamma=0.35000000000000003, Nystroem.kernel='linear', Nystroem.n_components=6), alpha=10.0, fit_prior=True)", "BernoulliNB(PCA(RBFSampler(data, RBFSampler.gamma=0.2), PCA.iterated_power=5, PCA.svd_solver='randomized'), alpha=0.001, fit_prior=True)", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.05), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.05), LogisticRegression.C=0.001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.05), alpha=100.0, fit_prior=True)", "LogisticRegression(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l1', FeatureAgglomeration.linkage='average'), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "DecisionTreeClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='manhattan', FeatureAgglomeration.linkage='average'), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=3, min_samples_leaf=17, min_samples_split=9)", "BernoulliNB(VarianceThreshold(data, VarianceThreshold.threshold=0.55), alpha=100.0, fit_prior=True)", "BernoulliNB(VarianceThreshold(data, VarianceThreshold.threshold=0.4), alpha=10.0, fit_prior=False)", "DecisionTreeClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='ward'), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=7, min_samples_leaf=19, min_samples_split=10)", "BernoulliNB(MinMaxScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.4)), alpha=10.0, fit_prior=False)", "BernoulliNB(Normalizer(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), Normalizer.norm='max'), alpha=0.001, fit_prior=False)", "LogisticRegression(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='poly', Nystroem.n_components=4), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), alpha=0.01, fit_prior=True)", "BernoulliNB(RBFSampler(StandardScaler(data), RBFSampler.gamma=0.7000000000000001), alpha=0.01, fit_prior=True)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), alpha=0.01, fit_prior=False)", "BernoulliNB(Nystroem(MinMaxScaler(data), Nystroem.gamma=0.55, Nystroem.kernel='rbf', Nystroem.n_components=4), alpha=0.01, fit_prior=True)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.55, Nystroem.kernel='rbf', Nystroem.n_components=4), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7000000000000001)", "MultinomialNB(Nystroem(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), Nystroem.gamma=0.8500000000000001, Nystroem.kernel='rbf', Nystroem.n_components=1), alpha=0.01, fit_prior=True)", "GradientBoostingClassifier(Binarizer(Nystroem(data, Nystroem.gamma=0.55, Nystroem.kernel='rbf', Nystroem.n_components=4), Binarizer.threshold=0.45), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7000000000000001)", "DecisionTreeClassifier(PCA(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='rbf', Nystroem.n_components=1), PCA.iterated_power=9, PCA.svd_solver='randomized'), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=8, min_samples_leaf=10, min_samples_split=4)"], "Higgs": ["MultinomialNB(Nystroem(RBFSampler(data, RBFSampler.gamma=0.75), Nystroem.gamma=0.9, Nystroem.kernel='laplacian', Nystroem.n_components=7), alpha=0.001, fit_prior=True)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='laplacian', Nystroem.n_components=10), alpha=10.0, fit_prior=False)", "BernoulliNB(Binarizer(Nystroem(data, Nystroem.gamma=0.5, Nystroem.kernel='sigmoid', Nystroem.n_components=1), Binarizer.threshold=0.9500000000000001), alpha=0.001, fit_prior=False)", "GaussianNB(RBFSampler(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RBFSampler.gamma=0.2))", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.6000000000000001))", "GaussianNB(StandardScaler(RBFSampler(data, RBFSampler.gamma=0.6000000000000001)))", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), alpha=0.1, fit_prior=False)", "BernoulliNB(Nystroem(Binarizer(data, Binarizer.threshold=0.25), Nystroem.gamma=0.8500000000000001, Nystroem.kernel='chi2', Nystroem.n_components=7), alpha=0.01, fit_prior=True)", "GaussianNB(Binarizer(Nystroem(data, Nystroem.gamma=0.75, Nystroem.kernel='poly', Nystroem.n_components=3), Binarizer.threshold=0.6000000000000001))", "BernoulliNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='manhattan', FeatureAgglomeration.linkage='complete'), alpha=0.001, fit_prior=True)", "GaussianNB(Binarizer(SelectPercentile(Nystroem(data, Nystroem.gamma=0.45, Nystroem.kernel='laplacian', Nystroem.n_components=2), SelectPercentile.percentile=90, SelectPercentile.score_func=f_classif), Binarizer.threshold=0.9500000000000001))", "GaussianNB(Binarizer(Nystroem(data, Nystroem.gamma=0.45, Nystroem.kernel='laplacian', Nystroem.n_components=2), Binarizer.threshold=0.9500000000000001))", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.1, Nystroem.kernel='laplacian', Nystroem.n_components=7), alpha=0.01, fit_prior=True)", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=1.0), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GaussianNB(VarianceThreshold(MaxAbsScaler(data), VarianceThreshold.threshold=0.3))", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), alpha=0.01, fit_prior=True)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), alpha=0.01, fit_prior=False)", "GaussianNB(Nystroem(data, Nystroem.gamma=0.55, Nystroem.kernel='sigmoid', Nystroem.n_components=2))", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GaussianNB(Nystroem(SelectFwe(data, SelectFwe.alpha=0.014, SelectFwe.score_func=f_classif), Nystroem.gamma=0.55, Nystroem.kernel='sigmoid', Nystroem.n_components=2))", "GaussianNB(RBFSampler(RBFSampler(data, RBFSampler.gamma=1.0), RBFSampler.gamma=0.75))", "GaussianNB(RBFSampler(data, RBFSampler.gamma=1.0))", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=1.0), LogisticRegression.C=0.1, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GaussianNB(RobustScaler(RBFSampler(RBFSampler(data, RBFSampler.gamma=1.0), RBFSampler.gamma=0.75)))", "GaussianNB(RBFSampler(FastICA(data, FastICA.tol=0.4, FastICA.whiten='unit-variance'), RBFSampler.gamma=0.55))", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=1.0), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.65))", "GaussianNB(RBFSampler(PCA(data, PCA.iterated_power=10, PCA.svd_solver='randomized'), RBFSampler.gamma=0.65))", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.65), alpha=0.1, fit_prior=True)", "GradientBoostingClassifier(MinMaxScaler(Nystroem(data, Nystroem.gamma=0.75, Nystroem.kernel='cosine', Nystroem.n_components=3)), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "BernoulliNB(MinMaxScaler(RBFSampler(data, RBFSampler.gamma=0.6000000000000001)), alpha=0.1, fit_prior=True)", "RandomForestClassifier(Binarizer(FeatureAgglomeration(data, FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='complete'), Binarizer.threshold=0.2), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=9, RandomForestClassifier.min_samples_split=11, RandomForestClassifier.n_estimators=100)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), alpha=0.1, fit_prior=True)", "MultinomialNB(MinMaxScaler(RBFSampler(data, RBFSampler.gamma=0.55)), alpha=0.01, fit_prior=False)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.4), alpha=10.0, fit_prior=True)", "BernoulliNB(SelectPercentile(VarianceThreshold(data, VarianceThreshold.threshold=0.15000000000000002), SelectPercentile.percentile=42, SelectPercentile.score_func=f_classif), alpha=0.1, fit_prior=True)", "BernoulliNB(data, alpha=0.01, fit_prior=False)", "BernoulliNB(data, alpha=1.0, fit_prior=True)", "BernoulliNB(VarianceThreshold(data, VarianceThreshold.threshold=0.7000000000000001), alpha=0.1, fit_prior=True)", "BernoulliNB(VarianceThreshold(data, VarianceThreshold.threshold=0.15000000000000002), alpha=0.1, fit_prior=True)", "BernoulliNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='average'), alpha=100.0, fit_prior=True)", "BernoulliNB(SelectPercentile(data, SelectPercentile.percentile=10, SelectPercentile.score_func=f_classif), alpha=10.0, fit_prior=False)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='rbf', Nystroem.n_components=4), alpha=100.0, fit_prior=False)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='linear', Nystroem.n_components=4), alpha=100.0, fit_prior=False)", "BernoulliNB(Normalizer(Nystroem(data, Nystroem.gamma=0.30000000000000004, Nystroem.kernel='linear', Nystroem.n_components=6), Normalizer.norm='max'), alpha=0.01, fit_prior=False)", "ExtraTreesClassifier(Nystroem(PCA(data, PCA.iterated_power=1, PCA.svd_solver='randomized'), Nystroem.gamma=0.4, Nystroem.kernel='rbf', Nystroem.n_components=2), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=18, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='linear', Nystroem.n_components=8), alpha=100.0, fit_prior=False)", "DecisionTreeClassifier(Binarizer(data, Binarizer.threshold=0.0), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=1, min_samples_leaf=7, min_samples_split=9)", "GaussianNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l2', FeatureAgglomeration.linkage='complete'))", "GaussianNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='complete'))", "GaussianNB(RBFSampler(RBFSampler(data, RBFSampler.gamma=0.75), RBFSampler.gamma=0.55))", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.65))", "BernoulliNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='complete'), alpha=0.1, fit_prior=False)", "LogisticRegression(Nystroem(data, Nystroem.gamma=0.30000000000000004, Nystroem.kernel='cosine', Nystroem.n_components=3), LogisticRegression.C=0.0001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l2', FeatureAgglomeration.linkage='complete'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=15, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(FeatureAgglomeration(data, FeatureAgglomeration.affinity='manhattan', FeatureAgglomeration.linkage='average'), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "BernoulliNB(PolynomialFeatures(SelectPercentile(data, SelectPercentile.percentile=51, SelectPercentile.score_func=f_classif), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), alpha=0.01, fit_prior=True)", "BernoulliNB(data, alpha=0.001, fit_prior=False)", "BernoulliNB(data, alpha=0.001, fit_prior=True)", "BernoulliNB(Normalizer(data, Normalizer.norm='l1'), alpha=0.001, fit_prior=False)", "DecisionTreeClassifier(Nystroem(PCA(data, PCA.iterated_power=5, PCA.svd_solver='randomized'), Nystroem.gamma=0.55, Nystroem.kernel='sigmoid', Nystroem.n_components=1), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=16, min_samples_split=4)", "GaussianNB(MinMaxScaler(RBFSampler(data, RBFSampler.gamma=0.6000000000000001)))", "DecisionTreeClassifier(Nystroem(MaxAbsScaler(data), Nystroem.gamma=0.55, Nystroem.kernel='sigmoid', Nystroem.n_components=1), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=16, min_samples_split=4)", "ExtraTreesClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l2', FeatureAgglomeration.linkage='average'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=20, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l2', FeatureAgglomeration.linkage='complete'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=20, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(SelectPercentile(data, SelectPercentile.percentile=26, SelectPercentile.score_func=f_classif), alpha=0.01, fit_prior=True)", "GaussianNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='complete'))", "LogisticRegression(FeatureAgglomeration(data, FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='complete'), LogisticRegression.C=0.0001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GaussianNB(MinMaxScaler(Nystroem(data, Nystroem.gamma=0.5, Nystroem.kernel='poly', Nystroem.n_components=3)))", "BernoulliNB(FastICA(RobustScaler(Nystroem(data, Nystroem.gamma=0.65, Nystroem.kernel='laplacian', Nystroem.n_components=7)), FastICA.tol=0.8500000000000001, FastICA.whiten='unit-variance'), alpha=0.01, fit_prior=False)", "BernoulliNB(RBFSampler(StandardScaler(data), RBFSampler.gamma=0.6000000000000001), alpha=0.001, fit_prior=False)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.5, Nystroem.kernel='polynomial', Nystroem.n_components=2), alpha=100.0, fit_prior=False)", "BernoulliNB(RBFSampler(FastICA(data, FastICA.tol=0.7000000000000001, FastICA.whiten='unit-variance'), RBFSampler.gamma=0.30000000000000004), alpha=0.001, fit_prior=False)", "BernoulliNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='complete'), alpha=0.1, fit_prior=False)", "BernoulliNB(FeatureAgglomeration(PCA(data, PCA.iterated_power=9, PCA.svd_solver='randomized'), FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='complete'), alpha=0.1, fit_prior=False)", "BernoulliNB(StandardScaler(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='rbf', Nystroem.n_components=10)), alpha=0.001, fit_prior=False)", "LogisticRegression(FeatureAgglomeration(VarianceThreshold(data, VarianceThreshold.threshold=0.7000000000000001), FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='average'), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), alpha=0.001, fit_prior=False)", "BernoulliNB(RBFSampler(SelectPercentile(data, SelectPercentile.percentile=74, SelectPercentile.score_func=f_classif), RBFSampler.gamma=0.8500000000000001), alpha=0.1, fit_prior=False)", "BernoulliNB(RobustScaler(Binarizer(data, Binarizer.threshold=0.25)), alpha=10.0, fit_prior=False)", "BernoulliNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='ward'), alpha=100.0, fit_prior=False)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), alpha=100.0, fit_prior=True)", "GaussianNB(Nystroem(data, Nystroem.gamma=0.65, Nystroem.kernel='sigmoid', Nystroem.n_components=4))", "GaussianNB(Nystroem(data, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='sigmoid', Nystroem.n_components=4))", "GaussianNB(Nystroem(data, Nystroem.gamma=0.2, Nystroem.kernel='sigmoid', Nystroem.n_components=9))", "GaussianNB(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='sigmoid', Nystroem.n_components=9))", "GaussianNB(Nystroem(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), Nystroem.gamma=0.2, Nystroem.kernel='sigmoid', Nystroem.n_components=9))", "GaussianNB(Nystroem(data, Nystroem.gamma=0.2, Nystroem.kernel='sigmoid', Nystroem.n_components=4))", "GaussianNB(PolynomialFeatures(FeatureAgglomeration(data, FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='average'), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False))", "GaussianNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l2', FeatureAgglomeration.linkage='complete'))"], "Diabetes130US": ["RandomForestClassifier(SelectPercentile(data, SelectPercentile.percentile=39, SelectPercentile.score_func=f_classif), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=19, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RobustScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=11, RandomForestClassifier.min_samples_split=9, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(StandardScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=11, RandomForestClassifier.min_samples_split=9, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.7500000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=13, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.7500000000000001), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=13, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.7500000000000001), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=13, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectFwe(VarianceThreshold(data, VarianceThreshold.threshold=0.7500000000000001), SelectFwe.alpha=0.009000000000000001, SelectFwe.score_func=f_classif), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=13, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectFwe(VarianceThreshold(data, VarianceThreshold.threshold=0.7500000000000001), SelectFwe.alpha=0.009000000000000001, SelectFwe.score_func=f_classif), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=13, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectFwe(VarianceThreshold(data, VarianceThreshold.threshold=0.9500000000000001), SelectFwe.alpha=0.009000000000000001, SelectFwe.score_func=f_classif), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=13, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=10, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.8), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=13, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(MinMaxScaler(data), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=10, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=10, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=10, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(data, SelectFwe.alpha=0.038, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=10, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.45), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=11, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(RobustScaler(data), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.45)", "GradientBoostingClassifier(RobustScaler(data), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "ExtraTreesClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.45), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=19, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.35000000000000003), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=19, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(MinMaxScaler(data), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=13, RandomForestClassifier.min_samples_split=6, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=13, RandomForestClassifier.min_samples_split=6, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(MinMaxScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=7, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.4), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=7, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MaxAbsScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=14, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MaxAbsScaler(data), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=7, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=13, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=3, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MinMaxScaler(RobustScaler(data)), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=7, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MinMaxScaler(data), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=7, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "GradientBoostingClassifier(SelectPercentile(data, SelectPercentile.percentile=19, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "GradientBoostingClassifier(RobustScaler(data), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "GradientBoostingClassifier(SelectPercentile(data, SelectPercentile.percentile=36, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "GradientBoostingClassifier(SelectPercentile(data, SelectPercentile.percentile=88, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "GradientBoostingClassifier(RobustScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "GradientBoostingClassifier(SelectPercentile(SelectPercentile(data, SelectPercentile.percentile=88, SelectPercentile.score_func=f_classif), SelectPercentile.percentile=54, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "GradientBoostingClassifier(SelectPercentile(data, SelectPercentile.percentile=88, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.9500000000000001, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "GradientBoostingClassifier(SelectPercentile(data, SelectPercentile.percentile=88, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "GradientBoostingClassifier(SelectPercentile(data, SelectPercentile.percentile=37, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "GradientBoostingClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.7500000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "GradientBoostingClassifier(RobustScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "GradientBoostingClassifier(MinMaxScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "GradientBoostingClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.5), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "GradientBoostingClassifier(MinMaxScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "RandomForestClassifier(MaxAbsScaler(data), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=12, RandomForestClassifier.min_samples_split=13, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=12, RandomForestClassifier.min_samples_split=13, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MaxAbsScaler(data), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=16, RandomForestClassifier.min_samples_split=13, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectFwe(data, SelectFwe.alpha=0.023, SelectFwe.score_func=f_classif), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=5, min_samples_split=13, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PCA(SelectFwe(data, SelectFwe.alpha=0.008, SelectFwe.score_func=f_classif), PCA.iterated_power=8, PCA.svd_solver='randomized'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=13, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(SelectPercentile(data, SelectPercentile.percentile=31, SelectPercentile.score_func=f_classif), SelectFwe.alpha=0.002, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=14, RandomForestClassifier.min_samples_split=20, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=13, RandomForestClassifier.min_samples_split=15, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectPercentile(data, SelectPercentile.percentile=31, SelectPercentile.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=14, RandomForestClassifier.min_samples_split=20, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectPercentile(data, SelectPercentile.percentile=31, SelectPercentile.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=19, RandomForestClassifier.min_samples_split=20, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectPercentile(data, SelectPercentile.percentile=31, SelectPercentile.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=19, RandomForestClassifier.min_samples_split=20, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=7, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.05, RandomForestClassifier.min_samples_leaf=13, RandomForestClassifier.min_samples_split=15, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(StandardScaler(RobustScaler(data)), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.05, RandomForestClassifier.min_samples_leaf=13, RandomForestClassifier.min_samples_split=15, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectPercentile(VarianceThreshold(data, VarianceThreshold.threshold=0.5), SelectPercentile.percentile=31, SelectPercentile.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=14, RandomForestClassifier.min_samples_split=20, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RobustScaler(SelectPercentile(VarianceThreshold(data, VarianceThreshold.threshold=0.5), SelectPercentile.percentile=31, SelectPercentile.score_func=f_classif)), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=14, RandomForestClassifier.min_samples_split=20, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.6000000000000001, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(StandardScaler(data), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.6000000000000001, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "RandomForestClassifier(MinMaxScaler(data), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=14, RandomForestClassifier.min_samples_split=5, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MinMaxScaler(data), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=14, RandomForestClassifier.min_samples_split=5, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(MinMaxScaler(data), Normalizer.norm='max'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=14, RandomForestClassifier.min_samples_split=5, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectFwe(data, SelectFwe.alpha=0.027, SelectFwe.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=4, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectFwe(data, SelectFwe.alpha=0.027, SelectFwe.score_func=f_classif), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=4, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MinMaxScaler(data), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=18, min_samples_split=18, ExtraTreesClassifier.n_estimators=100)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=6, min_samples_leaf=14, min_samples_split=10)", "DecisionTreeClassifier(MinMaxScaler(data), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=6, min_samples_leaf=18, min_samples_split=10)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=12, GradientBoostingClassifier.min_samples_split=8, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=12, GradientBoostingClassifier.min_samples_split=8, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "RandomForestClassifier(StandardScaler(data), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=10, RandomForestClassifier.min_samples_split=15, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MaxAbsScaler(data), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=10, RandomForestClassifier.min_samples_split=15, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(StandardScaler(data), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=10, RandomForestClassifier.min_samples_split=15, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(StandardScaler(StandardScaler(data)), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=10, RandomForestClassifier.min_samples_split=19, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=10, RandomForestClassifier.min_samples_split=15, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(StandardScaler(StandardScaler(data)), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=10, RandomForestClassifier.min_samples_split=15, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(VarianceThreshold(StandardScaler(data), VarianceThreshold.threshold=0.8), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=10, RandomForestClassifier.min_samples_split=15, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(StandardScaler(StandardScaler(data)), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=4, RandomForestClassifier.min_samples_split=15, RandomForestClassifier.n_estimators=100)"], "KDDCup99": ["DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=9, min_samples_leaf=1, min_samples_split=7)", "BernoulliNB(data, alpha=0.01, fit_prior=False)", "BernoulliNB(StandardScaler(SelectFwe(data, SelectFwe.alpha=0.04, SelectFwe.score_func=f_classif)), alpha=0.01, fit_prior=False)", "GaussianNB(StandardScaler(MaxAbsScaler(data)))", "MultinomialNB(data, alpha=0.01, fit_prior=False)", "GaussianNB(Binarizer(Binarizer(data, Binarizer.threshold=0.1), Binarizer.threshold=0.35000000000000003))", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=10, min_samples_leaf=18, min_samples_split=11)", "DecisionTreeClassifier(MinMaxScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.15000000000000002)), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=8, min_samples_leaf=2, min_samples_split=14)", "BernoulliNB(data, alpha=0.1, fit_prior=True)", "DecisionTreeClassifier(Normalizer(Nystroem(data, Nystroem.gamma=0.5, Nystroem.kernel='laplacian', Nystroem.n_components=10), Normalizer.norm='l1'), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=5, min_samples_leaf=4, min_samples_split=5)", "BernoulliNB(SelectFwe(data, SelectFwe.alpha=0.039, SelectFwe.score_func=f_classif), alpha=100.0, fit_prior=False)", "GaussianNB(data)", "MultinomialNB(data, alpha=100.0, fit_prior=True)", "DecisionTreeClassifier(SelectPercentile(data, SelectPercentile.percentile=47, SelectPercentile.score_func=f_classif), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=8, min_samples_leaf=7, min_samples_split=4)", "DecisionTreeClassifier(VarianceThreshold(Nystroem(data, Nystroem.gamma=0.8, Nystroem.kernel='poly', Nystroem.n_components=8), VarianceThreshold.threshold=0.9500000000000001), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=7, min_samples_leaf=7, min_samples_split=15)", "DecisionTreeClassifier(RobustScaler(data), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=3, min_samples_leaf=12, min_samples_split=14)", "BernoulliNB(data, alpha=10.0, fit_prior=False)", "GaussianNB(data)", "MultinomialNB(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='poly', Nystroem.n_components=1), alpha=0.001, fit_prior=True)", "MultinomialNB(data, alpha=100.0, fit_prior=False)", "MultinomialNB(data, alpha=10.0, fit_prior=False)", "MultinomialNB(data, alpha=1.0, fit_prior=True)", "MultinomialNB(data, alpha=0.1, fit_prior=False)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=5, min_samples_leaf=14, min_samples_split=8)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=3, min_samples_leaf=9, min_samples_split=14)", "DecisionTreeClassifier(SelectPercentile(SelectPercentile(data, SelectPercentile.percentile=45, SelectPercentile.score_func=f_classif), SelectPercentile.percentile=2, SelectPercentile.score_func=f_classif), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=2, min_samples_leaf=6, min_samples_split=5)", "GaussianNB(SelectPercentile(data, SelectPercentile.percentile=55, SelectPercentile.score_func=f_classif))", "GaussianNB(Nystroem(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='complete'), Nystroem.gamma=0.05, Nystroem.kernel='chi2', Nystroem.n_components=8))", "MultinomialNB(data, alpha=10.0, fit_prior=True)", "MultinomialNB(data, alpha=0.01, fit_prior=True)", "MultinomialNB(VarianceThreshold(data, VarianceThreshold.threshold=0.4), alpha=10.0, fit_prior=True)", "DecisionTreeClassifier(RobustScaler(data), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=10, min_samples_leaf=17, min_samples_split=20)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=5, min_samples_leaf=8, min_samples_split=18)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=3, min_samples_leaf=13, min_samples_split=17)", "BernoulliNB(data, alpha=100.0, fit_prior=False)", "BernoulliNB(SelectPercentile(data, SelectPercentile.percentile=75, SelectPercentile.score_func=f_classif), alpha=100.0, fit_prior=False)", "BernoulliNB(data, alpha=0.001, fit_prior=False)", "MultinomialNB(Normalizer(data, Normalizer.norm='l2'), alpha=0.1, fit_prior=False)", "GaussianNB(MaxAbsScaler(SelectPercentile(data, SelectPercentile.percentile=61, SelectPercentile.score_func=f_classif)))", "GaussianNB(Nystroem(data, Nystroem.gamma=0.2, Nystroem.kernel='sigmoid', Nystroem.n_components=4))", "MultinomialNB(data, alpha=1.0, fit_prior=False)", "DecisionTreeClassifier(RobustScaler(MaxAbsScaler(data)), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=10, min_samples_leaf=16, min_samples_split=19)", "GaussianNB(data)", "BernoulliNB(PolynomialFeatures(SelectPercentile(data, SelectPercentile.percentile=51, SelectPercentile.score_func=f_classif), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), alpha=0.01, fit_prior=True)", "GaussianNB(RBFSampler(RBFSampler(data, RBFSampler.gamma=0.75), RBFSampler.gamma=0.55))", "MultinomialNB(data, alpha=10.0, fit_prior=True)", "MultinomialNB(MinMaxScaler(MinMaxScaler(data)), alpha=0.001, fit_prior=False)", "MultinomialNB(data, alpha=1.0, fit_prior=False)", "GaussianNB(StandardScaler(Binarizer(data, Binarizer.threshold=0.25)))"], "churn": ["ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=2, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.30000000000000004))", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.1), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.9), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=2, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.55), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=5, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.4), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=1, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.05), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=2, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.4), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=2, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.8), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=2, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.8), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=8, min_samples_leaf=4, min_samples_split=9)", "MultinomialNB(Normalizer(data, Normalizer.norm='l2'), alpha=10.0, fit_prior=True)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=1, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.9), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=8, min_samples_leaf=5, min_samples_split=11)", "RandomForestClassifier(RBFSampler(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized'), RBFSampler.gamma=0.8), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.5, RandomForestClassifier.min_samples_leaf=15, RandomForestClassifier.min_samples_split=6, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(StandardScaler(data), RBFSampler.gamma=0.45), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "BernoulliNB(StandardScaler(RBFSampler(data, RBFSampler.gamma=0.35000000000000003)), alpha=1.0, fit_prior=True)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.55), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=18, RandomForestClassifier.min_samples_split=18, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.5), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "BernoulliNB(RBFSampler(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='complete'), RBFSampler.gamma=0.75), alpha=0.1, fit_prior=True)", "ExtraTreesClassifier(RBFSampler(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RBFSampler.gamma=0.1), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=12, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(StandardScaler(RBFSampler(data, RBFSampler.gamma=0.75)), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.9500000000000001, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=12, RandomForestClassifier.min_samples_split=10, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.4), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.25), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=16, RandomForestClassifier.min_samples_split=10, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(PCA(data, PCA.iterated_power=3, PCA.svd_solver='randomized'), RBFSampler.gamma=0.8), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(PCA(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), PCA.iterated_power=10, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.2), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "RandomForestClassifier(RBFSampler(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), RBFSampler.gamma=0.05), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.5, RandomForestClassifier.min_samples_leaf=7, RandomForestClassifier.min_samples_split=18, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.55), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.65), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(SelectPercentile(RBFSampler(data, RBFSampler.gamma=0.9), SelectPercentile.percentile=28, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.7500000000000001, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "GradientBoostingClassifier(PCA(RBFSampler(data, RBFSampler.gamma=0.5), PCA.iterated_power=5, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=3, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='ward'), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.7500000000000001, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.8500000000000001, Nystroem.kernel='polynomial', Nystroem.n_components=1), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=6, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=1.0), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=3, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=6, min_samples_leaf=18, min_samples_split=6)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.1), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.8), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.6000000000000001, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.8), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.05), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GaussianNB(StandardScaler(RBFSampler(data, RBFSampler.gamma=0.9500000000000001)))", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.55), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "MultinomialNB(Normalizer(SelectPercentile(data, SelectPercentile.percentile=73, SelectPercentile.score_func=f_classif), Normalizer.norm='max'), alpha=100.0, fit_prior=False)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.8), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.5), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.65), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.5)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.5), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.75), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "BernoulliNB(FeatureAgglomeration(RBFSampler(data, RBFSampler.gamma=0.2), FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='average'), alpha=10.0, fit_prior=True)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.2), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.45)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.25), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=13, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.55), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.8), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=1.0), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.05), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.75), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.5)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=9, min_samples_leaf=10, min_samples_split=4)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.1), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=6, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.5), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=1, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=13, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.1), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6000000000000001, min_samples_leaf=1, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.5), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=13, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "BernoulliNB(RBFSampler(PCA(data, PCA.iterated_power=7, PCA.svd_solver='randomized'), RBFSampler.gamma=0.75), alpha=100.0, fit_prior=True)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=13, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.25), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=6, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='chi2', Nystroem.n_components=10), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=13, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=7, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.5, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.4), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=4, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "KNeighborsClassifier(RBFSampler(data, RBFSampler.gamma=1.0), KNeighborsClassifier.n_neighbors=48, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='uniform')", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.2), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=7, RandomForestClassifier.min_samples_split=18, RandomForestClassifier.n_estimators=100)", "GaussianNB(Normalizer(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), Normalizer.norm='l2'))", "KNeighborsClassifier(RBFSampler(data, RBFSampler.gamma=0.55), KNeighborsClassifier.n_neighbors=14, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='uniform')", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.9), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=7, RandomForestClassifier.min_samples_split=13, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=5, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)"], "APSFailure": ["GradientBoostingClassifier(RBFSampler(Normalizer(data, Normalizer.norm='l1'), RBFSampler.gamma=0.35000000000000003), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.3)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.2), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=4, min_samples_leaf=1, min_samples_split=10)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=10, min_samples_leaf=14, min_samples_split=8)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.1), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=7, min_samples_leaf=13, min_samples_split=10)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.1), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.15000000000000002, min_samples_leaf=12, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "GaussianNB(Nystroem(data, Nystroem.gamma=0.45, Nystroem.kernel='laplacian', Nystroem.n_components=9))", "DecisionTreeClassifier(RBFSampler(SelectFwe(data, SelectFwe.alpha=0.023, SelectFwe.score_func=f_classif), RBFSampler.gamma=0.0), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=3, min_samples_leaf=7, min_samples_split=14)", "RandomForestClassifier(Binarizer(Normalizer(data, Normalizer.norm='l2'), Binarizer.threshold=1.0), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=6, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.45, Nystroem.kernel='sigmoid', Nystroem.n_components=9), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=8, min_samples_leaf=12, min_samples_split=20)", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='laplacian', Nystroem.n_components=10), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=6, min_samples_leaf=20, min_samples_split=18)", "GaussianNB(RBFSampler(SelectPercentile(data, SelectPercentile.percentile=56, SelectPercentile.score_func=f_classif), RBFSampler.gamma=0.7000000000000001))", "GradientBoostingClassifier(SelectPercentile(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), SelectPercentile.percentile=37, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=8, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.5)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.25), alpha=0.01, fit_prior=False)", "GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.8500000000000001, GradientBoostingClassifier.min_samples_leaf=11, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "BernoulliNB(Nystroem(Binarizer(data, Binarizer.threshold=0.8), Nystroem.gamma=0.15000000000000002, Nystroem.kernel='chi2', Nystroem.n_components=10), alpha=100.0, fit_prior=False)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.75, Nystroem.kernel='chi2', Nystroem.n_components=5), alpha=100.0, fit_prior=False)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='rbf', Nystroem.n_components=7), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.5, Nystroem.kernel='poly', Nystroem.n_components=1), alpha=100.0, fit_prior=True)", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.8500000000000001, Nystroem.kernel='laplacian', Nystroem.n_components=5), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=4, min_samples_leaf=1, min_samples_split=4)", "GaussianNB(MaxAbsScaler(Nystroem(data, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='laplacian', Nystroem.n_components=5)))", "LogisticRegression(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='complete'), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GaussianNB(MinMaxScaler(RBFSampler(data, RBFSampler.gamma=0.05)))", "GaussianNB(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='sigmoid', Nystroem.n_components=4))", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='sigmoid', Nystroem.n_components=6), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=4, min_samples_leaf=6, min_samples_split=15)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='sigmoid', Nystroem.n_components=4), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=18, min_samples_split=19, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.1, Nystroem.kernel='rbf', Nystroem.n_components=1), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "GaussianNB(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='sigmoid', Nystroem.n_components=4))", "MultinomialNB(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='sigmoid', Nystroem.n_components=2), alpha=0.001, fit_prior=False)", "DecisionTreeClassifier(Nystroem(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l1', FeatureAgglomeration.linkage='average'), Nystroem.gamma=0.7000000000000001, Nystroem.kernel='rbf', Nystroem.n_components=7), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=4, min_samples_leaf=6, min_samples_split=2)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "GradientBoostingClassifier(SelectPercentile(data, SelectPercentile.percentile=88, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.75), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=14, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(MaxAbsScaler(RBFSampler(data, RBFSampler.gamma=0.2)), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GaussianNB(RBFSampler(SelectFwe(data, SelectFwe.alpha=0.036000000000000004, SelectFwe.score_func=f_classif), RBFSampler.gamma=0.8500000000000001))", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.25), alpha=10.0, fit_prior=True)", "MultinomialNB(Nystroem(data, Nystroem.gamma=0.5, Nystroem.kernel='chi2', Nystroem.n_components=5), alpha=10.0, fit_prior=True)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.5, Nystroem.kernel='chi2', Nystroem.n_components=5), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.8, RandomForestClassifier.min_samples_leaf=9, RandomForestClassifier.min_samples_split=18, RandomForestClassifier.n_estimators=100)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.55, Nystroem.kernel='sigmoid', Nystroem.n_components=3), alpha=10.0, fit_prior=True)", "LogisticRegression(SelectPercentile(data, SelectPercentile.percentile=7, SelectPercentile.score_func=f_classif), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GradientBoostingClassifier(RobustScaler(data), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.05)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=9, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.9), alpha=10.0, fit_prior=True)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), alpha=100.0, fit_prior=False)", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.05))", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.4))", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='laplacian', Nystroem.n_components=6), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=6, min_samples_leaf=13, min_samples_split=14)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.8, Nystroem.kernel='laplacian', Nystroem.n_components=5), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=9, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "MultinomialNB(SelectPercentile(Nystroem(data, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='rbf', Nystroem.n_components=9), SelectPercentile.percentile=39, SelectPercentile.score_func=f_classif), alpha=1.0, fit_prior=False)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.05)", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.9500000000000001, Nystroem.kernel='sigmoid', Nystroem.n_components=4), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=8, min_samples_leaf=10, min_samples_split=14)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.65, Nystroem.kernel='sigmoid', Nystroem.n_components=7), alpha=10.0, fit_prior=True)", "RandomForestClassifier(SelectPercentile(Nystroem(data, Nystroem.gamma=0.8, Nystroem.kernel='sigmoid', Nystroem.n_components=8), SelectPercentile.percentile=20, SelectPercentile.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.5, RandomForestClassifier.min_samples_leaf=7, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(FeatureAgglomeration(RBFSampler(data, RBFSampler.gamma=0.0), FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='average'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=7, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(FeatureAgglomeration(RBFSampler(data, RBFSampler.gamma=0.0), FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='average'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.05, min_samples_leaf=7, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.75))", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=1, min_samples_leaf=4, min_samples_split=2)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=11, GradientBoostingClassifier.min_samples_split=8, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "GaussianNB(Normalizer(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), Normalizer.norm='l1'))", "LogisticRegression(SelectPercentile(data, SelectPercentile.percentile=9, SelectPercentile.score_func=f_classif), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=3, min_samples_leaf=7, min_samples_split=9)", "BernoulliNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='ward'), alpha=10.0, fit_prior=False)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.45), alpha=0.01, fit_prior=True)", "BernoulliNB(PCA(RBFSampler(data, RBFSampler.gamma=0.2), PCA.iterated_power=5, PCA.svd_solver='randomized'), alpha=0.001, fit_prior=True)", "RandomForestClassifier(Nystroem(Nystroem(data, Nystroem.gamma=0.9500000000000001, Nystroem.kernel='additive_chi2', Nystroem.n_components=9), Nystroem.gamma=0.65, Nystroem.kernel='rbf', Nystroem.n_components=4), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=17, RandomForestClassifier.min_samples_split=6, RandomForestClassifier.n_estimators=100)", "MultinomialNB(Nystroem(VarianceThreshold(data, VarianceThreshold.threshold=0.45), Nystroem.gamma=0.30000000000000004, Nystroem.kernel='rbf', Nystroem.n_components=3), alpha=100.0, fit_prior=True)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.9500000000000001, Nystroem.kernel='laplacian', Nystroem.n_components=9), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=17, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "GaussianNB(Nystroem(SelectPercentile(data, SelectPercentile.percentile=27, SelectPercentile.score_func=f_classif), Nystroem.gamma=0.2, Nystroem.kernel='rbf', Nystroem.n_components=10))", "GaussianNB(PCA(RBFSampler(data, RBFSampler.gamma=0.25), PCA.iterated_power=1, PCA.svd_solver='randomized'))", "LogisticRegression(RobustScaler(MaxAbsScaler(data)), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), alpha=0.01, fit_prior=True)", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.25))", "LogisticRegression(StandardScaler(RBFSampler(data, RBFSampler.gamma=0.1)), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.1), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), alpha=10.0, fit_prior=True)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.8), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=20, min_samples_split=20, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.8), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=12, GradientBoostingClassifier.min_samples_split=8, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.05)", "BernoulliNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l1', FeatureAgglomeration.linkage='average'), alpha=100.0, fit_prior=True)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "GaussianNB(MaxAbsScaler(PCA(data, PCA.iterated_power=1, PCA.svd_solver='randomized')))", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=11, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.1), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.45)", "DecisionTreeClassifier(FastICA(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), FastICA.tol=0.05, FastICA.whiten='unit-variance'), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=3, min_samples_leaf=18, min_samples_split=18)", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.1))", "GaussianNB(MaxAbsScaler(PCA(data, PCA.iterated_power=2, PCA.svd_solver='randomized')))", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=1.0), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=13, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(MinMaxScaler(data), RBFSampler.gamma=0.0), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=17, RandomForestClassifier.min_samples_split=18, RandomForestClassifier.n_estimators=100)"], "amazon-commerce-reviews": ["LogisticRegression(StandardScaler(data), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(Normalizer(data, Normalizer.norm='l1')), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MinMaxScaler(data), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PCA(data, PCA.iterated_power=3, PCA.svd_solver='randomized'), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MinMaxScaler(data), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MaxAbsScaler(data), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Binarizer(StandardScaler(Binarizer(data, Binarizer.threshold=1.0)), Binarizer.threshold=0.8500000000000001), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MaxAbsScaler(data), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=0.1, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(data), LogisticRegression.C=0.1, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PCA(data, PCA.iterated_power=10, PCA.svd_solver='randomized'), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PCA(data, PCA.iterated_power=3, PCA.svd_solver='randomized'), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectPercentile(data, SelectPercentile.percentile=44, SelectPercentile.score_func=f_classif), LogisticRegression.C=0.001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectPercentile(SelectPercentile(data, SelectPercentile.percentile=44, SelectPercentile.score_func=f_classif), SelectPercentile.percentile=54, SelectPercentile.score_func=f_classif), LogisticRegression.C=0.001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "BernoulliNB(SelectPercentile(SelectFwe(data, SelectFwe.alpha=0.031, SelectFwe.score_func=f_classif), SelectPercentile.percentile=44, SelectPercentile.score_func=f_classif), alpha=100.0, fit_prior=False)", "BernoulliNB(SelectPercentile(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized'), SelectPercentile.percentile=44, SelectPercentile.score_func=f_classif), alpha=10.0, fit_prior=False)", "LogisticRegression(StandardScaler(SelectPercentile(data, SelectPercentile.percentile=31, SelectPercentile.score_func=f_classif)), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(data), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Binarizer(SelectPercentile(data, SelectPercentile.percentile=31, SelectPercentile.score_func=f_classif), Binarizer.threshold=0.35000000000000003), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PCA(data, PCA.iterated_power=7, PCA.svd_solver='randomized'), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectPercentile(data, SelectPercentile.percentile=31, SelectPercentile.score_func=f_classif), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(SelectPercentile(data, SelectPercentile.percentile=31, SelectPercentile.score_func=f_classif), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.2, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(data, LogisticRegression.C=0.001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectPercentile(SelectPercentile(data, SelectPercentile.percentile=99, SelectPercentile.score_func=f_classif), SelectPercentile.percentile=50, SelectPercentile.score_func=f_classif), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectPercentile(data, SelectPercentile.percentile=50, SelectPercentile.score_func=f_classif), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectPercentile(data, SelectPercentile.percentile=43, SelectPercentile.score_func=f_classif), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MinMaxScaler(Binarizer(data, Binarizer.threshold=0.25)), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Binarizer(data, Binarizer.threshold=0.25), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MinMaxScaler(Normalizer(data, Normalizer.norm='l2')), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "RandomForestClassifier(SelectFwe(data, SelectFwe.alpha=0.003, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=17, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "LogisticRegression(MaxAbsScaler(data), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(data), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Binarizer(SelectFwe(data, SelectFwe.alpha=0.046, SelectFwe.score_func=f_classif), Binarizer.threshold=0.0), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(RobustScaler(data)), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(StandardScaler(data)), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Binarizer(data, Binarizer.threshold=0.0), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectFwe(data, SelectFwe.alpha=0.018000000000000002, SelectFwe.score_func=f_classif), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectFwe(data, SelectFwe.alpha=0.022, SelectFwe.score_func=f_classif), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Binarizer(data, Binarizer.threshold=0.9500000000000001), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Binarizer(data, Binarizer.threshold=0.05), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=11, RandomForestClassifier.min_samples_split=16, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=12, RandomForestClassifier.min_samples_split=13, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=12, RandomForestClassifier.min_samples_split=9, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(StandardScaler(data), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=12, RandomForestClassifier.min_samples_split=13, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RobustScaler(data), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=12, RandomForestClassifier.min_samples_split=13, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MinMaxScaler(data), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=12, RandomForestClassifier.min_samples_split=13, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RobustScaler(data), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=12, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(SelectPercentile(data, SelectPercentile.percentile=48, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.05, GradientBoostingClassifier.min_samples_leaf=11, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.2)", "LogisticRegression(StandardScaler(data), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Binarizer(data, Binarizer.threshold=0.1), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Binarizer(data, Binarizer.threshold=0.1), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PCA(data, PCA.iterated_power=2, PCA.svd_solver='randomized'), LogisticRegression.C=0.1, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MinMaxScaler(data), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PCA(data, PCA.iterated_power=2, PCA.svd_solver='randomized'), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PCA(Binarizer(data, Binarizer.threshold=0.1), PCA.iterated_power=2, PCA.svd_solver='randomized'), LogisticRegression.C=0.1, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectPercentile(data, SelectPercentile.percentile=54, SelectPercentile.score_func=f_classif), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=0.001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Binarizer(SelectFwe(data, SelectFwe.alpha=0.005, SelectFwe.score_func=f_classif), Binarizer.threshold=0.65), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Binarizer(RobustScaler(data), Binarizer.threshold=0.65), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Binarizer(data, Binarizer.threshold=0.65), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Binarizer(data, Binarizer.threshold=0.4), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Binarizer(Binarizer(data, Binarizer.threshold=0.8500000000000001), Binarizer.threshold=0.65), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(VarianceThreshold(data, VarianceThreshold.threshold=0.05), LogisticRegression.C=0.1, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectFwe(data, SelectFwe.alpha=0.017, SelectFwe.score_func=f_classif), LogisticRegression.C=0.1, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(data), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(data), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(data), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MaxAbsScaler(SelectFwe(data, SelectFwe.alpha=0.044, SelectFwe.score_func=f_classif)), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MaxAbsScaler(SelectFwe(data, SelectFwe.alpha=0.047, SelectFwe.score_func=f_classif)), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MinMaxScaler(MaxAbsScaler(data)), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MaxAbsScaler(MinMaxScaler(data)), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MaxAbsScaler(data), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MaxAbsScaler(SelectFwe(data, SelectFwe.alpha=0.047, SelectFwe.score_func=f_classif)), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=0.1, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(data), LogisticRegression.C=0.1, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MinMaxScaler(MaxAbsScaler(data)), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')"], "philippine": ["ExtraTreesClassifier(StandardScaler(RBFSampler(data, RBFSampler.gamma=0.8500000000000001)), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=12, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.55), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=18, RandomForestClassifier.min_samples_split=18, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(VarianceThreshold(data, VarianceThreshold.threshold=0.1), RBFSampler.gamma=0.5), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.05, GradientBoostingClassifier.min_samples_leaf=12, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.05)", "ExtraTreesClassifier(SelectPercentile(RBFSampler(data, RBFSampler.gamma=0.9), SelectPercentile.percentile=40, SelectPercentile.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=13, min_samples_split=13, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(SelectPercentile(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), SelectPercentile.percentile=40, SelectPercentile.score_func=f_classif), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.05, RandomForestClassifier.min_samples_leaf=17, RandomForestClassifier.min_samples_split=14, RandomForestClassifier.n_estimators=100)", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.55), LogisticRegression.C=0.001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=12, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(MaxAbsScaler(RBFSampler(data, RBFSampler.gamma=0.45)), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), alpha=0.001, fit_prior=True)", "RandomForestClassifier(RBFSampler(SelectFwe(data, SelectFwe.alpha=0.032, SelectFwe.score_func=f_classif), RBFSampler.gamma=0.35000000000000003), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=20, RandomForestClassifier.min_samples_split=14, RandomForestClassifier.n_estimators=100)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=2, min_samples_leaf=17, min_samples_split=16)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.65), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=2, min_samples_leaf=17, min_samples_split=7)", "RandomForestClassifier(RBFSampler(SelectFwe(data, SelectFwe.alpha=0.049, SelectFwe.score_func=f_classif), RBFSampler.gamma=0.35000000000000003), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=5, RandomForestClassifier.min_samples_split=6, RandomForestClassifier.n_estimators=100)", "GaussianNB(StandardScaler(RBFSampler(data, RBFSampler.gamma=0.9500000000000001)))", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.4, Nystroem.kernel='rbf', Nystroem.n_components=5), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=3, min_samples_leaf=13, min_samples_split=13)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.8), alpha=0.001, fit_prior=True)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=2, min_samples_leaf=9, min_samples_split=16)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.8), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=4, min_samples_leaf=17, min_samples_split=7)", "DecisionTreeClassifier(RBFSampler(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='complete'), RBFSampler.gamma=0.30000000000000004), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=4, min_samples_leaf=18, min_samples_split=12)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=10, RandomForestClassifier.n_estimators=100)", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.7000000000000001))", "GaussianNB(RBFSampler(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), RBFSampler.gamma=0.1))", "GaussianNB(RBFSampler(SelectFwe(data, SelectFwe.alpha=0.033, SelectFwe.score_func=f_classif), RBFSampler.gamma=0.7000000000000001))", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=1.0), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=7, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "GaussianNB(Nystroem(SelectFwe(data, SelectFwe.alpha=0.002, SelectFwe.score_func=f_classif), Nystroem.gamma=0.55, Nystroem.kernel='rbf', Nystroem.n_components=7))", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.5, Nystroem.kernel='sigmoid', Nystroem.n_components=7), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.5, Nystroem.kernel='rbf', Nystroem.n_components=1), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=7, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='polynomial', Nystroem.n_components=10), alpha=100.0, fit_prior=True)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='rbf', Nystroem.n_components=10), alpha=100.0, fit_prior=True)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=16, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(SelectFwe(data, SelectFwe.alpha=0.004, SelectFwe.score_func=f_classif), RBFSampler.gamma=0.30000000000000004), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=13, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(StandardScaler(RBFSampler(data, RBFSampler.gamma=0.25)), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=6, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.65), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=10, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(SelectFwe(data, SelectFwe.alpha=0.004, SelectFwe.score_func=f_classif), RBFSampler.gamma=0.30000000000000004), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=13, min_samples_split=18, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(RobustScaler(RobustScaler(data)), LogisticRegression.C=0.0001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GaussianNB(Nystroem(RobustScaler(data), Nystroem.gamma=0.6000000000000001, Nystroem.kernel='polynomial', Nystroem.n_components=6))", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.4), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=16, min_samples_split=18, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(RBFSampler(MaxAbsScaler(data), RBFSampler.gamma=0.9), alpha=0.1, fit_prior=False)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.5), alpha=100.0, fit_prior=False)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.55), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=5, min_samples_leaf=5, min_samples_split=4)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=3, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='laplacian', Nystroem.n_components=4), alpha=0.1, fit_prior=False)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='sigmoid', Nystroem.n_components=2), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=14, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='poly', Nystroem.n_components=6), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(SelectPercentile(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='rbf', Nystroem.n_components=3), SelectPercentile.percentile=53, SelectPercentile.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=3, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "GaussianNB(StandardScaler(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='rbf', Nystroem.n_components=6)))", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.2), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=4, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.9), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.55, min_samples_leaf=6, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(MaxAbsScaler(RBFSampler(data, RBFSampler.gamma=0.2)), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.1), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=11, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "DecisionTreeClassifier(RBFSampler(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='complete'), RBFSampler.gamma=0.5), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=7, min_samples_leaf=14, min_samples_split=4)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=11, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.4), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=4, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "DecisionTreeClassifier(Normalizer(RBFSampler(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='complete'), RBFSampler.gamma=0.5), Normalizer.norm='max'), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=7, min_samples_leaf=14, min_samples_split=4)", "ExtraTreesClassifier(Nystroem(SelectFwe(data, SelectFwe.alpha=0.034, SelectFwe.score_func=f_classif), Nystroem.gamma=0.30000000000000004, Nystroem.kernel='sigmoid', Nystroem.n_components=9), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=4, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "KNeighborsClassifier(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), KNeighborsClassifier.n_neighbors=21, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='uniform')", "ExtraTreesClassifier(RBFSampler(SelectFwe(data, SelectFwe.alpha=0.036000000000000004, SelectFwe.score_func=f_classif), RBFSampler.gamma=0.30000000000000004), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=7, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.9, Nystroem.kernel='linear', Nystroem.n_components=9), alpha=0.1, fit_prior=False)", "GaussianNB(StandardScaler(PCA(data, PCA.iterated_power=3, PCA.svd_solver='randomized')))", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.5), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=1, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "DecisionTreeClassifier(RBFSampler(SelectFwe(data, SelectFwe.alpha=0.044, SelectFwe.score_func=f_classif), RBFSampler.gamma=0.15000000000000002), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=3, min_samples_leaf=11, min_samples_split=14)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=12, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.35000000000000003)", "LogisticRegression(MaxAbsScaler(RBFSampler(data, RBFSampler.gamma=0.55)), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GaussianNB(RBFSampler(data, RBFSampler.gamma=1.0))", "ExtraTreesClassifier(RBFSampler(SelectFwe(data, SelectFwe.alpha=0.024, SelectFwe.score_func=f_classif), RBFSampler.gamma=0.2), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=4, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.05), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=11, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.30000000000000004, Nystroem.kernel='rbf', Nystroem.n_components=4), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=9, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.65, Nystroem.kernel='rbf', Nystroem.n_components=4), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.05, min_samples_leaf=4, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(FeatureAgglomeration(Normalizer(data, Normalizer.norm='l2'), FeatureAgglomeration.affinity='l2', FeatureAgglomeration.linkage='complete'), alpha=0.001, fit_prior=True)", "KNeighborsClassifier(RBFSampler(data, RBFSampler.gamma=0.2), KNeighborsClassifier.n_neighbors=5, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='uniform')", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=19, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(StandardScaler(RBFSampler(data, RBFSampler.gamma=0.65)), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=11, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.65), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=11, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(FastICA(RBFSampler(data, RBFSampler.gamma=0.65), FastICA.tol=0.05, FastICA.whiten='unit-variance'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=13, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "KNeighborsClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), KNeighborsClassifier.n_neighbors=26, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='distance')", "BernoulliNB(FeatureAgglomeration(MaxAbsScaler(data), FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='average'), alpha=1.0, fit_prior=True)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.55, Nystroem.kernel='sigmoid', Nystroem.n_components=6), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.65, Nystroem.kernel='sigmoid', Nystroem.n_components=8), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=2, min_samples_split=16)", "GradientBoostingClassifier(Nystroem(SelectPercentile(data, SelectPercentile.percentile=43, SelectPercentile.score_func=f_classif), Nystroem.gamma=0.8, Nystroem.kernel='sigmoid', Nystroem.n_components=8), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "BernoulliNB(RBFSampler(PCA(data, PCA.iterated_power=4, PCA.svd_solver='randomized'), RBFSampler.gamma=0.9), alpha=100.0, fit_prior=False)", "KNeighborsClassifier(MinMaxScaler(RBFSampler(data, RBFSampler.gamma=0.05)), KNeighborsClassifier.n_neighbors=45, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='uniform')", "DecisionTreeClassifier(Normalizer(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), Normalizer.norm='l2'), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=17, min_samples_split=6)", "GaussianNB(MaxAbsScaler(RBFSampler(data, RBFSampler.gamma=0.75)))", "KNeighborsClassifier(Nystroem(data, Nystroem.gamma=0.2, Nystroem.kernel='sigmoid', Nystroem.n_components=5), KNeighborsClassifier.n_neighbors=35, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='uniform')", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.4, Nystroem.kernel='sigmoid', Nystroem.n_components=7), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=13, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "MultinomialNB(Nystroem(data, Nystroem.gamma=0.55, Nystroem.kernel='rbf', Nystroem.n_components=4), alpha=0.01, fit_prior=True)", "GradientBoostingClassifier(Binarizer(SelectPercentile(data, SelectPercentile.percentile=1, SelectPercentile.score_func=f_classif), Binarizer.threshold=0.30000000000000004), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.9), alpha=100.0, fit_prior=False)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.25), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=5, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)"], "first-order-theorem-proving": ["RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=9, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(MaxAbsScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=6, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=6, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=9, RandomForestClassifier.min_samples_split=17, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(RobustScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=6, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RobustScaler(MaxAbsScaler(data)), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=6, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MaxAbsScaler(StandardScaler(data)), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=6, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=6, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.6500000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=6, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MaxAbsScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=6, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=10, RandomForestClassifier.min_samples_split=6, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RobustScaler(MinMaxScaler(data)), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=10, RandomForestClassifier.min_samples_split=19, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=5, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=10, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MinMaxScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=10, RandomForestClassifier.min_samples_split=6, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.2), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=7, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(RobustScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=10, RandomForestClassifier.min_samples_split=19, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(StandardScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=5, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(RobustScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=10, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(MaxAbsScaler(MinMaxScaler(data)), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=7, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(MinMaxScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=9, RandomForestClassifier.min_samples_split=17, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MinMaxScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=8, RandomForestClassifier.min_samples_split=17, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MinMaxScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=9, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MinMaxScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=11, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=8, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=8, RandomForestClassifier.min_samples_split=20, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MinMaxScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=11, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=20, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MinMaxScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=8, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=8, RandomForestClassifier.min_samples_split=16, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(StandardScaler(MaxAbsScaler(data)), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=5, RandomForestClassifier.min_samples_split=19, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MaxAbsScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=9, RandomForestClassifier.min_samples_split=15, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.25), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=8, RandomForestClassifier.min_samples_split=6, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(StandardScaler(MinMaxScaler(data)), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(StandardScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=8, RandomForestClassifier.min_samples_split=19, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=8, RandomForestClassifier.min_samples_split=19, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(StandardScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=8, RandomForestClassifier.min_samples_split=19, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.1), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=4, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.25), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.2, min_samples_leaf=4, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(MinMaxScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=12, RandomForestClassifier.min_samples_split=9, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(RobustScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.2, min_samples_leaf=4, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(StandardScaler(MaxAbsScaler(data)), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.2, min_samples_leaf=4, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MinMaxScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.2, min_samples_leaf=4, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.2, min_samples_leaf=4, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=12, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.1), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.2, min_samples_leaf=4, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MinMaxScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.2, min_samples_leaf=4, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(MaxAbsScaler(MinMaxScaler(data)), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=6, RandomForestClassifier.min_samples_split=14, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7000000000000001)", "RandomForestClassifier(MaxAbsScaler(data), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=6, RandomForestClassifier.min_samples_split=15, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.6500000000000001), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=6, RandomForestClassifier.min_samples_split=14, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(StandardScaler(data), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=6, RandomForestClassifier.min_samples_split=15, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.8500000000000001, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7000000000000001)", "RandomForestClassifier(MaxAbsScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=6, RandomForestClassifier.min_samples_split=16, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.6500000000000001), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=1.0, RandomForestClassifier.min_samples_leaf=6, RandomForestClassifier.min_samples_split=15, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MaxAbsScaler(data), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=5, RandomForestClassifier.min_samples_split=20, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MaxAbsScaler(data), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=5, RandomForestClassifier.min_samples_split=20, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MinMaxScaler(data), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.8500000000000001, RandomForestClassifier.min_samples_leaf=7, RandomForestClassifier.min_samples_split=17, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=7, min_samples_split=19, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=6, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.6000000000000001, RandomForestClassifier.min_samples_leaf=12, RandomForestClassifier.min_samples_split=17, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RobustScaler(data), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.8500000000000001, RandomForestClassifier.min_samples_leaf=7, RandomForestClassifier.min_samples_split=17, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.5), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=7, min_samples_split=19, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(MaxAbsScaler(RobustScaler(data)), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=9, RandomForestClassifier.min_samples_split=11, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=7, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(RobustScaler(data), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.7000000000000001, RandomForestClassifier.min_samples_leaf=9, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.8500000000000001, RandomForestClassifier.min_samples_leaf=8, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MinMaxScaler(data), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=17, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=6, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=17, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RobustScaler(StandardScaler(data)), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=17, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=5, RandomForestClassifier.min_samples_split=17, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.6000000000000001, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=14, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(RobustScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=6, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.6000000000000001, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=17, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=5, RandomForestClassifier.min_samples_split=17, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=17, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(VarianceThreshold(SelectFwe(data, SelectFwe.alpha=0.011, SelectFwe.score_func=f_classif), VarianceThreshold.threshold=0.3), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=5, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.25), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=5, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectFwe(data, SelectFwe.alpha=0.011, SelectFwe.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=5, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.55), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=4, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(StandardScaler(data), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=7, RandomForestClassifier.min_samples_split=18, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.2), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "ExtraTreesClassifier(StandardScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=5, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(StandardScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=7, RandomForestClassifier.min_samples_split=16, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.55), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=7, RandomForestClassifier.min_samples_split=18, RandomForestClassifier.n_estimators=100)"], "cnae-9": ["MultinomialNB(Normalizer(data, Normalizer.norm='l2'), alpha=0.01, fit_prior=False)", "MultinomialNB(Normalizer(data, Normalizer.norm='l2'), alpha=0.01, fit_prior=True)", "MultinomialNB(SelectPercentile(Normalizer(data, Normalizer.norm='l2'), SelectPercentile.percentile=34, SelectPercentile.score_func=f_classif), alpha=0.01, fit_prior=True)", "BernoulliNB(SelectPercentile(Binarizer(data, Binarizer.threshold=0.55), SelectPercentile.percentile=35, SelectPercentile.score_func=f_classif), alpha=0.1, fit_prior=False)", "BernoulliNB(SelectPercentile(RobustScaler(data), SelectPercentile.percentile=35, SelectPercentile.score_func=f_classif), alpha=0.1, fit_prior=False)", "BernoulliNB(SelectPercentile(data, SelectPercentile.percentile=35, SelectPercentile.score_func=f_classif), alpha=0.1, fit_prior=False)", "BernoulliNB(MaxAbsScaler(SelectPercentile(data, SelectPercentile.percentile=35, SelectPercentile.score_func=f_classif)), alpha=0.1, fit_prior=False)", "LogisticRegression(RobustScaler(data), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(RobustScaler(data)), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "MultinomialNB(SelectPercentile(Normalizer(data, Normalizer.norm='max'), SelectPercentile.percentile=74, SelectPercentile.score_func=f_classif), alpha=0.1, fit_prior=True)", "MultinomialNB(Binarizer(SelectPercentile(data, SelectPercentile.percentile=73, SelectPercentile.score_func=f_classif), Binarizer.threshold=0.8), alpha=0.1, fit_prior=False)", "BernoulliNB(SelectPercentile(data, SelectPercentile.percentile=74, SelectPercentile.score_func=f_classif), alpha=0.1, fit_prior=False)", "BernoulliNB(SelectPercentile(Normalizer(data, Normalizer.norm='max'), SelectPercentile.percentile=74, SelectPercentile.score_func=f_classif), alpha=0.1, fit_prior=True)", "BernoulliNB(SelectPercentile(data, SelectPercentile.percentile=74, SelectPercentile.score_func=f_classif), alpha=0.1, fit_prior=True)", "BernoulliNB(Binarizer(SelectPercentile(data, SelectPercentile.percentile=74, SelectPercentile.score_func=f_classif), Binarizer.threshold=0.7000000000000001), alpha=0.1, fit_prior=True)", "BernoulliNB(Normalizer(SelectPercentile(data, SelectPercentile.percentile=74, SelectPercentile.score_func=f_classif), Normalizer.norm='max'), alpha=0.1, fit_prior=True)", "BernoulliNB(StandardScaler(SelectPercentile(data, SelectPercentile.percentile=74, SelectPercentile.score_func=f_classif)), alpha=0.1, fit_prior=True)", "BernoulliNB(SelectPercentile(data, SelectPercentile.percentile=73, SelectPercentile.score_func=f_classif), alpha=0.1, fit_prior=False)", "BernoulliNB(Binarizer(SelectPercentile(data, SelectPercentile.percentile=73, SelectPercentile.score_func=f_classif), Binarizer.threshold=0.15000000000000002), alpha=0.1, fit_prior=False)", "MultinomialNB(SelectPercentile(Normalizer(data, Normalizer.norm='max'), SelectPercentile.percentile=77, SelectPercentile.score_func=f_classif), alpha=0.1, fit_prior=True)", "MultinomialNB(SelectPercentile(data, SelectPercentile.percentile=34, SelectPercentile.score_func=f_classif), alpha=0.1, fit_prior=False)", "MultinomialNB(SelectPercentile(data, SelectPercentile.percentile=34, SelectPercentile.score_func=f_classif), alpha=0.1, fit_prior=True)", "MultinomialNB(SelectPercentile(Binarizer(data, Binarizer.threshold=0.9), SelectPercentile.percentile=33, SelectPercentile.score_func=f_classif), alpha=0.1, fit_prior=False)", "MultinomialNB(SelectPercentile(Binarizer(data, Binarizer.threshold=0.9), SelectPercentile.percentile=33, SelectPercentile.score_func=f_classif), alpha=0.1, fit_prior=True)", "MultinomialNB(SelectPercentile(data, SelectPercentile.percentile=33, SelectPercentile.score_func=f_classif), alpha=0.1, fit_prior=False)", "MultinomialNB(SelectPercentile(data, SelectPercentile.percentile=33, SelectPercentile.score_func=f_classif), alpha=0.1, fit_prior=True)", "MultinomialNB(SelectPercentile(RobustScaler(data), SelectPercentile.percentile=33, SelectPercentile.score_func=f_classif), alpha=0.1, fit_prior=True)", "BernoulliNB(SelectPercentile(Binarizer(data, Binarizer.threshold=0.9), SelectPercentile.percentile=33, SelectPercentile.score_func=f_classif), alpha=0.1, fit_prior=False)", "MultinomialNB(Normalizer(data, Normalizer.norm='max'), alpha=0.1, fit_prior=False)", "MultinomialNB(Normalizer(RobustScaler(data), Normalizer.norm='max'), alpha=0.1, fit_prior=True)", "LogisticRegression(SelectPercentile(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized'), SelectPercentile.percentile=48, SelectPercentile.score_func=f_classif), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectPercentile(data, SelectPercentile.percentile=86, SelectPercentile.score_func=f_classif), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectPercentile(data, SelectPercentile.percentile=75, SelectPercentile.score_func=f_classif), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectPercentile(data, SelectPercentile.percentile=86, SelectPercentile.score_func=f_classif), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PCA(SelectPercentile(data, SelectPercentile.percentile=86, SelectPercentile.score_func=f_classif), PCA.iterated_power=7, PCA.svd_solver='randomized'), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectPercentile(data, SelectPercentile.percentile=75, SelectPercentile.score_func=f_classif), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectPercentile(PCA(data, PCA.iterated_power=3, PCA.svd_solver='randomized'), SelectPercentile.percentile=57, SelectPercentile.score_func=f_classif), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectPercentile(data, SelectPercentile.percentile=86, SelectPercentile.score_func=f_classif), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "BernoulliNB(SelectPercentile(Normalizer(data, Normalizer.norm='l1'), SelectPercentile.percentile=33, SelectPercentile.score_func=f_classif), alpha=0.1, fit_prior=True)", "MultinomialNB(SelectPercentile(Normalizer(data, Normalizer.norm='max'), SelectPercentile.percentile=80, SelectPercentile.score_func=f_classif), alpha=0.1, fit_prior=True)", "MultinomialNB(Normalizer(SelectPercentile(data, SelectPercentile.percentile=73, SelectPercentile.score_func=f_classif), Normalizer.norm='max'), alpha=0.1, fit_prior=False)", "MultinomialNB(SelectPercentile(Normalizer(data, Normalizer.norm='max'), SelectPercentile.percentile=78, SelectPercentile.score_func=f_classif), alpha=0.1, fit_prior=False)", "MultinomialNB(Normalizer(SelectPercentile(data, SelectPercentile.percentile=80, SelectPercentile.score_func=f_classif), Normalizer.norm='max'), alpha=0.1, fit_prior=True)", "MultinomialNB(Normalizer(SelectPercentile(data, SelectPercentile.percentile=67, SelectPercentile.score_func=f_classif), Normalizer.norm='max'), alpha=0.1, fit_prior=True)", "MultinomialNB(Normalizer(SelectPercentile(data, SelectPercentile.percentile=95, SelectPercentile.score_func=f_classif), Normalizer.norm='max'), alpha=0.1, fit_prior=False)", "MultinomialNB(Normalizer(data, Normalizer.norm='max'), alpha=0.1, fit_prior=False)", "MultinomialNB(RobustScaler(Normalizer(data, Normalizer.norm='max')), alpha=0.1, fit_prior=False)", "MultinomialNB(Normalizer(RobustScaler(data), Normalizer.norm='max'), alpha=0.1, fit_prior=False)", "MultinomialNB(Normalizer(Normalizer(data, Normalizer.norm='l2'), Normalizer.norm='max'), alpha=0.1, fit_prior=False)", "BernoulliNB(SelectPercentile(data, SelectPercentile.percentile=77, SelectPercentile.score_func=f_classif), alpha=0.1, fit_prior=False)", "BernoulliNB(SelectPercentile(data, SelectPercentile.percentile=77, SelectPercentile.score_func=f_classif), alpha=0.1, fit_prior=True)", "MultinomialNB(Binarizer(data, Binarizer.threshold=0.5), alpha=0.1, fit_prior=False)", "MultinomialNB(Binarizer(data, Binarizer.threshold=0.25), alpha=0.1, fit_prior=False)", "MultinomialNB(Binarizer(RobustScaler(data), Binarizer.threshold=0.5), alpha=0.1, fit_prior=False)", "MultinomialNB(Binarizer(data, Binarizer.threshold=0.15000000000000002), alpha=0.1, fit_prior=False)", "MultinomialNB(RobustScaler(Binarizer(data, Binarizer.threshold=0.5)), alpha=0.1, fit_prior=True)", "MultinomialNB(Binarizer(StandardScaler(data), Binarizer.threshold=0.25), alpha=0.1, fit_prior=True)", "MultinomialNB(Binarizer(data, Binarizer.threshold=0.15000000000000002), alpha=0.1, fit_prior=True)", "MultinomialNB(Binarizer(data, Binarizer.threshold=0.25), alpha=0.1, fit_prior=True)", "MultinomialNB(Normalizer(SelectPercentile(data, SelectPercentile.percentile=72, SelectPercentile.score_func=f_classif), Normalizer.norm='max'), alpha=0.1, fit_prior=True)", "MultinomialNB(Normalizer(SelectPercentile(data, SelectPercentile.percentile=65, SelectPercentile.score_func=f_classif), Normalizer.norm='max'), alpha=0.1, fit_prior=True)", "MultinomialNB(Normalizer(data, Normalizer.norm='max'), alpha=0.1, fit_prior=False)", "MultinomialNB(Normalizer(Normalizer(data, Normalizer.norm='max'), Normalizer.norm='max'), alpha=0.1, fit_prior=False)", "MultinomialNB(Normalizer(RobustScaler(data), Normalizer.norm='max'), alpha=0.1, fit_prior=False)", "MultinomialNB(Normalizer(RobustScaler(data), Normalizer.norm='max'), alpha=0.1, fit_prior=True)", "MultinomialNB(Normalizer(data, Normalizer.norm='max'), alpha=0.1, fit_prior=True)", "MultinomialNB(Normalizer(Normalizer(data, Normalizer.norm='l2'), Normalizer.norm='max'), alpha=0.1, fit_prior=True)", "MultinomialNB(Normalizer(data, Normalizer.norm='l2'), alpha=0.01, fit_prior=False)", "MultinomialNB(Normalizer(Normalizer(data, Normalizer.norm='l1'), Normalizer.norm='l2'), alpha=0.01, fit_prior=False)", "MultinomialNB(SelectPercentile(Binarizer(data, Binarizer.threshold=0.35000000000000003), SelectPercentile.percentile=75, SelectPercentile.score_func=f_classif), alpha=0.1, fit_prior=False)", "MultinomialNB(Binarizer(SelectPercentile(data, SelectPercentile.percentile=72, SelectPercentile.score_func=f_classif), Binarizer.threshold=0.0), alpha=0.1, fit_prior=False)", "LogisticRegression(SelectPercentile(data, SelectPercentile.percentile=75, SelectPercentile.score_func=f_classif), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectPercentile(Binarizer(data, Binarizer.threshold=0.5), SelectPercentile.percentile=73, SelectPercentile.score_func=f_classif), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectPercentile(data, SelectPercentile.percentile=73, SelectPercentile.score_func=f_classif), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectPercentile(data, SelectPercentile.percentile=74, SelectPercentile.score_func=f_classif), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectPercentile(data, SelectPercentile.percentile=78, SelectPercentile.score_func=f_classif), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PCA(data, PCA.iterated_power=4, PCA.svd_solver='randomized'), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PCA(data, PCA.iterated_power=3, PCA.svd_solver='randomized'), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "MultinomialNB(Normalizer(data, Normalizer.norm='max'), alpha=0.1, fit_prior=False)", "LogisticRegression(Normalizer(SelectPercentile(data, SelectPercentile.percentile=59, SelectPercentile.score_func=f_classif), Normalizer.norm='max'), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectPercentile(data, SelectPercentile.percentile=75, SelectPercentile.score_func=f_classif), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Normalizer(Normalizer(data, Normalizer.norm='l1'), Normalizer.norm='max'), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Normalizer(data, Normalizer.norm='max'), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized'), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PCA(data, PCA.iterated_power=10, PCA.svd_solver='randomized'), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PCA(data, PCA.iterated_power=7, PCA.svd_solver='randomized'), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PCA(data, PCA.iterated_power=3, PCA.svd_solver='randomized'), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')"], "steel-plates-fault": ["RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=9, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MinMaxScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=9, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=13, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=9, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=13, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=14, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(StandardScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=13, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(data, SelectFwe.alpha=0.008, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=12, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=10, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.35000000000000003), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.15000000000000002), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectFwe(data, SelectFwe.alpha=0.033, SelectFwe.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectFwe(data, SelectFwe.alpha=0.01, SelectFwe.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=11, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectFwe(data, SelectFwe.alpha=0.003, SelectFwe.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.2), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.5), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(StandardScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.1), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.8500000000000001, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(SelectFwe(data, SelectFwe.alpha=0.042, SelectFwe.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.9500000000000001, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=1, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=1, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=1, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.2), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=1, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RobustScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=1, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectFwe(data, SelectFwe.alpha=0.038, SelectFwe.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=1, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.05), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=1, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=1, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(RobustScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.8500000000000001, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.8500000000000001, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=13, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(RobustScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.8500000000000001, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(SelectFwe(data, SelectFwe.alpha=0.047, SelectFwe.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.8500000000000001, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(SelectFwe(data, SelectFwe.alpha=0.046, SelectFwe.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.8500000000000001, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(MinMaxScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.8500000000000001, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(SelectFwe(VarianceThreshold(data, VarianceThreshold.threshold=0.15000000000000002), SelectFwe.alpha=0.046, SelectFwe.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.8500000000000001, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.8500000000000001, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(SelectFwe(MinMaxScaler(data), SelectFwe.alpha=0.046, SelectFwe.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.8500000000000001, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.1), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.15000000000000002), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(RobustScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(MinMaxScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(StandardScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.8500000000000001, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.8500000000000001, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.8500000000000001, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=1, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectFwe(data, SelectFwe.alpha=0.032, SelectFwe.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=1, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.2), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=1, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=1, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=1, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=1, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=1, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=1, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectFwe(data, SelectFwe.alpha=0.02, SelectFwe.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=1, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.15000000000000002), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectFwe(data, SelectFwe.alpha=0.019, SelectFwe.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=2, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MinMaxScaler(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False)), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=1, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectFwe(data, SelectFwe.alpha=0.009000000000000001, SelectFwe.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(StandardScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(StandardScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)"], "Internet-Advertisements": ["LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.0), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.65, Nystroem.kernel='sigmoid', Nystroem.n_components=8), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.0), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.3)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='laplacian', Nystroem.n_components=1), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=11, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.8), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=3, min_samples_leaf=13, min_samples_split=13)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.8, Nystroem.kernel='rbf', Nystroem.n_components=6), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.8500000000000001, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "RandomForestClassifier(Binarizer(data, Binarizer.threshold=0.75), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=8, RandomForestClassifier.min_samples_split=19, RandomForestClassifier.n_estimators=100)", "GaussianNB(Binarizer(data, Binarizer.threshold=0.7000000000000001))", "RandomForestClassifier(Binarizer(data, Binarizer.threshold=0.4), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=10, RandomForestClassifier.n_estimators=100)", "BernoulliNB(data, alpha=0.1, fit_prior=True)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='laplacian', Nystroem.n_components=4), alpha=0.1, fit_prior=False)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.30000000000000004, Nystroem.kernel='sigmoid', Nystroem.n_components=10), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=6, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(Normalizer(data, Normalizer.norm='l2'), alpha=100.0, fit_prior=True)", "BernoulliNB(data, alpha=100.0, fit_prior=True)", "LogisticRegression(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='poly', Nystroem.n_components=6), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(SelectPercentile(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='sigmoid', Nystroem.n_components=10), SelectPercentile.percentile=91, SelectPercentile.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=6, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='sigmoid', Nystroem.n_components=2), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=6, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(Nystroem(data, Nystroem.gamma=0.1, Nystroem.kernel='sigmoid', Nystroem.n_components=4), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.8, Nystroem.kernel='rbf', Nystroem.n_components=2), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=6, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='rbf', Nystroem.n_components=7), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=19, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "KNeighborsClassifier(RBFSampler(VarianceThreshold(data, VarianceThreshold.threshold=0.7500000000000001), RBFSampler.gamma=0.0), KNeighborsClassifier.n_neighbors=8, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='distance')", "BernoulliNB(data, alpha=100.0, fit_prior=True)", "KNeighborsClassifier(RBFSampler(StandardScaler(data), RBFSampler.gamma=0.0), KNeighborsClassifier.n_neighbors=8, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='distance')", "KNeighborsClassifier(Binarizer(data, Binarizer.threshold=0.1), KNeighborsClassifier.n_neighbors=4, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='uniform')", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.8, Nystroem.kernel='laplacian', Nystroem.n_components=4), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=8, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "DecisionTreeClassifier(RBFSampler(RBFSampler(data, RBFSampler.gamma=0.4), RBFSampler.gamma=0.15000000000000002), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=3, min_samples_leaf=11, min_samples_split=14)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.9500000000000001, Nystroem.kernel='rbf', Nystroem.n_components=8), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "BernoulliNB(FeatureAgglomeration(Normalizer(data, Normalizer.norm='l2'), FeatureAgglomeration.affinity='l2', FeatureAgglomeration.linkage='complete'), alpha=0.001, fit_prior=True)", "RandomForestClassifier(StandardScaler(Binarizer(data, Binarizer.threshold=0.5)), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.9500000000000001, RandomForestClassifier.min_samples_leaf=9, RandomForestClassifier.min_samples_split=20, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(Binarizer(data, Binarizer.threshold=0.30000000000000004), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.55)", "GaussianNB(PCA(FastICA(data, FastICA.tol=0.6000000000000001, FastICA.whiten='unit-variance'), PCA.iterated_power=2, PCA.svd_solver='randomized'))", "MultinomialNB(Nystroem(data, Nystroem.gamma=0.8500000000000001, Nystroem.kernel='laplacian', Nystroem.n_components=1), alpha=1.0, fit_prior=True)", "GradientBoostingClassifier(Nystroem(SelectPercentile(data, SelectPercentile.percentile=43, SelectPercentile.score_func=f_classif), Nystroem.gamma=0.8, Nystroem.kernel='sigmoid', Nystroem.n_components=8), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "MultinomialNB(Nystroem(SelectPercentile(data, SelectPercentile.percentile=21, SelectPercentile.score_func=f_classif), Nystroem.gamma=0.9500000000000001, Nystroem.kernel='chi2', Nystroem.n_components=1), alpha=100.0, fit_prior=True)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.0), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.05, RandomForestClassifier.min_samples_leaf=7, RandomForestClassifier.min_samples_split=12, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(FeatureAgglomeration(RBFSampler(data, RBFSampler.gamma=0.0), FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='average'), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=7, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "BernoulliNB(MinMaxScaler(data), alpha=100.0, fit_prior=False)", "MultinomialNB(Nystroem(Normalizer(data, Normalizer.norm='l2'), Nystroem.gamma=0.9500000000000001, Nystroem.kernel='chi2', Nystroem.n_components=1), alpha=100.0, fit_prior=True)", "GaussianNB(Nystroem(FastICA(data, FastICA.tol=0.1, FastICA.whiten='unit-variance'), Nystroem.gamma=0.65, Nystroem.kernel='laplacian', Nystroem.n_components=9))", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='rbf', Nystroem.n_components=1), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=11, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "MultinomialNB(Normalizer(data, Normalizer.norm='l1'), alpha=100.0, fit_prior=True)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.25, Nystroem.kernel='sigmoid', Nystroem.n_components=7), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=11, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "BernoulliNB(RobustScaler(data), alpha=100.0, fit_prior=False)", "BernoulliNB(SelectFwe(data, SelectFwe.alpha=0.001, SelectFwe.score_func=f_classif), alpha=100.0, fit_prior=True)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.45, Nystroem.kernel='sigmoid', Nystroem.n_components=7), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=6, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Binarizer(data, Binarizer.threshold=0.65), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=6, RandomForestClassifier.min_samples_split=19, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RobustScaler(Binarizer(data, Binarizer.threshold=0.65)), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.8500000000000001, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(Binarizer(data, Binarizer.threshold=0.6000000000000001), SelectFwe.alpha=0.04, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.8, RandomForestClassifier.min_samples_leaf=19, RandomForestClassifier.min_samples_split=12, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Binarizer(data, Binarizer.threshold=0.55), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=6, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "LogisticRegression(StandardScaler(Binarizer(data, Binarizer.threshold=0.5)), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "BernoulliNB(data, alpha=10.0, fit_prior=False)", "BernoulliNB(data, alpha=100.0, fit_prior=False)", "GradientBoostingClassifier(StandardScaler(data), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=12, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='rbf', Nystroem.n_components=8), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=13, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='ward'), alpha=10.0, fit_prior=False)", "BernoulliNB(SelectPercentile(data, SelectPercentile.percentile=5, SelectPercentile.score_func=f_classif), alpha=0.01, fit_prior=False)", "BernoulliNB(SelectPercentile(data, SelectPercentile.percentile=83, SelectPercentile.score_func=f_classif), alpha=0.1, fit_prior=True)", "BernoulliNB(data, alpha=1.0, fit_prior=True)", "BernoulliNB(SelectPercentile(data, SelectPercentile.percentile=50, SelectPercentile.score_func=f_classif), alpha=0.1, fit_prior=True)", "BernoulliNB(MaxAbsScaler(data), alpha=0.001, fit_prior=True)", "MultinomialNB(Normalizer(data, Normalizer.norm='l1'), alpha=1.0, fit_prior=True)", "MultinomialNB(Normalizer(data, Normalizer.norm='l2'), alpha=10.0, fit_prior=False)", "BernoulliNB(Binarizer(data, Binarizer.threshold=0.6000000000000001), alpha=10.0, fit_prior=False)", "BernoulliNB(MinMaxScaler(data), alpha=100.0, fit_prior=True)", "BernoulliNB(data, alpha=10.0, fit_prior=False)", "BernoulliNB(RobustScaler(data), alpha=100.0, fit_prior=False)", "GradientBoostingClassifier(PCA(Nystroem(data, Nystroem.gamma=0.05, Nystroem.kernel='sigmoid', Nystroem.n_components=8), PCA.iterated_power=8, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.0), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=13, RandomForestClassifier.min_samples_split=9, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.15000000000000002, Nystroem.kernel='sigmoid', Nystroem.n_components=2), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "BernoulliNB(MinMaxScaler(data), alpha=100.0, fit_prior=False)", "MultinomialNB(MinMaxScaler(Binarizer(data, Binarizer.threshold=0.55)), alpha=10.0, fit_prior=False)", "BernoulliNB(MaxAbsScaler(data), alpha=100.0, fit_prior=True)", "KNeighborsClassifier(Binarizer(Normalizer(data, Normalizer.norm='max'), Binarizer.threshold=1.0), KNeighborsClassifier.n_neighbors=46, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='uniform')", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.9500000000000001, Nystroem.kernel='laplacian', Nystroem.n_components=3), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=4, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(Binarizer(data, Binarizer.threshold=0.6000000000000001), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=13, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=3, min_samples_leaf=17, min_samples_split=4)", "DecisionTreeClassifier(Binarizer(data, Binarizer.threshold=0.7000000000000001), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=17, min_samples_split=6)", "GradientBoostingClassifier(Binarizer(data, Binarizer.threshold=0.30000000000000004), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "RandomForestClassifier(Binarizer(data, Binarizer.threshold=0.30000000000000004), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=20, RandomForestClassifier.n_estimators=100)", "DecisionTreeClassifier(Binarizer(data, Binarizer.threshold=0.5), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=3, min_samples_leaf=17, min_samples_split=4)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='rbf', Nystroem.n_components=10), alpha=100.0, fit_prior=True)", "BernoulliNB(data, alpha=10.0, fit_prior=False)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='rbf', Nystroem.n_components=10), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.05, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=15, RandomForestClassifier.n_estimators=100)", "BernoulliNB(StandardScaler(data), alpha=100.0, fit_prior=True)", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.4, Nystroem.kernel='sigmoid', Nystroem.n_components=8), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=5, min_samples_leaf=7, min_samples_split=10)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=2, min_samples_leaf=2, min_samples_split=14)", "GradientBoostingClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.7500000000000001), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.5, Nystroem.kernel='rbf', Nystroem.n_components=1), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=10, RandomForestClassifier.min_samples_split=11, RandomForestClassifier.n_estimators=100)", "LogisticRegression(Binarizer(data, Binarizer.threshold=0.75), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GradientBoostingClassifier(RobustScaler(Binarizer(data, Binarizer.threshold=0.30000000000000004)), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.6000000000000001, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.5)"], "covertype": ["DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=10, min_samples_leaf=18, min_samples_split=17)", "DecisionTreeClassifier(RobustScaler(data), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=9, min_samples_leaf=18, min_samples_split=17)", "DecisionTreeClassifier(MaxAbsScaler(RobustScaler(data)), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=9, min_samples_leaf=18, min_samples_split=17)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=8, min_samples_leaf=13, min_samples_split=11)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=8, min_samples_leaf=3, min_samples_split=11)", "DecisionTreeClassifier(MaxAbsScaler(data), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=8, min_samples_leaf=20, min_samples_split=11)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=8, min_samples_leaf=20, min_samples_split=11)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=8, min_samples_leaf=19, min_samples_split=11)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=8, min_samples_leaf=2, min_samples_split=11)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=7, min_samples_leaf=13, min_samples_split=17)", "DecisionTreeClassifier(MaxAbsScaler(data), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=10, min_samples_leaf=19, min_samples_split=14)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=10, min_samples_leaf=19, min_samples_split=10)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=10, min_samples_leaf=19, min_samples_split=18)", "DecisionTreeClassifier(SelectFwe(SelectFwe(data, SelectFwe.alpha=0.032, SelectFwe.score_func=f_classif), SelectFwe.alpha=0.001, SelectFwe.score_func=f_classif), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=10, min_samples_leaf=19, min_samples_split=10)", "DecisionTreeClassifier(SelectFwe(RobustScaler(SelectFwe(data, SelectFwe.alpha=0.032, SelectFwe.score_func=f_classif)), SelectFwe.alpha=0.001, SelectFwe.score_func=f_classif), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=10, min_samples_leaf=19, min_samples_split=10)", "DecisionTreeClassifier(MaxAbsScaler(data), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=10, min_samples_leaf=19, min_samples_split=8)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=10, min_samples_leaf=19, min_samples_split=14)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=10, min_samples_leaf=17, min_samples_split=9)", "DecisionTreeClassifier(MaxAbsScaler(MaxAbsScaler(data)), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=10, min_samples_leaf=15, min_samples_split=14)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=10, min_samples_leaf=15, min_samples_split=10)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=10, min_samples_leaf=4, min_samples_split=15)", "DecisionTreeClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.35000000000000003), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=10, min_samples_leaf=4, min_samples_split=15)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=8, min_samples_leaf=6, min_samples_split=15)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=7, min_samples_leaf=6, min_samples_split=15)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=7, min_samples_leaf=19, min_samples_split=15)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=5, min_samples_leaf=4, min_samples_split=15)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=5, min_samples_leaf=6, min_samples_split=15)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=5, min_samples_leaf=4, min_samples_split=15)", "DecisionTreeClassifier(SelectFwe(data, SelectFwe.alpha=0.001, SelectFwe.score_func=f_classif), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=4, min_samples_leaf=6, min_samples_split=15)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=4, min_samples_leaf=6, min_samples_split=15)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=10, min_samples_leaf=8, min_samples_split=5)", "DecisionTreeClassifier(SelectFwe(data, SelectFwe.alpha=0.037, SelectFwe.score_func=f_classif), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=9, min_samples_leaf=12, min_samples_split=4)", "DecisionTreeClassifier(SelectFwe(data, SelectFwe.alpha=0.037, SelectFwe.score_func=f_classif), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=9, min_samples_leaf=14, min_samples_split=4)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=9, min_samples_leaf=12, min_samples_split=4)", "DecisionTreeClassifier(SelectFwe(data, SelectFwe.alpha=0.026000000000000002, SelectFwe.score_func=f_classif), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=9, min_samples_leaf=8, min_samples_split=8)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=9, min_samples_leaf=8, min_samples_split=8)", "DecisionTreeClassifier(SelectFwe(data, SelectFwe.alpha=0.037, SelectFwe.score_func=f_classif), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=8, min_samples_leaf=12, min_samples_split=4)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=8, min_samples_leaf=8, min_samples_split=8)", "DecisionTreeClassifier(SelectFwe(data, SelectFwe.alpha=0.033, SelectFwe.score_func=f_classif), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=8, min_samples_leaf=8, min_samples_split=7)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=8, min_samples_leaf=8, min_samples_split=19)", "DecisionTreeClassifier(SelectPercentile(data, SelectPercentile.percentile=44, SelectPercentile.score_func=f_classif), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=10, min_samples_leaf=17, min_samples_split=17)", "DecisionTreeClassifier(SelectPercentile(data, SelectPercentile.percentile=74, SelectPercentile.score_func=f_classif), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=9, min_samples_leaf=16, min_samples_split=10)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=9, min_samples_leaf=16, min_samples_split=10)", "DecisionTreeClassifier(MaxAbsScaler(data), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=9, min_samples_leaf=16, min_samples_split=10)", "DecisionTreeClassifier(MaxAbsScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.6500000000000001)), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=9, min_samples_leaf=16, min_samples_split=10)", "DecisionTreeClassifier(PCA(VarianceThreshold(data, VarianceThreshold.threshold=0.8), PCA.iterated_power=3, PCA.svd_solver='randomized'), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=5, min_samples_leaf=8, min_samples_split=9)", "GaussianNB(VarianceThreshold(SelectPercentile(data, SelectPercentile.percentile=22, SelectPercentile.score_func=f_classif), VarianceThreshold.threshold=0.7000000000000001))", "BernoulliNB(MinMaxScaler(data), alpha=1.0, fit_prior=True)", "BernoulliNB(SelectFwe(MinMaxScaler(data), SelectFwe.alpha=0.013000000000000001, SelectFwe.score_func=f_classif), alpha=10.0, fit_prior=True)", "BernoulliNB(RobustScaler(data), alpha=10.0, fit_prior=True)", "DecisionTreeClassifier(MaxAbsScaler(data), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=10, min_samples_leaf=18, min_samples_split=11)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=10, min_samples_leaf=18, min_samples_split=11)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=10, min_samples_leaf=16, min_samples_split=11)", "DecisionTreeClassifier(MinMaxScaler(data), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=10, min_samples_leaf=18, min_samples_split=11)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=10, min_samples_leaf=18, min_samples_split=18)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=10, min_samples_leaf=12, min_samples_split=11)", "DecisionTreeClassifier(SelectPercentile(MinMaxScaler(data), SelectPercentile.percentile=66, SelectPercentile.score_func=f_classif), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=10, min_samples_leaf=18, min_samples_split=11)", "DecisionTreeClassifier(MaxAbsScaler(data), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=8, min_samples_leaf=10, min_samples_split=14)", "DecisionTreeClassifier(StandardScaler(data), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=8, min_samples_leaf=10, min_samples_split=14)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=8, min_samples_leaf=10, min_samples_split=14)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=9, min_samples_leaf=1, min_samples_split=7)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=9, min_samples_leaf=20, min_samples_split=7)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=9, min_samples_leaf=1, min_samples_split=7)", "DecisionTreeClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.4), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=9, min_samples_leaf=1, min_samples_split=7)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=7, min_samples_leaf=1, min_samples_split=17)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=7, min_samples_leaf=1, min_samples_split=7)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=7, min_samples_leaf=14, min_samples_split=3)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=7, min_samples_leaf=20, min_samples_split=4)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=7, min_samples_leaf=1, min_samples_split=4)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=5, min_samples_leaf=20, min_samples_split=7)", "DecisionTreeClassifier(RobustScaler(data), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=8, min_samples_leaf=8, min_samples_split=19)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=8, min_samples_leaf=16, min_samples_split=10)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=8, min_samples_leaf=16, min_samples_split=19)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=8, min_samples_leaf=8, min_samples_split=19)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=8, min_samples_leaf=15, min_samples_split=19)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=8, min_samples_leaf=16, min_samples_split=19)", "DecisionTreeClassifier(SelectFwe(data, SelectFwe.alpha=0.027, SelectFwe.score_func=f_classif), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=8, min_samples_leaf=16, min_samples_split=19)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=8, min_samples_leaf=8, min_samples_split=19)", "DecisionTreeClassifier(Normalizer(MaxAbsScaler(data), Normalizer.norm='max'), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=8, min_samples_leaf=4, min_samples_split=20)", "DecisionTreeClassifier(SelectFwe(SelectPercentile(data, SelectPercentile.percentile=50, SelectPercentile.score_func=f_classif), SelectFwe.alpha=0.027, SelectFwe.score_func=f_classif), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=8, min_samples_leaf=16, min_samples_split=19)", "DecisionTreeClassifier(Normalizer(MinMaxScaler(data), Normalizer.norm='max'), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=9, min_samples_leaf=14, min_samples_split=19)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=9, min_samples_leaf=4, min_samples_split=15)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=10, min_samples_leaf=7, min_samples_split=20)", "DecisionTreeClassifier(RobustScaler(data), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=9, min_samples_leaf=17, min_samples_split=14)", "DecisionTreeClassifier(Normalizer(MinMaxScaler(data), Normalizer.norm='max'), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=9, min_samples_leaf=14, min_samples_split=19)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=9, min_samples_leaf=4, min_samples_split=15)", "DecisionTreeClassifier(RobustScaler(data), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=9, min_samples_leaf=6, min_samples_split=14)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=8, min_samples_leaf=13, min_samples_split=15)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=8, min_samples_leaf=17, min_samples_split=15)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=8, min_samples_leaf=11, min_samples_split=15)"], "shuttle": ["RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MaxAbsScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RobustScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MaxAbsScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.7000000000000001, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=15, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RobustScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(VarianceThreshold(data, VarianceThreshold.threshold=0.9500000000000001), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=2, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(RobustScaler(data), SelectFwe.alpha=0.007, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=2, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(RobustScaler(MinMaxScaler(data)), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=14, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=10, RandomForestClassifier.min_samples_split=12, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=13, RandomForestClassifier.min_samples_split=12, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=9, RandomForestClassifier.min_samples_split=14, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(data, SelectFwe.alpha=0.014, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=9, RandomForestClassifier.min_samples_split=14, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RobustScaler(SelectFwe(data, SelectFwe.alpha=0.014, SelectFwe.score_func=f_classif)), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=9, RandomForestClassifier.min_samples_split=14, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=10, RandomForestClassifier.min_samples_split=12, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MinMaxScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=10, RandomForestClassifier.min_samples_split=12, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RobustScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=10, RandomForestClassifier.min_samples_split=12, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RobustScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(MaxAbsScaler(data), SelectFwe.alpha=0.021, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(StandardScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.7500000000000001)), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(StandardScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MinMaxScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(data, SelectFwe.alpha=0.028, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RobustScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=6, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(VarianceThreshold(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), VarianceThreshold.threshold=0.7500000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MinMaxScaler(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False)), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(VarianceThreshold(data, VarianceThreshold.threshold=0.15000000000000002), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(VarianceThreshold(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), VarianceThreshold.threshold=0.9000000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(VarianceThreshold(SelectFwe(data, SelectFwe.alpha=0.014, SelectFwe.score_func=f_classif), VarianceThreshold.threshold=0.3), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MaxAbsScaler(SelectFwe(data, SelectFwe.alpha=0.043000000000000003, SelectFwe.score_func=f_classif)), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.55, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(data, SelectFwe.alpha=0.027, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.5, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.5, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.5, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=9, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.5, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(StandardScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.55, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.5, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=11, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.8, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=11, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.8, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.8, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=6, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=6, RandomForestClassifier.min_samples_split=11, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=11, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.8, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.8, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=17, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=12, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=12, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=12, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=12, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.8500000000000001), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=7, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RobustScaler(SelectFwe(data, SelectFwe.alpha=0.013000000000000001, SelectFwe.score_func=f_classif)), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=7, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(StandardScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MinMaxScaler(StandardScaler(data)), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), SelectFwe.alpha=0.037, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=11, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(data, SelectFwe.alpha=0.037, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MaxAbsScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(StandardScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=14, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=14, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=5, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=5, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.5, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=5, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MinMaxScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.6000000000000001, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=11, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.9000000000000001, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=5, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.6000000000000001, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=11, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MinMaxScaler(data), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.6000000000000001, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MaxAbsScaler(data), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.6000000000000001, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MinMaxScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.6000000000000001, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)"], "ozone-level-8hr": ["ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.4), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=3, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=4, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.65), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6000000000000001, min_samples_leaf=5, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=4, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.4), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=4, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=2, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.05), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=2, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=3, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(StandardScaler(RBFSampler(data, RBFSampler.gamma=0.8500000000000001)), LogisticRegression.C=0.1, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.25), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=4, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.45), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=4, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.5), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=3, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.65), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.55, min_samples_leaf=4, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.45), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6000000000000001, min_samples_leaf=4, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.65), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.55, min_samples_leaf=4, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(Binarizer(FastICA(data, FastICA.tol=0.25, FastICA.whiten='unit-variance'), Binarizer.threshold=1.0), alpha=100.0, fit_prior=True)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.8), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6000000000000001, min_samples_leaf=4, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=3, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.45), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=4, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.2), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=5, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "MultinomialNB(MinMaxScaler(data), alpha=100.0, fit_prior=True)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.9), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=5, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.45), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=4, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.8), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=4, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.1), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=2, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=5, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.2), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=5, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=1.0), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=4, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=2, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.9), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=5, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.05), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=4, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.4), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=4, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=1.0), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6000000000000001, min_samples_leaf=6, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=1.0), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=4, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=4, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=4, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.9), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=5, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.2), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=4, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.05), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=4, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.45), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=4, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=5, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.4), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=7, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.4), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=2, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.8), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=3, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=4, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=5, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.25), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=4, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.75), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=5, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=5, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=1.0), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=3, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.9), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=5, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.65), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=5, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.5), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=9, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.5), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=6, min_samples_leaf=7, min_samples_split=12)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.8), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=9, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.25), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=5, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=5, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.55), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=4, min_samples_split=13, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.5), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=2, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.4), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=5, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.8500000000000001, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.15000000000000002)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=1.0), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=5, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=5, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.45), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=1, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "GaussianNB(PCA(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), PCA.iterated_power=2, PCA.svd_solver='randomized'))", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.2), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=1, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=3, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.8), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=1, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.65), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=1, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=1.0), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=1, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.65), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=6, min_samples_split=13, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.25), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=6, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=8, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.7500000000000001, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.35000000000000003)", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.45), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=1, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=6, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.5), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=6, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=6, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=6, min_samples_split=13, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.1), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6000000000000001, min_samples_leaf=2, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.9), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=4, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.9500000000000001, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.25), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=2, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.9), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.55, min_samples_leaf=3, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.55, min_samples_leaf=4, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=2, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.05), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=2, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.2), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=4, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.1), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=2, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)"], "micro-mass": ["LogisticRegression(Binarizer(data, Binarizer.threshold=0.30000000000000004), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(Binarizer(data, Binarizer.threshold=0.5)), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GradientBoostingClassifier(Binarizer(Binarizer(data, Binarizer.threshold=0.75), Binarizer.threshold=0.30000000000000004), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "GradientBoostingClassifier(Binarizer(data, Binarizer.threshold=0.9), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(Binarizer(data, Binarizer.threshold=0.5), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(Binarizer(data, Binarizer.threshold=0.30000000000000004), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "GradientBoostingClassifier(RobustScaler(Binarizer(data, Binarizer.threshold=0.30000000000000004)), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "GradientBoostingClassifier(Binarizer(data, Binarizer.threshold=0.30000000000000004), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "GradientBoostingClassifier(Binarizer(SelectPercentile(data, SelectPercentile.percentile=69, SelectPercentile.score_func=f_classif), Binarizer.threshold=0.5), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(Binarizer(data, Binarizer.threshold=0.30000000000000004), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "MultinomialNB(Normalizer(data, Normalizer.norm='l2'), alpha=0.001, fit_prior=True)", "MultinomialNB(Normalizer(data, Normalizer.norm='l2'), alpha=0.001, fit_prior=False)", "ExtraTreesClassifier(Normalizer(data, Normalizer.norm='l1'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "MultinomialNB(SelectPercentile(Normalizer(data, Normalizer.norm='l2'), SelectPercentile.percentile=48, SelectPercentile.score_func=f_classif), alpha=0.001, fit_prior=False)", "ExtraTreesClassifier(SelectPercentile(Normalizer(data, Normalizer.norm='l1'), SelectPercentile.percentile=66, SelectPercentile.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MinMaxScaler(Normalizer(data, Normalizer.norm='l1')), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Normalizer(RobustScaler(data), Normalizer.norm='l1'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Normalizer(data, Normalizer.norm='l1'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Normalizer(data, Normalizer.norm='l1'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=1, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Normalizer(data, Normalizer.norm='l1'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(Binarizer(data, Binarizer.threshold=0.6000000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "GradientBoostingClassifier(Binarizer(data, Binarizer.threshold=0.6000000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "GradientBoostingClassifier(Binarizer(data, Binarizer.threshold=0.2), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "GradientBoostingClassifier(Binarizer(Binarizer(data, Binarizer.threshold=0.7000000000000001), Binarizer.threshold=0.2), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "GradientBoostingClassifier(StandardScaler(Binarizer(data, Binarizer.threshold=0.9500000000000001)), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "GradientBoostingClassifier(Binarizer(VarianceThreshold(data, VarianceThreshold.threshold=0.7000000000000001), Binarizer.threshold=0.75), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "GradientBoostingClassifier(Binarizer(data, Binarizer.threshold=0.6000000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "GradientBoostingClassifier(Binarizer(SelectPercentile(data, SelectPercentile.percentile=35, SelectPercentile.score_func=f_classif), Binarizer.threshold=0.6000000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "GradientBoostingClassifier(Binarizer(data, Binarizer.threshold=0.2), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "GradientBoostingClassifier(Normalizer(data, Normalizer.norm='l2'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "LogisticRegression(StandardScaler(Binarizer(data, Binarizer.threshold=0.45)), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PCA(Binarizer(data, Binarizer.threshold=0.45), PCA.iterated_power=5, PCA.svd_solver='randomized'), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MaxAbsScaler(Binarizer(data, Binarizer.threshold=0.45)), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Binarizer(data, Binarizer.threshold=0.5), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Binarizer(data, Binarizer.threshold=0.45), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MinMaxScaler(Binarizer(data, Binarizer.threshold=0.45)), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Binarizer(data, Binarizer.threshold=0.35000000000000003), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Binarizer(VarianceThreshold(data, VarianceThreshold.threshold=0.8500000000000001), Binarizer.threshold=0.45), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Binarizer(VarianceThreshold(data, VarianceThreshold.threshold=0.1), Binarizer.threshold=0.45), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "MultinomialNB(Normalizer(Binarizer(data, Binarizer.threshold=0.75), Normalizer.norm='l2'), alpha=0.01, fit_prior=False)", "GradientBoostingClassifier(Binarizer(data, Binarizer.threshold=0.35000000000000003), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(Binarizer(data, Binarizer.threshold=0.35000000000000003), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(Binarizer(data, Binarizer.threshold=0.35000000000000003), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "MultinomialNB(Normalizer(Binarizer(data, Binarizer.threshold=0.65), Normalizer.norm='l2'), alpha=0.001, fit_prior=False)", "MultinomialNB(Normalizer(Binarizer(data, Binarizer.threshold=0.9500000000000001), Normalizer.norm='l2'), alpha=0.001, fit_prior=False)", "GradientBoostingClassifier(Binarizer(data, Binarizer.threshold=0.9), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.2)", "GradientBoostingClassifier(Normalizer(data, Normalizer.norm='max'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.2)", "GradientBoostingClassifier(Binarizer(data, Binarizer.threshold=0.2), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.2)", "GradientBoostingClassifier(Normalizer(data, Normalizer.norm='l2'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.2)", "GradientBoostingClassifier(SelectPercentile(Binarizer(data, Binarizer.threshold=0.65), SelectPercentile.percentile=62, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.2)", "GradientBoostingClassifier(Binarizer(data, Binarizer.threshold=0.05), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.55)", "GradientBoostingClassifier(Binarizer(data, Binarizer.threshold=0.4), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(MaxAbsScaler(Binarizer(data, Binarizer.threshold=0.05)), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(Binarizer(data, Binarizer.threshold=0.05), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(Binarizer(data, Binarizer.threshold=0.5), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(Binarizer(data, Binarizer.threshold=0.2), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(Binarizer(data, Binarizer.threshold=0.7000000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(Normalizer(data, Normalizer.norm='l1'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(Binarizer(data, Binarizer.threshold=0.4), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(Binarizer(data, Binarizer.threshold=0.4), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "LogisticRegression(Binarizer(data, Binarizer.threshold=0.0), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Binarizer(data, Binarizer.threshold=0.8500000000000001), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MaxAbsScaler(Binarizer(data, Binarizer.threshold=0.0)), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Binarizer(data, Binarizer.threshold=0.9500000000000001), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Binarizer(Normalizer(data, Normalizer.norm='l1'), Binarizer.threshold=0.0), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Binarizer(data, Binarizer.threshold=0.15000000000000002), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(Binarizer(data, Binarizer.threshold=0.15000000000000002)), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Binarizer(data, Binarizer.threshold=0.8500000000000001), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Binarizer(Binarizer(data, Binarizer.threshold=0.8500000000000001), Binarizer.threshold=0.35000000000000003), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Binarizer(data, Binarizer.threshold=0.0), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Binarizer(data, Binarizer.threshold=0.8500000000000001), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Binarizer(data, Binarizer.threshold=0.30000000000000004), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Binarizer(data, Binarizer.threshold=0.8), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Binarizer(data, Binarizer.threshold=0.8500000000000001), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Binarizer(data, Binarizer.threshold=0.4), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Binarizer(data, Binarizer.threshold=0.25), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Binarizer(SelectPercentile(data, SelectPercentile.percentile=82, SelectPercentile.score_func=f_classif), Binarizer.threshold=0.30000000000000004), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(Binarizer(data, Binarizer.threshold=0.25)), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(MaxAbsScaler(Binarizer(data, Binarizer.threshold=0.25))), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GradientBoostingClassifier(Binarizer(data, Binarizer.threshold=0.8500000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.55)", "LogisticRegression(MaxAbsScaler(Binarizer(data, Binarizer.threshold=0.15000000000000002)), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Binarizer(data, Binarizer.threshold=0.15000000000000002), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GradientBoostingClassifier(Binarizer(data, Binarizer.threshold=0.05), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.05, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.55)", "GradientBoostingClassifier(Binarizer(data, Binarizer.threshold=0.05), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=11, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.45)", "GradientBoostingClassifier(MaxAbsScaler(Binarizer(data, Binarizer.threshold=0.15000000000000002)), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.3)", "GradientBoostingClassifier(Binarizer(data, Binarizer.threshold=0.15000000000000002), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.3)", "GradientBoostingClassifier(Binarizer(data, Binarizer.threshold=0.05), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.3)", "GradientBoostingClassifier(Binarizer(data, Binarizer.threshold=0.05), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=11, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.3)", "GradientBoostingClassifier(Binarizer(data, Binarizer.threshold=0.5), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.3)", "GradientBoostingClassifier(Binarizer(data, Binarizer.threshold=0.30000000000000004), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=11, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.3)"], "wine-quality-white": ["RandomForestClassifier(SelectPercentile(StandardScaler(data), SelectPercentile.percentile=96, SelectPercentile.score_func=f_classif), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=2, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=2, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=2, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MinMaxScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=2, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=2, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=2, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=2, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=2, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RobustScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=2, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(StandardScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=6, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(PCA(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), PCA.iterated_power=8, PCA.svd_solver='randomized'), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=5, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RobustScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MinMaxScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(PCA(data, PCA.iterated_power=9, PCA.svd_solver='randomized'), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=6, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RobustScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MinMaxScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(PolynomialFeatures(FastICA(data, FastICA.tol=0.7000000000000001, FastICA.whiten='unit-variance'), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=4, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MaxAbsScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(StandardScaler(StandardScaler(data)), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(StandardScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MinMaxScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=4, RandomForestClassifier.min_samples_split=6, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=9, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RobustScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MaxAbsScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=5, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=5, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RobustScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=5, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.05, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=5, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MinMaxScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=5, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.05, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=6, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.05, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=6, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.05, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=1, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=1, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectFwe(data, SelectFwe.alpha=0.044, SelectFwe.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=1, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(MinMaxScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(StandardScaler(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized')), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=1, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(FastICA(PCA(data, PCA.iterated_power=4, PCA.svd_solver='randomized'), FastICA.tol=0.35000000000000003, FastICA.whiten='unit-variance'), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=1, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=1, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=6, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(PolynomialFeatures(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized'), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=6, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=2, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=2, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=2, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MinMaxScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=2, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RobustScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=2, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=2, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(StandardScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=2, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MaxAbsScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=2, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=2, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=2, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.05, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=9, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=5, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=6, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=9, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=9, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(StandardScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=9, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=2, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RobustScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=2, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MaxAbsScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=2, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=2, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MinMaxScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=2, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectFwe(data, SelectFwe.alpha=0.011, SelectFwe.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=2, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=1, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(StandardScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=2, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=2, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=2, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=6, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=9, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MinMaxScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=6, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(StandardScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=6, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(StandardScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(PCA(data, PCA.iterated_power=4, PCA.svd_solver='randomized'), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=9, RandomForestClassifier.n_estimators=100)"], "Satellite": ["ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.65), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=1, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=1, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.5), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=2, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.2, min_samples_leaf=3, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(PCA(data, PCA.iterated_power=7, PCA.svd_solver='randomized'), RBFSampler.gamma=0.75), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=1, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.75), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.55, min_samples_leaf=4, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.8), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=1, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.1), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=13, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=1, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.8), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=1, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(Normalizer(data, Normalizer.norm='l1'), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.05, GradientBoostingClassifier.min_samples_leaf=11, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.2)", "GradientBoostingClassifier(Normalizer(data, Normalizer.norm='l1'), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.6000000000000001, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=13, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.55)", "GradientBoostingClassifier(Normalizer(data, Normalizer.norm='l1'), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.9500000000000001, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.05)", "GradientBoostingClassifier(Normalizer(data, Normalizer.norm='l1'), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.15000000000000002)", "GradientBoostingClassifier(Normalizer(data, Normalizer.norm='l2'), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=11, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.3)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=3, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Normalizer(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), Normalizer.norm='l1'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=3, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.9), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.5), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(Normalizer(RBFSampler(data, RBFSampler.gamma=0.5), Normalizer.norm='max'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6000000000000001, min_samples_leaf=6, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(SelectPercentile(data, SelectPercentile.percentile=86, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "LogisticRegression(Nystroem(data, Nystroem.gamma=0.1, Nystroem.kernel='additive_chi2', Nystroem.n_components=1), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GradientBoostingClassifier(RobustScaler(SelectPercentile(data, SelectPercentile.percentile=2, SelectPercentile.score_func=f_classif)), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.7500000000000001, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.3)", "GradientBoostingClassifier(SelectPercentile(data, SelectPercentile.percentile=86, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "LogisticRegression(Nystroem(data, Nystroem.gamma=0.45, Nystroem.kernel='additive_chi2', Nystroem.n_components=1), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GradientBoostingClassifier(SelectPercentile(data, SelectPercentile.percentile=86, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=11, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.3)", "GradientBoostingClassifier(SelectPercentile(data, SelectPercentile.percentile=86, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.8500000000000001, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "GradientBoostingClassifier(RobustScaler(FastICA(data, FastICA.tol=0.30000000000000004, FastICA.whiten='unit-variance')), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.7500000000000001, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.3)", "GradientBoostingClassifier(SelectPercentile(data, SelectPercentile.percentile=86, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7000000000000001)", "GradientBoostingClassifier(SelectPercentile(data, SelectPercentile.percentile=88, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.15000000000000002)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.1), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=2, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=2, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PCA(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), PCA.iterated_power=3, PCA.svd_solver='randomized'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=7, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=3, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.9), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=3, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.8), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=2, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.45), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=17, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.65), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6000000000000001, min_samples_leaf=7, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.4), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=3, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=1.0), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=2, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.2, min_samples_leaf=2, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=3, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=1.0), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=2, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=20, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.45), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.8), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=2, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.5), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=19, min_samples_split=13, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=2, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=3, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(PCA(data, PCA.iterated_power=2, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=11, GradientBoostingClassifier.min_samples_split=13, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "GradientBoostingClassifier(FastICA(SelectFwe(data, SelectFwe.alpha=0.029, SelectFwe.score_func=f_classif), FastICA.tol=0.45, FastICA.whiten='unit-variance'), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.35000000000000003)", "GradientBoostingClassifier(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.3)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.35000000000000003)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=1, min_samples_split=20, ExtraTreesClassifier.n_estimators=100)", "GaussianNB(Nystroem(data, Nystroem.gamma=0.45, Nystroem.kernel='chi2', Nystroem.n_components=1))", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=1.0), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=1, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.55), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=1, min_samples_split=20, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.45), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.1), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RBFSampler.gamma=0.65), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), LogisticRegression.C=0.1, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.1), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.5), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=1.0, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=10, RandomForestClassifier.n_estimators=100)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.1), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=2, min_samples_leaf=11, min_samples_split=20)", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(PCA(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), PCA.iterated_power=5, PCA.svd_solver='randomized'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=1, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.05), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=1.0, RandomForestClassifier.min_samples_leaf=15, RandomForestClassifier.min_samples_split=10, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(FastICA(RBFSampler(data, RBFSampler.gamma=0.1), FastICA.tol=0.35000000000000003, FastICA.whiten='unit-variance'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=1, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(SelectPercentile(Normalizer(data, Normalizer.norm='l1'), SelectPercentile.percentile=78, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.6000000000000001, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.45), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=2, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=1.0), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=3, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.3)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.15000000000000002, min_samples_leaf=3, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(SelectPercentile(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), SelectPercentile.percentile=78, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.6000000000000001, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.75), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=2, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(Normalizer(VarianceThreshold(data, VarianceThreshold.threshold=0.8), Normalizer.norm='max'), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.9500000000000001, GradientBoostingClassifier.min_samples_leaf=11, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.75), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=4, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(SelectPercentile(data, SelectPercentile.percentile=97, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=12, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.15000000000000002, Nystroem.kernel='linear', Nystroem.n_components=5), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.45)", "ExtraTreesClassifier(PCA(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), PCA.iterated_power=8, PCA.svd_solver='randomized'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=4, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PCA(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), PCA.iterated_power=8, PCA.svd_solver='randomized'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=4, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.9), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "ExtraTreesClassifier(RBFSampler(PCA(data, PCA.iterated_power=1, PCA.svd_solver='randomized'), RBFSampler.gamma=0.5), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=4, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.65), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.55, min_samples_leaf=4, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.65), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=4, min_samples_split=19, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PCA(RBFSampler(data, RBFSampler.gamma=0.1), PCA.iterated_power=1, PCA.svd_solver='randomized'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=4, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(PCA(data, PCA.iterated_power=4, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.15000000000000002)", "GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)"], "phoneme": ["RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='polynomial', Nystroem.n_components=2), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=5, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='laplacian', Nystroem.n_components=2), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=5, RandomForestClassifier.n_estimators=100)", "KNeighborsClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='sigmoid', Nystroem.n_components=9), KNeighborsClassifier.n_neighbors=13, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='distance')", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='sigmoid', Nystroem.n_components=8), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=5, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.0), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.55, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=5, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='laplacian', Nystroem.n_components=1), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=5, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.0), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.55, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "BernoulliNB(MinMaxScaler(StandardScaler(data)), alpha=1.0, fit_prior=True)", "KNeighborsClassifier(Binarizer(data, Binarizer.threshold=0.9500000000000001), KNeighborsClassifier.n_neighbors=2, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='distance')", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.15000000000000002, Nystroem.kernel='linear', Nystroem.n_components=1), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "BernoulliNB(MinMaxScaler(data), alpha=0.1, fit_prior=False)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='rbf', Nystroem.n_components=2), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='laplacian', Nystroem.n_components=4), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='rbf', Nystroem.n_components=8), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='polynomial', Nystroem.n_components=8), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='poly', Nystroem.n_components=3), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='laplacian', Nystroem.n_components=3), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='rbf', Nystroem.n_components=3), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='poly', Nystroem.n_components=9), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.0), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(MinMaxScaler(SelectPercentile(data, SelectPercentile.percentile=24, SelectPercentile.score_func=f_classif)), alpha=0.001, fit_prior=True)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='polynomial', Nystroem.n_components=4), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='polynomial', Nystroem.n_components=8), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.0), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='poly', Nystroem.n_components=7), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='poly', Nystroem.n_components=6), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='poly', Nystroem.n_components=5), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='sigmoid', Nystroem.n_components=7), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='rbf', Nystroem.n_components=4), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='poly', Nystroem.n_components=9), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='laplacian', Nystroem.n_components=6), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='poly', Nystroem.n_components=2), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "BernoulliNB(MinMaxScaler(data), alpha=1.0, fit_prior=True)", "RandomForestClassifier(Normalizer(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='polynomial', Nystroem.n_components=1), Normalizer.norm='l1'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=17, RandomForestClassifier.min_samples_split=14, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='rbf', Nystroem.n_components=1), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.5, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.15000000000000002)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='laplacian', Nystroem.n_components=1), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(SelectPercentile(RBFSampler(data, RBFSampler.gamma=0.9), SelectPercentile.percentile=28, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.7500000000000001, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "GradientBoostingClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.15000000000000002)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.1, Nystroem.kernel='cosine', Nystroem.n_components=1), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.5, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='rbf', Nystroem.n_components=2), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.0), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='poly', Nystroem.n_components=2), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.0), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.0), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=1, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='poly', Nystroem.n_components=10), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='laplacian', Nystroem.n_components=4), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.0), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='poly', Nystroem.n_components=6), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='polynomial', Nystroem.n_components=10), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.05)", "BernoulliNB(MinMaxScaler(data), alpha=100.0, fit_prior=True)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.0), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=13, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.0), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.0), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GaussianNB(RBFSampler(Binarizer(data, Binarizer.threshold=0.05), RBFSampler.gamma=0.0))", "ExtraTreesClassifier(Nystroem(MaxAbsScaler(data), Nystroem.gamma=0.0, Nystroem.kernel='polynomial', Nystroem.n_components=2), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='polynomial', Nystroem.n_components=7), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.0), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(RBFSampler(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RBFSampler.gamma=0.0), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "BernoulliNB(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='laplacian', Nystroem.n_components=3), alpha=0.001, fit_prior=False)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='polynomial', Nystroem.n_components=7), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.0), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=1, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='laplacian', Nystroem.n_components=7), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='laplacian', Nystroem.n_components=8), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(StandardScaler(RBFSampler(data, RBFSampler.gamma=0.0)), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='poly', Nystroem.n_components=8), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='polynomial', Nystroem.n_components=6), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='laplacian', Nystroem.n_components=3), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.0), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(MinMaxScaler(data), alpha=0.1, fit_prior=False)", "ExtraTreesClassifier(Binarizer(Normalizer(data, Normalizer.norm='l1'), Binarizer.threshold=0.9500000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=11, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='polynomial', Nystroem.n_components=5), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.0), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(Binarizer(Normalizer(data, Normalizer.norm='l1'), Binarizer.threshold=0.9500000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=5, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(PolynomialFeatures(RBFSampler(data, RBFSampler.gamma=0.0), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MaxAbsScaler(RBFSampler(data, RBFSampler.gamma=0.0)), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "BernoulliNB(FeatureAgglomeration(MinMaxScaler(data), FeatureAgglomeration.affinity='l1', FeatureAgglomeration.linkage='average'), alpha=0.01, fit_prior=True)", "BernoulliNB(Normalizer(Nystroem(data, Nystroem.gamma=0.5, Nystroem.kernel='laplacian', Nystroem.n_components=10), Normalizer.norm='l1'), alpha=0.1, fit_prior=False)", "RandomForestClassifier(Nystroem(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), Nystroem.gamma=0.9500000000000001, Nystroem.kernel='rbf', Nystroem.n_components=1), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='laplacian', Nystroem.n_components=6), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.0), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.55, min_samples_leaf=1, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='laplacian', Nystroem.n_components=1), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='poly', Nystroem.n_components=2), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.0), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='sigmoid', Nystroem.n_components=2), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='rbf', Nystroem.n_components=9), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='rbf', Nystroem.n_components=4), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='sigmoid', Nystroem.n_components=10), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='poly', Nystroem.n_components=7), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)"], "pc4": ["GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.15000000000000002)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.9), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "BernoulliNB(FeatureAgglomeration(RBFSampler(data, RBFSampler.gamma=0.2), FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='average'), alpha=10.0, fit_prior=True)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.9), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=3, min_samples_leaf=2, min_samples_split=17)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.8), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.55, Nystroem.kernel='rbf', Nystroem.n_components=3), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='polynomial', Nystroem.n_components=5), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.9, Nystroem.kernel='sigmoid', Nystroem.n_components=2), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=12, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.0), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "LogisticRegression(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "MultinomialNB(SelectFwe(data, SelectFwe.alpha=0.029, SelectFwe.score_func=f_classif), alpha=0.001, fit_prior=True)", "MultinomialNB(SelectFwe(data, SelectFwe.alpha=0.027, SelectFwe.score_func=f_classif), alpha=0.001, fit_prior=True)", "MultinomialNB(VarianceThreshold(data, VarianceThreshold.threshold=0.4), alpha=10.0, fit_prior=False)", "MultinomialNB(data, alpha=1.0, fit_prior=False)", "MultinomialNB(PolynomialFeatures(SelectFwe(data, SelectFwe.alpha=0.01, SelectFwe.score_func=f_classif), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), alpha=0.1, fit_prior=True)", "GaussianNB(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False))", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.65), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=5, min_samples_leaf=8, min_samples_split=18)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.75), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.9), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "MultinomialNB(SelectPercentile(data, SelectPercentile.percentile=75, SelectPercentile.score_func=f_classif), alpha=0.1, fit_prior=True)", "MultinomialNB(SelectPercentile(data, SelectPercentile.percentile=54, SelectPercentile.score_func=f_classif), alpha=10.0, fit_prior=True)", "MultinomialNB(data, alpha=10.0, fit_prior=False)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.4), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=2, min_samples_leaf=18, min_samples_split=7)", "LogisticRegression(Nystroem(data, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='poly', Nystroem.n_components=10), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.65), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.45), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.6000000000000001, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.2), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.6000000000000001, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "KNeighborsClassifier(RBFSampler(data, RBFSampler.gamma=1.0), KNeighborsClassifier.n_neighbors=48, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='uniform')", "KNeighborsClassifier(Nystroem(data, Nystroem.gamma=0.1, Nystroem.kernel='sigmoid', Nystroem.n_components=5), KNeighborsClassifier.n_neighbors=40, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='uniform')", "GaussianNB(Nystroem(data, Nystroem.gamma=0.5, Nystroem.kernel='polynomial', Nystroem.n_components=5))", "BernoulliNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='average'), alpha=10.0, fit_prior=False)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.15000000000000002)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(FastICA(data, FastICA.tol=0.25, FastICA.whiten='unit-variance'), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.15000000000000002)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.75), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.8), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.05), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='polynomial', Nystroem.n_components=10), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "MultinomialNB(Normalizer(data, Normalizer.norm='l1'), alpha=10.0, fit_prior=True)", "MultinomialNB(VarianceThreshold(SelectFwe(data, SelectFwe.alpha=0.021, SelectFwe.score_func=f_classif), VarianceThreshold.threshold=0.5), alpha=10.0, fit_prior=True)", "MultinomialNB(SelectFwe(data, SelectFwe.alpha=0.008, SelectFwe.score_func=f_classif), alpha=0.1, fit_prior=False)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.45), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "MultinomialNB(VarianceThreshold(data, VarianceThreshold.threshold=0.5), alpha=10.0, fit_prior=True)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "MultinomialNB(data, alpha=0.001, fit_prior=True)", "MultinomialNB(data, alpha=1.0, fit_prior=True)", "MultinomialNB(data, alpha=100.0, fit_prior=False)", "MultinomialNB(data, alpha=100.0, fit_prior=True)", "LogisticRegression(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LogisticRegression.C=0.1, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LogisticRegression.C=0.0001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GaussianNB(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False))", "GaussianNB(MinMaxScaler(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l1', FeatureAgglomeration.linkage='average')))", "MultinomialNB(SelectFwe(SelectPercentile(data, SelectPercentile.percentile=77, SelectPercentile.score_func=f_classif), SelectFwe.alpha=0.034, SelectFwe.score_func=f_classif), alpha=0.01, fit_prior=False)", "LogisticRegression(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LogisticRegression.C=0.0001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GaussianNB(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False))", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.45)", "MultinomialNB(SelectFwe(data, SelectFwe.alpha=0.028, SelectFwe.score_func=f_classif), alpha=1.0, fit_prior=False)", "MultinomialNB(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), alpha=10.0, fit_prior=False)", "MultinomialNB(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), alpha=0.01, fit_prior=False)", "MultinomialNB(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), alpha=0.01, fit_prior=True)", "MultinomialNB(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), alpha=0.1, fit_prior=False)", "LogisticRegression(FeatureAgglomeration(data, FeatureAgglomeration.affinity='manhattan', FeatureAgglomeration.linkage='complete'), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "BernoulliNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='complete'), alpha=100.0, fit_prior=False)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.75), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.9500000000000001, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "MultinomialNB(data, alpha=10.0, fit_prior=True)", "MultinomialNB(data, alpha=0.001, fit_prior=True)", "MultinomialNB(data, alpha=1.0, fit_prior=True)", "KNeighborsClassifier(Nystroem(data, Nystroem.gamma=0.65, Nystroem.kernel='laplacian', Nystroem.n_components=1), KNeighborsClassifier.n_neighbors=23, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='uniform')", "MultinomialNB(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), alpha=0.01, fit_prior=False)", "MultinomialNB(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), alpha=1.0, fit_prior=False)", "LogisticRegression(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GradientBoostingClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.4), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.9500000000000001, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.05)", "MultinomialNB(VarianceThreshold(data, VarianceThreshold.threshold=0.55), alpha=0.001, fit_prior=True)", "MultinomialNB(VarianceThreshold(data, VarianceThreshold.threshold=0.4), alpha=0.1, fit_prior=True)", "MultinomialNB(VarianceThreshold(data, VarianceThreshold.threshold=0.3), alpha=0.1, fit_prior=True)", "MultinomialNB(VarianceThreshold(data, VarianceThreshold.threshold=0.3), alpha=1.0, fit_prior=True)", "MultinomialNB(VarianceThreshold(data, VarianceThreshold.threshold=0.6000000000000001), alpha=1.0, fit_prior=True)", "MultinomialNB(VarianceThreshold(data, VarianceThreshold.threshold=0.7500000000000001), alpha=1.0, fit_prior=True)", "MultinomialNB(VarianceThreshold(data, VarianceThreshold.threshold=0.45), alpha=1.0, fit_prior=True)", "MultinomialNB(VarianceThreshold(data, VarianceThreshold.threshold=0.3), alpha=0.001, fit_prior=True)"], "robert": ["LogisticRegression(MaxAbsScaler(data), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(data), LogisticRegression.C=0.0001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=3, min_samples_leaf=13, min_samples_split=17)", "LogisticRegression(MaxAbsScaler(data), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=4, min_samples_leaf=6, min_samples_split=15)", "GaussianNB(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='cosine', Nystroem.n_components=4))", "LogisticRegression(MaxAbsScaler(data), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "DecisionTreeClassifier(RobustScaler(RobustScaler(data)), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=7, min_samples_split=13)", "DecisionTreeClassifier(StandardScaler(data), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=7, min_samples_split=13)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.05, min_samples_leaf=17, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(StandardScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.8500000000000001)), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.05, min_samples_leaf=16, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.05, min_samples_leaf=17, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "MultinomialNB(Normalizer(data, Normalizer.norm='l2'), alpha=10.0, fit_prior=True)", "LogisticRegression(MaxAbsScaler(data), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GaussianNB(Nystroem(data, Nystroem.gamma=0.8500000000000001, Nystroem.kernel='linear', Nystroem.n_components=6))", "GaussianNB(RobustScaler(Nystroem(data, Nystroem.gamma=0.8500000000000001, Nystroem.kernel='linear', Nystroem.n_components=6)))", "GaussianNB(Nystroem(data, Nystroem.gamma=0.8500000000000001, Nystroem.kernel='linear', Nystroem.n_components=10))", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=5, min_samples_leaf=7, min_samples_split=9)", "LogisticRegression(RobustScaler(StandardScaler(data)), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=4, min_samples_leaf=2, min_samples_split=18)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=4, min_samples_leaf=2, min_samples_split=3)", "DecisionTreeClassifier(RobustScaler(data), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=3, min_samples_leaf=1, min_samples_split=14)", "DecisionTreeClassifier(RobustScaler(data), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=3, min_samples_leaf=12, min_samples_split=14)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=3, min_samples_leaf=17, min_samples_split=9)", "DecisionTreeClassifier(MaxAbsScaler(data), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=4, min_samples_leaf=13, min_samples_split=18)", "DecisionTreeClassifier(RobustScaler(data), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=4, min_samples_leaf=2, min_samples_split=18)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=4, min_samples_leaf=13, min_samples_split=18)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=4, min_samples_leaf=2, min_samples_split=18)", "LogisticRegression(data, LogisticRegression.C=0.0001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=4, min_samples_leaf=1, min_samples_split=17)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=4, min_samples_leaf=16, min_samples_split=12)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=4, min_samples_leaf=11, min_samples_split=5)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=4, min_samples_leaf=1, min_samples_split=17)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=4, min_samples_leaf=16, min_samples_split=12)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=1, min_samples_split=17)", "DecisionTreeClassifier(SelectFwe(data, SelectFwe.alpha=0.003, SelectFwe.score_func=f_classif), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=1, min_samples_split=17)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.2, Nystroem.kernel='linear', Nystroem.n_components=8), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=14, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "DecisionTreeClassifier(RobustScaler(data), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=4, min_samples_leaf=18, min_samples_split=17)", "LogisticRegression(MinMaxScaler(Normalizer(data, Normalizer.norm='l2')), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.9, Nystroem.kernel='cosine', Nystroem.n_components=6), alpha=0.01, fit_prior=True)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.9, Nystroem.kernel='cosine', Nystroem.n_components=8), alpha=0.01, fit_prior=True)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.9, Nystroem.kernel='cosine', Nystroem.n_components=6), alpha=10.0, fit_prior=True)", "RandomForestClassifier(RBFSampler(MinMaxScaler(data), RBFSampler.gamma=0.0), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=17, RandomForestClassifier.min_samples_split=18, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(Binarizer(Nystroem(data, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='chi2', Nystroem.n_components=3), Binarizer.threshold=0.45), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=8, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='chi2', Nystroem.n_components=3), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=8, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "DecisionTreeClassifier(FastICA(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), FastICA.tol=0.05, FastICA.whiten='unit-variance'), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=3, min_samples_leaf=18, min_samples_split=18)", "LogisticRegression(MinMaxScaler(data), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=4, min_samples_leaf=20, min_samples_split=17)", "LogisticRegression(data, LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "DecisionTreeClassifier(MaxAbsScaler(data), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=3, min_samples_leaf=14, min_samples_split=16)", "LogisticRegression(data, LogisticRegression.C=0.0001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=2, min_samples_leaf=19, min_samples_split=9)", "DecisionTreeClassifier(SelectPercentile(data, SelectPercentile.percentile=70, SelectPercentile.score_func=f_classif), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=2, min_samples_leaf=2, min_samples_split=16)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=2, min_samples_leaf=2, min_samples_split=16)", "LogisticRegression(data, LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(VarianceThreshold(data, VarianceThreshold.threshold=0.8500000000000001), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=0.1, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=0.001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MinMaxScaler(Binarizer(data, Binarizer.threshold=0.25)), LogisticRegression.C=0.001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MinMaxScaler(Binarizer(data, Binarizer.threshold=0.8)), LogisticRegression.C=0.001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Nystroem(data, Nystroem.gamma=0.75, Nystroem.kernel='polynomial', Nystroem.n_components=1), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Normalizer(data, Normalizer.norm='l1'), LogisticRegression.C=0.001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "DecisionTreeClassifier(Nystroem(MinMaxScaler(data), Nystroem.gamma=0.25, Nystroem.kernel='rbf', Nystroem.n_components=6), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=7, min_samples_leaf=18, min_samples_split=10)", "RandomForestClassifier(FeatureAgglomeration(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='chi2', Nystroem.n_components=4), FeatureAgglomeration.affinity='manhattan', FeatureAgglomeration.linkage='average'), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.9500000000000001, RandomForestClassifier.min_samples_leaf=5, RandomForestClassifier.min_samples_split=18, RandomForestClassifier.n_estimators=100)", "DecisionTreeClassifier(SelectFwe(MinMaxScaler(data), SelectFwe.alpha=0.023, SelectFwe.score_func=f_classif), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=3, min_samples_leaf=7, min_samples_split=14)", "DecisionTreeClassifier(SelectFwe(data, SelectFwe.alpha=0.023, SelectFwe.score_func=f_classif), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=3, min_samples_leaf=7, min_samples_split=14)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=3, min_samples_leaf=13, min_samples_split=10)", "DecisionTreeClassifier(SelectFwe(Normalizer(Nystroem(data, Nystroem.gamma=0.9500000000000001, Nystroem.kernel='polynomial', Nystroem.n_components=8), Normalizer.norm='l2'), SelectFwe.alpha=0.023, SelectFwe.score_func=f_classif), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=3, min_samples_leaf=7, min_samples_split=14)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=2, min_samples_leaf=14, min_samples_split=14)", "DecisionTreeClassifier(SelectFwe(Normalizer(MinMaxScaler(Nystroem(data, Nystroem.gamma=0.9500000000000001, Nystroem.kernel='polynomial', Nystroem.n_components=8)), Normalizer.norm='l2'), SelectFwe.alpha=0.023, SelectFwe.score_func=f_classif), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=3, min_samples_leaf=7, min_samples_split=14)", "RandomForestClassifier(Binarizer(Normalizer(Nystroem(data, Nystroem.gamma=0.9500000000000001, Nystroem.kernel='polynomial', Nystroem.n_components=8), Normalizer.norm='l2'), Binarizer.threshold=1.0), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=6, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(MinMaxScaler(data), RBFSampler.gamma=0.0), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.9500000000000001, RandomForestClassifier.min_samples_leaf=14, RandomForestClassifier.min_samples_split=9, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Binarizer(Normalizer(data, Normalizer.norm='l2'), Binarizer.threshold=1.0), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=6, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.0), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.9500000000000001, RandomForestClassifier.min_samples_leaf=14, RandomForestClassifier.min_samples_split=9, RandomForestClassifier.n_estimators=100)", "LogisticRegression(data, LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=2, min_samples_leaf=6, min_samples_split=8)", "DecisionTreeClassifier(RBFSampler(MaxAbsScaler(Nystroem(data, Nystroem.gamma=0.05, Nystroem.kernel='poly', Nystroem.n_components=8)), RBFSampler.gamma=0.15000000000000002), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=1, min_samples_leaf=4, min_samples_split=2)", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='linear', Nystroem.n_components=4), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=1, min_samples_leaf=4, min_samples_split=9)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=1, min_samples_leaf=4, min_samples_split=9)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=1, min_samples_leaf=4, min_samples_split=2)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=1, min_samples_leaf=7, min_samples_split=9)", "DecisionTreeClassifier(Nystroem(SelectFwe(data, SelectFwe.alpha=0.005, SelectFwe.score_func=f_classif), Nystroem.gamma=0.6000000000000001, Nystroem.kernel='linear', Nystroem.n_components=4), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=1, min_samples_leaf=4, min_samples_split=9)", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='linear', Nystroem.n_components=4), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=1, min_samples_leaf=4, min_samples_split=2)"], "fabert": ["LogisticRegression(SelectPercentile(data, SelectPercentile.percentile=40, SelectPercentile.score_func=f_classif), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectPercentile(data, SelectPercentile.percentile=33, SelectPercentile.score_func=f_classif), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectFwe(data, SelectFwe.alpha=0.045, SelectFwe.score_func=f_classif), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(SelectFwe(data, SelectFwe.alpha=0.045, SelectFwe.score_func=f_classif)), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectFwe(data, SelectFwe.alpha=0.045, SelectFwe.score_func=f_classif), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectPercentile(SelectPercentile(data, SelectPercentile.percentile=65, SelectPercentile.score_func=f_classif), SelectPercentile.percentile=73, SelectPercentile.score_func=f_classif), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectPercentile(data, SelectPercentile.percentile=49, SelectPercentile.score_func=f_classif), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectFwe(data, SelectFwe.alpha=0.045, SelectFwe.score_func=f_classif), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectFwe(data, SelectFwe.alpha=0.024, SelectFwe.score_func=f_classif), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectFwe(data, SelectFwe.alpha=0.024, SelectFwe.score_func=f_classif), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(SelectFwe(data, SelectFwe.alpha=0.024, SelectFwe.score_func=f_classif)), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectFwe(data, SelectFwe.alpha=0.041, SelectFwe.score_func=f_classif), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectFwe(RobustScaler(data), SelectFwe.alpha=0.025, SelectFwe.score_func=f_classif), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectFwe(data, SelectFwe.alpha=0.023, SelectFwe.score_func=f_classif), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(data), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MinMaxScaler(StandardScaler(data)), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MinMaxScaler(RobustScaler(data)), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MinMaxScaler(data), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "MultinomialNB(SelectFwe(data, SelectFwe.alpha=0.013000000000000001, SelectFwe.score_func=f_classif), alpha=0.01, fit_prior=True)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(StandardScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=9, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(SelectFwe(data, SelectFwe.alpha=0.001, SelectFwe.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=19, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(Normalizer(data, Normalizer.norm='l2'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='max'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=19, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=14, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(Normalizer(data, Normalizer.norm='l2'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.55)", "MultinomialNB(SelectFwe(data, SelectFwe.alpha=0.037, SelectFwe.score_func=f_classif), alpha=0.1, fit_prior=True)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.3)", "ExtraTreesClassifier(RobustScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.05, min_samples_leaf=4, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "MultinomialNB(SelectFwe(SelectFwe(data, SelectFwe.alpha=0.046, SelectFwe.score_func=f_classif), SelectFwe.alpha=0.046, SelectFwe.score_func=f_classif), alpha=0.1, fit_prior=True)", "MultinomialNB(SelectFwe(data, SelectFwe.alpha=0.046, SelectFwe.score_func=f_classif), alpha=0.1, fit_prior=True)", "MultinomialNB(SelectFwe(MinMaxScaler(data), SelectFwe.alpha=0.046, SelectFwe.score_func=f_classif), alpha=0.1, fit_prior=True)", "MultinomialNB(RobustScaler(SelectPercentile(data, SelectPercentile.percentile=35, SelectPercentile.score_func=f_classif)), alpha=0.1, fit_prior=False)", "LogisticRegression(StandardScaler(RobustScaler(data)), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(data), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "MultinomialNB(SelectFwe(data, SelectFwe.alpha=0.044, SelectFwe.score_func=f_classif), alpha=0.01, fit_prior=True)", "MultinomialNB(SelectFwe(data, SelectFwe.alpha=0.046, SelectFwe.score_func=f_classif), alpha=0.01, fit_prior=True)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=5, RandomForestClassifier.min_samples_split=17, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=5, RandomForestClassifier.min_samples_split=20, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MinMaxScaler(data), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=5, RandomForestClassifier.min_samples_split=20, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MinMaxScaler(MaxAbsScaler(data)), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=5, RandomForestClassifier.min_samples_split=20, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RobustScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=5, RandomForestClassifier.min_samples_split=20, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=5, RandomForestClassifier.min_samples_split=17, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=5, RandomForestClassifier.min_samples_split=20, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=5, RandomForestClassifier.min_samples_split=20, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=5, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(data, SelectFwe.alpha=0.027, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=5, RandomForestClassifier.min_samples_split=20, RandomForestClassifier.n_estimators=100)", "LogisticRegression(SelectFwe(data, SelectFwe.alpha=0.049, SelectFwe.score_func=f_classif), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectFwe(data, SelectFwe.alpha=0.016, SelectFwe.score_func=f_classif), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectFwe(Normalizer(data, Normalizer.norm='l2'), SelectFwe.alpha=0.016, SelectFwe.score_func=f_classif), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectFwe(data, SelectFwe.alpha=0.015, SelectFwe.score_func=f_classif), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(SelectFwe(data, SelectFwe.alpha=0.034, SelectFwe.score_func=f_classif)), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectFwe(data, SelectFwe.alpha=0.003, SelectFwe.score_func=f_classif), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(SelectFwe(data, SelectFwe.alpha=0.006, SelectFwe.score_func=f_classif)), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GradientBoostingClassifier(SelectFwe(data, SelectFwe.alpha=0.049, SelectFwe.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.05, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "LogisticRegression(SelectFwe(data, SelectFwe.alpha=0.001, SelectFwe.score_func=f_classif), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectFwe(MinMaxScaler(data), SelectFwe.alpha=0.001, SelectFwe.score_func=f_classif), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectPercentile(data, SelectPercentile.percentile=37, SelectPercentile.score_func=f_classif), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectPercentile(data, SelectPercentile.percentile=46, SelectPercentile.score_func=f_classif), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectFwe(data, SelectFwe.alpha=0.03, SelectFwe.score_func=f_classif), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Normalizer(data, Normalizer.norm='l2'), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Normalizer(data, Normalizer.norm='l2'), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(data), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MaxAbsScaler(data), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=6, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.05, min_samples_leaf=6, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(SelectPercentile(data, SelectPercentile.percentile=39, SelectPercentile.score_func=f_classif), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "MultinomialNB(SelectPercentile(data, SelectPercentile.percentile=39, SelectPercentile.score_func=f_classif), alpha=0.01, fit_prior=True)", "MultinomialNB(SelectPercentile(SelectPercentile(data, SelectPercentile.percentile=83, SelectPercentile.score_func=f_classif), SelectPercentile.percentile=49, SelectPercentile.score_func=f_classif), alpha=0.01, fit_prior=True)", "LogisticRegression(SelectPercentile(data, SelectPercentile.percentile=98, SelectPercentile.score_func=f_classif), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(data), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Normalizer(data, Normalizer.norm='max'), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "MultinomialNB(SelectPercentile(data, SelectPercentile.percentile=43, SelectPercentile.score_func=f_classif), alpha=0.01, fit_prior=True)", "MultinomialNB(SelectPercentile(Normalizer(data, Normalizer.norm='max'), SelectPercentile.percentile=37, SelectPercentile.score_func=f_classif), alpha=0.1, fit_prior=False)", "MultinomialNB(RobustScaler(SelectPercentile(data, SelectPercentile.percentile=39, SelectPercentile.score_func=f_classif)), alpha=0.001, fit_prior=True)", "LogisticRegression(SelectPercentile(data, SelectPercentile.percentile=58, SelectPercentile.score_func=f_classif), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Normalizer(data, Normalizer.norm='l2'), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MinMaxScaler(data), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MinMaxScaler(MaxAbsScaler(data)), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "MultinomialNB(SelectFwe(data, SelectFwe.alpha=0.034, SelectFwe.score_func=f_classif), alpha=0.1, fit_prior=True)", "MultinomialNB(SelectPercentile(MinMaxScaler(data), SelectPercentile.percentile=48, SelectPercentile.score_func=f_classif), alpha=0.01, fit_prior=False)", "LogisticRegression(Normalizer(data, Normalizer.norm='l1'), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "MultinomialNB(SelectFwe(data, SelectFwe.alpha=0.034, SelectFwe.score_func=f_classif), alpha=0.001, fit_prior=True)", "MultinomialNB(SelectPercentile(data, SelectPercentile.percentile=58, SelectPercentile.score_func=f_classif), alpha=0.01, fit_prior=True)", "MultinomialNB(SelectFwe(data, SelectFwe.alpha=0.03, SelectFwe.score_func=f_classif), alpha=0.01, fit_prior=False)"], "jasmine": ["RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.9), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=7, RandomForestClassifier.min_samples_split=15, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.9), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=7, RandomForestClassifier.min_samples_split=18, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=7, RandomForestClassifier.min_samples_split=18, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.5), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=13, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "MultinomialNB(Binarizer(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='ward'), Binarizer.threshold=0.55), alpha=100.0, fit_prior=False)", "MultinomialNB(Binarizer(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='ward'), Binarizer.threshold=0.55), alpha=100.0, fit_prior=True)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.65), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=7, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(FastICA(RBFSampler(data, RBFSampler.gamma=0.65), FastICA.tol=0.05, FastICA.whiten='unit-variance'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=13, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='laplacian', Nystroem.n_components=2), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=6, RandomForestClassifier.min_samples_split=18, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectPercentile(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), SelectPercentile.percentile=27, SelectPercentile.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=5, RandomForestClassifier.min_samples_split=20, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.8), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.9500000000000001, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "GaussianNB(Binarizer(FeatureAgglomeration(data, FeatureAgglomeration.affinity='manhattan', FeatureAgglomeration.linkage='complete'), Binarizer.threshold=0.9500000000000001))", "KNeighborsClassifier(RBFSampler(data, RBFSampler.gamma=0.65), KNeighborsClassifier.n_neighbors=2, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='distance')", "KNeighborsClassifier(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), KNeighborsClassifier.n_neighbors=11, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='uniform')", "RandomForestClassifier(RBFSampler(MinMaxScaler(data), RBFSampler.gamma=0.8500000000000001), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=10, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.65), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=20, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=9, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.8), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "DecisionTreeClassifier(StandardScaler(RBFSampler(data, RBFSampler.gamma=0.7000000000000001)), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=3, min_samples_leaf=17, min_samples_split=4)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.65), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=4, RandomForestClassifier.min_samples_split=14, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=5, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(StandardScaler(data), RBFSampler.gamma=0.75), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "KNeighborsClassifier(RBFSampler(data, RBFSampler.gamma=0.5), KNeighborsClassifier.n_neighbors=23, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='distance')", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.5), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "KNeighborsClassifier(RBFSampler(PCA(data, PCA.iterated_power=3, PCA.svd_solver='randomized'), RBFSampler.gamma=0.6000000000000001), KNeighborsClassifier.n_neighbors=25, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='uniform')", "DecisionTreeClassifier(RBFSampler(RBFSampler(data, RBFSampler.gamma=0.4), RBFSampler.gamma=0.15000000000000002), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=3, min_samples_leaf=11, min_samples_split=14)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=19, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.1, Nystroem.kernel='sigmoid', Nystroem.n_components=1), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.15000000000000002, Nystroem.kernel='sigmoid', Nystroem.n_components=3), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.9500000000000001))", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.9), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=4, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "GaussianNB(RBFSampler(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), RBFSampler.gamma=0.1))", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.5), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=4, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.75), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=4, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectPercentile(RBFSampler(data, RBFSampler.gamma=0.75), SelectPercentile.percentile=35, SelectPercentile.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=4, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectPercentile(RBFSampler(data, RBFSampler.gamma=1.0), SelectPercentile.percentile=35, SelectPercentile.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=4, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "KNeighborsClassifier(StandardScaler(RBFSampler(data, RBFSampler.gamma=0.7000000000000001)), KNeighborsClassifier.n_neighbors=15, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='uniform')", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=4, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.8), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=4, RandomForestClassifier.min_samples_split=11, RandomForestClassifier.n_estimators=100)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=1.0), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=9, min_samples_split=16)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=6, RandomForestClassifier.min_samples_split=12, RandomForestClassifier.n_estimators=100)", "GaussianNB(RBFSampler(MinMaxScaler(data), RBFSampler.gamma=1.0))", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.55), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=6, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.55), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=6, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='sigmoid', Nystroem.n_components=3), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=6, RandomForestClassifier.min_samples_split=17, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.8, Nystroem.kernel='sigmoid', Nystroem.n_components=2), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=6, RandomForestClassifier.min_samples_split=9, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Nystroem(SelectFwe(data, SelectFwe.alpha=0.005, SelectFwe.score_func=f_classif), Nystroem.gamma=0.8, Nystroem.kernel='sigmoid', Nystroem.n_components=9), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.8, RandomForestClassifier.min_samples_leaf=19, RandomForestClassifier.min_samples_split=12, RandomForestClassifier.n_estimators=100)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.15000000000000002, Nystroem.kernel='linear', Nystroem.n_components=9), alpha=0.01, fit_prior=False)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.0), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=9, RandomForestClassifier.min_samples_split=18, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=2, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=1.0), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=2, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=19, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(SelectPercentile(RBFSampler(data, RBFSampler.gamma=1.0), SelectPercentile.percentile=37, SelectPercentile.score_func=f_classif), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7000000000000001, RandomForestClassifier.min_samples_leaf=9, RandomForestClassifier.min_samples_split=11, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.65), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.55, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=13, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(PCA(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), PCA.iterated_power=8, PCA.svd_solver='randomized'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=19, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.75), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.55, RandomForestClassifier.min_samples_leaf=9, RandomForestClassifier.min_samples_split=11, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.9), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=19, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectPercentile(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), SelectPercentile.percentile=37, SelectPercentile.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.7000000000000001, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=11, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.75), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.55, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=11, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.9), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GaussianNB(RBFSampler(FastICA(data, FastICA.tol=0.9500000000000001, FastICA.whiten='unit-variance'), RBFSampler.gamma=0.55))", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.65), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.45)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.55), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.15000000000000002, Nystroem.kernel='sigmoid', Nystroem.n_components=2), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.55, min_samples_leaf=5, min_samples_split=18, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='sigmoid', Nystroem.n_components=6), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "BernoulliNB(SelectFwe(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='cosine', Nystroem.n_components=4), SelectFwe.alpha=0.031, SelectFwe.score_func=f_classif), alpha=10.0, fit_prior=True)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='sigmoid', Nystroem.n_components=9), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "RandomForestClassifier(SelectPercentile(RBFSampler(data, RBFSampler.gamma=1.0), SelectPercentile.percentile=43, SelectPercentile.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=4, RandomForestClassifier.min_samples_split=5, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectPercentile(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), SelectPercentile.percentile=43, SelectPercentile.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=6, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectPercentile(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), SelectPercentile.percentile=50, SelectPercentile.score_func=f_classif), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=4, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.8), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=11, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(StandardScaler(data), RBFSampler.gamma=0.8500000000000001), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.05, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.15000000000000002)", "RandomForestClassifier(RBFSampler(RobustScaler(data), RBFSampler.gamma=0.6000000000000001), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=4, RandomForestClassifier.min_samples_split=11, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectPercentile(RBFSampler(data, RBFSampler.gamma=0.8), SelectPercentile.percentile=43, SelectPercentile.score_func=f_classif), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=13, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectPercentile(RBFSampler(data, RBFSampler.gamma=0.8), SelectPercentile.percentile=43, SelectPercentile.score_func=f_classif), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=4, RandomForestClassifier.min_samples_split=6, RandomForestClassifier.n_estimators=100)", "BernoulliNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l1', FeatureAgglomeration.linkage='average'), alpha=0.01, fit_prior=False)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.8), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.65), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=5, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=1.0), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=4, RandomForestClassifier.min_samples_split=10, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.5), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=10, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.75), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=6, RandomForestClassifier.min_samples_split=6, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.8), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=8, RandomForestClassifier.min_samples_split=6, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=10, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.5), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=10, RandomForestClassifier.n_estimators=100)", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.8), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')"], "kc1": ["GradientBoostingClassifier(FastICA(data, FastICA.tol=0.1, FastICA.whiten='unit-variance'), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.05)", "MultinomialNB(VarianceThreshold(SelectFwe(data, SelectFwe.alpha=0.021, SelectFwe.score_func=f_classif), VarianceThreshold.threshold=0.5), alpha=10.0, fit_prior=True)", "MultinomialNB(SelectFwe(data, SelectFwe.alpha=0.008, SelectFwe.score_func=f_classif), alpha=0.01, fit_prior=False)", "MultinomialNB(SelectFwe(data, SelectFwe.alpha=0.008, SelectFwe.score_func=f_classif), alpha=1.0, fit_prior=False)", "MultinomialNB(SelectFwe(data, SelectFwe.alpha=0.008, SelectFwe.score_func=f_classif), alpha=10.0, fit_prior=True)", "MultinomialNB(SelectFwe(data, SelectFwe.alpha=0.037, SelectFwe.score_func=f_classif), alpha=10.0, fit_prior=True)", "MultinomialNB(VarianceThreshold(data, VarianceThreshold.threshold=0.5), alpha=100.0, fit_prior=True)", "MultinomialNB(data, alpha=0.001, fit_prior=True)", "MultinomialNB(data, alpha=1.0, fit_prior=True)", "MultinomialNB(data, alpha=1.0, fit_prior=False)", "MultinomialNB(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), alpha=0.001, fit_prior=False)", "GradientBoostingClassifier(FastICA(data, FastICA.tol=0.65, FastICA.whiten='unit-variance'), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(FastICA(data, FastICA.tol=0.4, FastICA.whiten='unit-variance'), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "GradientBoostingClassifier(FastICA(data, FastICA.tol=0.8, FastICA.whiten='unit-variance'), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=12, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.5)", "MultinomialNB(SelectFwe(data, SelectFwe.alpha=0.028, SelectFwe.score_func=f_classif), alpha=1.0, fit_prior=False)", "MultinomialNB(SelectFwe(data, SelectFwe.alpha=0.02, SelectFwe.score_func=f_classif), alpha=1.0, fit_prior=True)", "MultinomialNB(data, alpha=0.001, fit_prior=True)", "MultinomialNB(data, alpha=0.001, fit_prior=False)", "MultinomialNB(SelectFwe(data, SelectFwe.alpha=0.034, SelectFwe.score_func=f_classif), alpha=100.0, fit_prior=True)", "GradientBoostingClassifier(FastICA(data, FastICA.tol=0.30000000000000004, FastICA.whiten='unit-variance'), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.7500000000000001, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "GradientBoostingClassifier(PCA(data, PCA.iterated_power=10, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.9500000000000001, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.15000000000000002)", "MultinomialNB(VarianceThreshold(data, VarianceThreshold.threshold=0.7000000000000001), alpha=0.01, fit_prior=False)", "MultinomialNB(VarianceThreshold(data, VarianceThreshold.threshold=0.55), alpha=10.0, fit_prior=False)", "MultinomialNB(data, alpha=0.1, fit_prior=True)", "MultinomialNB(data, alpha=10.0, fit_prior=False)", "GradientBoostingClassifier(PCA(data, PCA.iterated_power=9, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.15000000000000002)", "GradientBoostingClassifier(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=12, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "GradientBoostingClassifier(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=11, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(PCA(data, PCA.iterated_power=10, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7000000000000001)", "GradientBoostingClassifier(SelectPercentile(RobustScaler(data), SelectPercentile.percentile=28, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.7500000000000001, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "LogisticRegression(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "MultinomialNB(VarianceThreshold(data, VarianceThreshold.threshold=1.0), alpha=10.0, fit_prior=True)", "MultinomialNB(data, alpha=10.0, fit_prior=True)", "MultinomialNB(data, alpha=0.1, fit_prior=False)", "MultinomialNB(data, alpha=0.1, fit_prior=True)", "MultinomialNB(data, alpha=0.001, fit_prior=True)", "MultinomialNB(data, alpha=0.001, fit_prior=False)", "MultinomialNB(data, alpha=0.01, fit_prior=False)", "MultinomialNB(data, alpha=10.0, fit_prior=False)", "GradientBoostingClassifier(FastICA(data, FastICA.tol=0.1, FastICA.whiten='unit-variance'), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "LogisticRegression(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GradientBoostingClassifier(FastICA(data, FastICA.tol=0.6000000000000001, FastICA.whiten='unit-variance'), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.35000000000000003)", "GradientBoostingClassifier(FastICA(data, FastICA.tol=0.45, FastICA.whiten='unit-variance'), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "GradientBoostingClassifier(FastICA(data, FastICA.tol=0.6000000000000001, FastICA.whiten='unit-variance'), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "MultinomialNB(SelectFwe(data, SelectFwe.alpha=0.008, SelectFwe.score_func=f_classif), alpha=0.1, fit_prior=True)", "MultinomialNB(SelectFwe(data, SelectFwe.alpha=0.048, SelectFwe.score_func=f_classif), alpha=1.0, fit_prior=False)", "MultinomialNB(data, alpha=10.0, fit_prior=False)", "MultinomialNB(data, alpha=0.1, fit_prior=False)", "MultinomialNB(data, alpha=0.001, fit_prior=False)", "MultinomialNB(Normalizer(data, Normalizer.norm='l1'), alpha=100.0, fit_prior=False)", "GradientBoostingClassifier(FastICA(data, FastICA.tol=1.0, FastICA.whiten='unit-variance'), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.7500000000000001, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "GradientBoostingClassifier(FastICA(data, FastICA.tol=0.25, FastICA.whiten='unit-variance'), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=13, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.05)", "MultinomialNB(data, alpha=10.0, fit_prior=True)", "MultinomialNB(data, alpha=0.1, fit_prior=True)", "MultinomialNB(data, alpha=0.1, fit_prior=False)", "MultinomialNB(data, alpha=0.001, fit_prior=False)", "MultinomialNB(data, alpha=1.0, fit_prior=False)", "MultinomialNB(data, alpha=10.0, fit_prior=False)", "MultinomialNB(data, alpha=100.0, fit_prior=True)", "LogisticRegression(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='poly', Nystroem.n_components=10), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GradientBoostingClassifier(PCA(data, PCA.iterated_power=4, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.8500000000000001, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "GradientBoostingClassifier(PCA(data, PCA.iterated_power=9, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(PCA(data, PCA.iterated_power=4, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "GradientBoostingClassifier(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.9500000000000001, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.15000000000000002)", "GradientBoostingClassifier(PCA(data, PCA.iterated_power=7, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "LogisticRegression(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GradientBoostingClassifier(PCA(data, PCA.iterated_power=7, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "MultinomialNB(VarianceThreshold(data, VarianceThreshold.threshold=0.8500000000000001), alpha=0.001, fit_prior=False)", "MultinomialNB(SelectFwe(data, SelectFwe.alpha=0.018000000000000002, SelectFwe.score_func=f_classif), alpha=0.1, fit_prior=False)", "GradientBoostingClassifier(FastICA(data, FastICA.tol=0.2, FastICA.whiten='unit-variance'), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "MultinomialNB(VarianceThreshold(data, VarianceThreshold.threshold=0.3), alpha=0.001, fit_prior=True)", "MultinomialNB(SelectFwe(data, SelectFwe.alpha=0.02, SelectFwe.score_func=f_classif), alpha=0.001, fit_prior=True)", "MultinomialNB(data, alpha=1.0, fit_prior=True)", "MultinomialNB(data, alpha=10.0, fit_prior=True)", "MultinomialNB(data, alpha=10.0, fit_prior=False)", "KNeighborsClassifier(Binarizer(Normalizer(data, Normalizer.norm='l1'), Binarizer.threshold=0.25), KNeighborsClassifier.n_neighbors=45, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='uniform')", "GradientBoostingClassifier(FastICA(data, FastICA.tol=0.2, FastICA.whiten='unit-variance'), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7000000000000001)", "MultinomialNB(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), alpha=0.01, fit_prior=True)", "LogisticRegression(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "MultinomialNB(PolynomialFeatures(SelectFwe(data, SelectFwe.alpha=0.01, SelectFwe.score_func=f_classif), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), alpha=0.1, fit_prior=True)", "GradientBoostingClassifier(PCA(data, PCA.iterated_power=9, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "GradientBoostingClassifier(PCA(data, PCA.iterated_power=9, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=11, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "MultinomialNB(data, alpha=1.0, fit_prior=False)", "GradientBoostingClassifier(FastICA(data, FastICA.tol=0.7000000000000001, FastICA.whiten='unit-variance'), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.15000000000000002)", "GradientBoostingClassifier(PCA(data, PCA.iterated_power=9, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.8500000000000001, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.3)", "GradientBoostingClassifier(FastICA(data, FastICA.tol=0.6000000000000001, FastICA.whiten='unit-variance'), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.9500000000000001, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.45)", "GradientBoostingClassifier(PCA(data, PCA.iterated_power=5, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7000000000000001)", "GradientBoostingClassifier(FastICA(data, FastICA.tol=0.7000000000000001, FastICA.whiten='unit-variance'), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "GradientBoostingClassifier(PCA(data, PCA.iterated_power=9, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)"], "KDDCup09-Upselling": ["GaussianNB(Normalizer(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), Normalizer.norm='l1'))", "DecisionTreeClassifier(FastICA(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), FastICA.tol=0.05, FastICA.whiten='unit-variance'), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=3, min_samples_leaf=18, min_samples_split=18)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.2, Nystroem.kernel='linear', Nystroem.n_components=8), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=14, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)"], "Amazon_employee_access": ["ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.5), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=3, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=15, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(SelectPercentile(RBFSampler(data, RBFSampler.gamma=0.9), SelectPercentile.percentile=28, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.7500000000000001, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.9), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=15, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.9), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=14, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=1.0), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=3, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.4), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=15, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(data, alpha=0.1, fit_prior=True)", "BernoulliNB(MaxAbsScaler(data), alpha=0.001, fit_prior=False)", "BernoulliNB(VarianceThreshold(data, VarianceThreshold.threshold=0.55), alpha=0.1, fit_prior=False)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.65), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=8, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=2, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.55), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=7, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(Binarizer(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), Binarizer.threshold=0.05), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "KNeighborsClassifier(Binarizer(Normalizer(data, Normalizer.norm='l1'), Binarizer.threshold=0.25), KNeighborsClassifier.n_neighbors=45, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='uniform')", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.15000000000000002, Nystroem.kernel='chi2', Nystroem.n_components=1), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=3, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.75, Nystroem.kernel='laplacian', Nystroem.n_components=8), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=2, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Binarizer(data, Binarizer.threshold=0.30000000000000004), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=8, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Binarizer(data, Binarizer.threshold=0.6000000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=2, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Binarizer(data, Binarizer.threshold=0.8500000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=2, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.65))", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=1.0), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=12, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "ExtraTreesClassifier(FastICA(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), FastICA.tol=0.25, FastICA.whiten='unit-variance'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.55, min_samples_leaf=8, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(SelectFwe(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), SelectFwe.alpha=0.044, SelectFwe.score_func=f_classif), alpha=0.1, fit_prior=False)", "BernoulliNB(data, alpha=0.001, fit_prior=False)", "RandomForestClassifier(RobustScaler(Binarizer(data, Binarizer.threshold=0.25)), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=10, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.55, Nystroem.kernel='rbf', Nystroem.n_components=3), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=13, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "RandomForestClassifier(PCA(Nystroem(data, Nystroem.gamma=0.45, Nystroem.kernel='sigmoid', Nystroem.n_components=1), PCA.iterated_power=6, PCA.svd_solver='randomized'), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=10, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Binarizer(data, Binarizer.threshold=0.35000000000000003), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.9500000000000001, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=1.0), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=1, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(FastICA(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), FastICA.tol=0.1, FastICA.whiten='unit-variance'), LogisticRegression.C=0.1, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.5), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=1, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(StandardScaler(RBFSampler(data, RBFSampler.gamma=0.9)), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=16, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(RBFSampler(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='complete'), RBFSampler.gamma=0.75), alpha=0.1, fit_prior=True)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.0), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.8500000000000001, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=10, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='rbf', Nystroem.n_components=3), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.9500000000000001, RandomForestClassifier.min_samples_leaf=12, RandomForestClassifier.min_samples_split=9, RandomForestClassifier.n_estimators=100)", "BernoulliNB(data, alpha=10.0, fit_prior=False)", "RandomForestClassifier(Binarizer(data, Binarizer.threshold=0.55), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.8500000000000001, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.05, Nystroem.kernel='sigmoid', Nystroem.n_components=3), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.55, min_samples_leaf=4, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.05, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "LogisticRegression(Nystroem(data, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='poly', Nystroem.n_components=10), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.4), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=2, min_samples_leaf=18, min_samples_split=7)", "LogisticRegression(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.9), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=8, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.4), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.05, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=5, RandomForestClassifier.n_estimators=100)", "GaussianNB(RBFSampler(VarianceThreshold(data, VarianceThreshold.threshold=0.45), RBFSampler.gamma=0.15000000000000002))", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.15000000000000002, Nystroem.kernel='chi2', Nystroem.n_components=5), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6000000000000001, min_samples_leaf=5, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(data, alpha=100.0, fit_prior=True)", "ExtraTreesClassifier(Binarizer(data, Binarizer.threshold=0.1), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=3, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(RobustScaler(RBFSampler(data, RBFSampler.gamma=0.7000000000000001)), alpha=10.0, fit_prior=False)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=1.0), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=4, min_samples_split=13, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=3, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.75, Nystroem.kernel='chi2', Nystroem.n_components=5), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "LogisticRegression(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.8, Nystroem.kernel='rbf', Nystroem.n_components=7), alpha=100.0, fit_prior=False)", "BernoulliNB(data, alpha=100.0, fit_prior=False)", "RandomForestClassifier(Binarizer(data, Binarizer.threshold=0.30000000000000004), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=6, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(Binarizer(data, Binarizer.threshold=0.25), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=3, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(Nystroem(data, Nystroem.gamma=0.8, Nystroem.kernel='rbf', Nystroem.n_components=7), LogisticRegression.C=0.0001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "BernoulliNB(MinMaxScaler(FastICA(data, FastICA.tol=0.15000000000000002, FastICA.whiten='unit-variance')), alpha=0.001, fit_prior=True)", "GaussianNB(FeatureAgglomeration(Nystroem(data, Nystroem.gamma=0.25, Nystroem.kernel='rbf', Nystroem.n_components=4), FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='average'))", "BernoulliNB(SelectPercentile(data, SelectPercentile.percentile=11, SelectPercentile.score_func=f_classif), alpha=0.001, fit_prior=False)", "GradientBoostingClassifier(Binarizer(data, Binarizer.threshold=0.75), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.55)", "KNeighborsClassifier(Binarizer(data, Binarizer.threshold=0.30000000000000004), KNeighborsClassifier.n_neighbors=40, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='distance')", "BernoulliNB(StandardScaler(Binarizer(data, Binarizer.threshold=0.55)), alpha=100.0, fit_prior=False)", "GradientBoostingClassifier(Binarizer(SelectFwe(data, SelectFwe.alpha=0.034, SelectFwe.score_func=f_classif), Binarizer.threshold=0.05), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.55)", "KNeighborsClassifier(Binarizer(data, Binarizer.threshold=0.65), KNeighborsClassifier.n_neighbors=20, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='uniform')", "GradientBoostingClassifier(Binarizer(data, Binarizer.threshold=0.6000000000000001), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.55)", "KNeighborsClassifier(Binarizer(data, Binarizer.threshold=0.55), KNeighborsClassifier.n_neighbors=2, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='distance')", "BernoulliNB(FeatureAgglomeration(RBFSampler(data, RBFSampler.gamma=0.2), FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='average'), alpha=10.0, fit_prior=True)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.4), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=6, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=5, min_samples_split=13, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.0), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "BernoulliNB(PolynomialFeatures(Nystroem(data, Nystroem.gamma=0.5, Nystroem.kernel='rbf', Nystroem.n_components=2), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), alpha=1.0, fit_prior=False)", "BernoulliNB(data, alpha=10.0, fit_prior=True)", "RandomForestClassifier(Binarizer(data, Binarizer.threshold=0.55), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=17, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RobustScaler(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='rbf', Nystroem.n_components=5)), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.6000000000000001, RandomForestClassifier.min_samples_leaf=11, RandomForestClassifier.min_samples_split=12, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(Binarizer(data, Binarizer.threshold=0.55), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "ExtraTreesClassifier(Binarizer(data, Binarizer.threshold=0.6000000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=6, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.8), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=13, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.8), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=8, min_samples_leaf=4, min_samples_split=9)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.25), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=1, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.4), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=2, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=2, min_samples_split=20, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Binarizer(Normalizer(data, Normalizer.norm='l1'), Binarizer.threshold=0.9500000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=11, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(Binarizer(Normalizer(data, Normalizer.norm='l1'), Binarizer.threshold=0.9500000000000001), alpha=0.1, fit_prior=False)", "ExtraTreesClassifier(Binarizer(data, Binarizer.threshold=0.05), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=2, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(PolynomialFeatures(Binarizer(data, Binarizer.threshold=0.30000000000000004), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)"], "dilbert": ["LogisticRegression(StandardScaler(data), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(StandardScaler(data)), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MaxAbsScaler(data), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(FastICA(StandardScaler(data), FastICA.tol=0.6000000000000001, FastICA.whiten='unit-variance'), LogisticRegression.C=0.1, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(FastICA(StandardScaler(data), FastICA.tol=0.6000000000000001, FastICA.whiten='unit-variance'), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=11, min_samples_split=19, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(data, LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(data), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(StandardScaler(data)), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(Binarizer(data, Binarizer.threshold=0.6000000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=11, min_samples_split=19, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(SelectFwe(SelectFwe(data, SelectFwe.alpha=0.026000000000000002, SelectFwe.score_func=f_classif), SelectFwe.alpha=0.026000000000000002, SelectFwe.score_func=f_classif), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectFwe(data, SelectFwe.alpha=0.026000000000000002, SelectFwe.score_func=f_classif), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectFwe(data, SelectFwe.alpha=0.027, SelectFwe.score_func=f_classif), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectPercentile(data, SelectPercentile.percentile=69, SelectPercentile.score_func=f_classif), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectFwe(data, SelectFwe.alpha=0.027, SelectFwe.score_func=f_classif), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(StandardScaler(data)), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(data), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MinMaxScaler(Normalizer(data, Normalizer.norm='l1')), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MinMaxScaler(Normalizer(data, Normalizer.norm='l2')), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(data), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MaxAbsScaler(data), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MinMaxScaler(data), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Normalizer(Normalizer(data, Normalizer.norm='l2'), Normalizer.norm='max'), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Normalizer(data, Normalizer.norm='max'), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(data), LogisticRegression.C=0.1, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=0.1, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MinMaxScaler(Normalizer(data, Normalizer.norm='l2')), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(Binarizer(VarianceThreshold(data, VarianceThreshold.threshold=0.05), Binarizer.threshold=0.55), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=6, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(MinMaxScaler(data), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MaxAbsScaler(data), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(SelectPercentile(data, SelectPercentile.percentile=37, SelectPercentile.score_func=f_classif), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6000000000000001, min_samples_leaf=17, min_samples_split=19, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(MaxAbsScaler(Binarizer(data, Binarizer.threshold=0.7000000000000001)), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectFwe(data, SelectFwe.alpha=0.043000000000000003, SelectFwe.score_func=f_classif), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(data), LogisticRegression.C=0.1, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MaxAbsScaler(data), LogisticRegression.C=0.1, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=0.1, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(SelectPercentile(data, SelectPercentile.percentile=99, SelectPercentile.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=14, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=14, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(MaxAbsScaler(SelectPercentile(data, SelectPercentile.percentile=12, SelectPercentile.score_func=f_classif)), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=13, RandomForestClassifier.min_samples_split=15, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MaxAbsScaler(SelectPercentile(StandardScaler(data), SelectPercentile.percentile=12, SelectPercentile.score_func=f_classif)), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=13, RandomForestClassifier.min_samples_split=15, RandomForestClassifier.n_estimators=100)", "LogisticRegression(MinMaxScaler(data), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(RobustScaler(data)), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(data), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(FastICA(data, FastICA.tol=0.2, FastICA.whiten='unit-variance'), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=8, min_samples_split=20, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(SelectPercentile(data, SelectPercentile.percentile=90, SelectPercentile.score_func=f_classif), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MaxAbsScaler(MaxAbsScaler(data)), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MaxAbsScaler(data), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MinMaxScaler(MaxAbsScaler(data)), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectPercentile(data, SelectPercentile.percentile=90, SelectPercentile.score_func=f_classif), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=10, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=16, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.15000000000000002, min_samples_leaf=8, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Normalizer(data, Normalizer.norm='l1'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=16, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=16, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Normalizer(Normalizer(data, Normalizer.norm='l2'), Normalizer.norm='l1'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=16, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Normalizer(data, Normalizer.norm='l1'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=16, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=10, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MaxAbsScaler(data), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.15000000000000002, min_samples_leaf=12, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(MinMaxScaler(data), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MaxAbsScaler(data), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MinMaxScaler(data), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(data), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Normalizer(data, Normalizer.norm='max'), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(data), LogisticRegression.C=0.001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')"], "jungle_chess_2pcs_raw_endgame_complete": ["GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=13, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.7000000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.35000000000000003), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.45)", "GradientBoostingClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.35000000000000003), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.45)", "GradientBoostingClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.5)", "GradientBoostingClassifier(StandardScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.2)", "GradientBoostingClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.35000000000000003), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.2)", "GradientBoostingClassifier(StandardScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.9500000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.9500000000000001, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(RobustScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.9500000000000001, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.9500000000000001, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "RandomForestClassifier(PolynomialFeatures(StandardScaler(data), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=5, RandomForestClassifier.min_samples_split=9, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=10, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(StandardScaler(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized')), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=10, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(PCA(data, PCA.iterated_power=1, PCA.svd_solver='randomized'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=10, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='l1'), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=4, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='l1'), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=4, RandomForestClassifier.min_samples_split=10, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='l1'), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=4, RandomForestClassifier.min_samples_split=9, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(PCA(MinMaxScaler(data), PCA.iterated_power=3, PCA.svd_solver='randomized'), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=12, RandomForestClassifier.min_samples_split=10, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(PCA(data, PCA.iterated_power=2, PCA.svd_solver='randomized'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=6, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(PCA(data, PCA.iterated_power=3, PCA.svd_solver='randomized'), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.15000000000000002, min_samples_leaf=2, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(VarianceThreshold(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), VarianceThreshold.threshold=0.35000000000000003), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(PolynomialFeatures(MinMaxScaler(data), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=13, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(PolynomialFeatures(MinMaxScaler(data), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=13, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.8500000000000001, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.8500000000000001, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "RandomForestClassifier(VarianceThreshold(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), VarianceThreshold.threshold=0.7000000000000001), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.8, RandomForestClassifier.min_samples_leaf=6, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(PCA(data, PCA.iterated_power=7, PCA.svd_solver='randomized'), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.55, min_samples_leaf=8, min_samples_split=20, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(PCA(data, PCA.iterated_power=1, PCA.svd_solver='randomized'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.9500000000000001, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=4, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=4, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=7, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=4, min_samples_split=20, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=4, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=8, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=4, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=8, min_samples_split=20, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(MinMaxScaler(data), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(VarianceThreshold(RobustScaler(data), VarianceThreshold.threshold=0.2), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.2), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(PCA(MinMaxScaler(data), PCA.iterated_power=8, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(Normalizer(data, Normalizer.norm='l1'), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(StandardScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(StandardScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "RandomForestClassifier(PCA(MaxAbsScaler(data), PCA.iterated_power=4, PCA.svd_solver='randomized'), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.8500000000000001, RandomForestClassifier.min_samples_leaf=9, RandomForestClassifier.min_samples_split=20, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(MinMaxScaler(data), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.8500000000000001, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.8500000000000001, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(MinMaxScaler(data), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(RobustScaler(data), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(StandardScaler(data), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(RobustScaler(data), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(RobustScaler(MinMaxScaler(data)), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(MinMaxScaler(data), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.7500000000000001, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(MinMaxScaler(StandardScaler(data)), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(MinMaxScaler(data), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.7500000000000001, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.9000000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.7500000000000001, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.7500000000000001), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(RobustScaler(data), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(RobustScaler(data), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.9500000000000001, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)"], "yeast": ["LogisticRegression(RBFSampler(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), RBFSampler.gamma=0.65), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RBFSampler(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RBFSampler.gamma=0.9), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RBFSampler(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), RBFSampler.gamma=0.8500000000000001), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RBFSampler(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), RBFSampler.gamma=0.9500000000000001), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RBFSampler(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), RBFSampler.gamma=0.8), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PolynomialFeatures(RBFSampler(data, RBFSampler.gamma=0.9), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RBFSampler(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RBFSampler.gamma=0.8), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RBFSampler(RBFSampler(data, RBFSampler.gamma=0.75), RBFSampler.gamma=0.9500000000000001), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RBFSampler(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), RBFSampler.gamma=0.9), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RBFSampler(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), RBFSampler.gamma=0.7000000000000001), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=1, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RobustScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=2, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=2, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=1, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(StandardScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=2, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=1, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=1, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MinMaxScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=2, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=1, min_samples_split=18, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MinMaxScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=1, min_samples_split=19, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=1, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=1, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=1, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=1, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=1, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MinMaxScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=1, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectFwe(data, SelectFwe.alpha=0.046, SelectFwe.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=1, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=1, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=1, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=1, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=2, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=1, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=2, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=1, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectFwe(data, SelectFwe.alpha=0.026000000000000002, SelectFwe.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=1, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=2, min_samples_split=20, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=1, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=2, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(SelectFwe(data, SelectFwe.alpha=0.03, SelectFwe.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(SelectPercentile(data, SelectPercentile.percentile=92, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.6000000000000001, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.6000000000000001, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(MinMaxScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=13, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(StandardScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.6000000000000001, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=1, min_samples_split=18, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=1, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectFwe(data, SelectFwe.alpha=0.047, SelectFwe.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=1, min_samples_split=18, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=1, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectFwe(data, SelectFwe.alpha=0.017, SelectFwe.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=1, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=2, min_samples_split=19, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=1, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=1, min_samples_split=18, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(StandardScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=1, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RobustScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=2, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=14, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=10, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=15, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(data, SelectFwe.alpha=0.027, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=10, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(data, SelectFwe.alpha=0.032, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=15, RandomForestClassifier.n_estimators=100)", "LogisticRegression(RBFSampler(RBFSampler(data, RBFSampler.gamma=0.8), RBFSampler.gamma=0.8500000000000001), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "RandomForestClassifier(MaxAbsScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=13, RandomForestClassifier.n_estimators=100)", "LogisticRegression(RBFSampler(MinMaxScaler(data), RBFSampler.gamma=0.9500000000000001), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RBFSampler(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RBFSampler.gamma=0.8500000000000001), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "RandomForestClassifier(SelectFwe(RobustScaler(data), SelectFwe.alpha=0.029, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=13, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(data, SelectFwe.alpha=0.025, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=5, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=6, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(data, SelectFwe.alpha=0.042, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=9, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(data, SelectFwe.alpha=0.019, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=6, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=6, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=11, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=6, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=5, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(data, SelectFwe.alpha=0.035, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=5, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=9, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=2, min_samples_split=13, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=2, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=1, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=1, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=1, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=2, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectFwe(data, SelectFwe.alpha=0.009000000000000001, SelectFwe.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=1, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectFwe(data, SelectFwe.alpha=0.045, SelectFwe.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=2, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=1, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectFwe(data, SelectFwe.alpha=0.023, SelectFwe.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=1, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)"], "Bioresponse": ["DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.45), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=3, min_samples_leaf=13, min_samples_split=13)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.75, Nystroem.kernel='chi2', Nystroem.n_components=8), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.8500000000000001, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.5, Nystroem.kernel='laplacian', Nystroem.n_components=2), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=10, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='chi2', Nystroem.n_components=4), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=10, RandomForestClassifier.n_estimators=100)", "GaussianNB(StandardScaler(RBFSampler(data, RBFSampler.gamma=0.9500000000000001)))", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.8), alpha=0.001, fit_prior=True)", "MultinomialNB(Nystroem(data, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='poly', Nystroem.n_components=2), alpha=100.0, fit_prior=False)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.4), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=10, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(StandardScaler(RBFSampler(data, RBFSampler.gamma=0.9500000000000001)), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=10, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.05, Nystroem.kernel='polynomial', Nystroem.n_components=1), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.5, RandomForestClassifier.min_samples_leaf=5, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(Binarizer(data, Binarizer.threshold=0.7000000000000001), RBFSampler.gamma=0.25), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.15000000000000002)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='rbf', Nystroem.n_components=4), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=5, RandomForestClassifier.min_samples_split=20, RandomForestClassifier.n_estimators=100)", "KNeighborsClassifier(Binarizer(data, Binarizer.threshold=1.0), KNeighborsClassifier.n_neighbors=46, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='uniform')", "KNeighborsClassifier(Binarizer(data, Binarizer.threshold=1.0), KNeighborsClassifier.n_neighbors=28, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='uniform')", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='chi2', Nystroem.n_components=6), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=8, min_samples_leaf=17, min_samples_split=6)", "KNeighborsClassifier(PCA(Binarizer(data, Binarizer.threshold=1.0), PCA.iterated_power=9, PCA.svd_solver='randomized'), KNeighborsClassifier.n_neighbors=46, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='uniform')", "GradientBoostingClassifier(Binarizer(Normalizer(data, Normalizer.norm='l2'), Binarizer.threshold=0.9500000000000001), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.9500000000000001, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=3, min_samples_leaf=17, min_samples_split=4)", "GradientBoostingClassifier(RBFSampler(MaxAbsScaler(data), RBFSampler.gamma=0.8500000000000001), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=13, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "DecisionTreeClassifier(VarianceThreshold(StandardScaler(RBFSampler(data, RBFSampler.gamma=1.0)), VarianceThreshold.threshold=0.6500000000000001), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=7, min_samples_leaf=6, min_samples_split=15)", "BernoulliNB(SelectFwe(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='cosine', Nystroem.n_components=4), SelectFwe.alpha=0.031, SelectFwe.score_func=f_classif), alpha=10.0, fit_prior=True)", "ExtraTreesClassifier(MinMaxScaler(Binarizer(data, Binarizer.threshold=1.0)), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=4, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(Nystroem(RobustScaler(data), Nystroem.gamma=0.7000000000000001, Nystroem.kernel='rbf', Nystroem.n_components=7), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.8500000000000001, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='poly', Nystroem.n_components=6), alpha=0.1, fit_prior=False)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.75, Nystroem.kernel='laplacian', Nystroem.n_components=9), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "BernoulliNB(RBFSampler(MaxAbsScaler(data), RBFSampler.gamma=0.9), alpha=0.1, fit_prior=False)", "GaussianNB(RBFSampler(FastICA(data, FastICA.tol=0.9500000000000001, FastICA.whiten='unit-variance'), RBFSampler.gamma=0.55))", "BernoulliNB(FastICA(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), FastICA.tol=0.8, FastICA.whiten='unit-variance'), alpha=10.0, fit_prior=True)", "ExtraTreesClassifier(SelectPercentile(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), SelectPercentile.percentile=20, SelectPercentile.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=4, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(RobustScaler(data), RBFSampler.gamma=0.25), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=11, RandomForestClassifier.n_estimators=100)", "KNeighborsClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='sigmoid', Nystroem.n_components=1), KNeighborsClassifier.n_neighbors=23, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='distance')", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.5), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=7, min_samples_leaf=14, min_samples_split=4)", "GaussianNB(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'))", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.45), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=4, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(RobustScaler(data), Nystroem.gamma=0.05, Nystroem.kernel='laplacian', Nystroem.n_components=1), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=4, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "DecisionTreeClassifier(RBFSampler(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='complete'), RBFSampler.gamma=0.5), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=7, min_samples_leaf=14, min_samples_split=4)", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='polynomial', Nystroem.n_components=7), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=1, min_samples_leaf=4, min_samples_split=17)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.9500000000000001, Nystroem.kernel='linear', Nystroem.n_components=1), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.05, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.15000000000000002)", "GaussianNB(StandardScaler(data))", "GaussianNB(MinMaxScaler(Nystroem(data, Nystroem.gamma=0.55, Nystroem.kernel='chi2', Nystroem.n_components=7)))", "KNeighborsClassifier(Nystroem(data, Nystroem.gamma=0.8, Nystroem.kernel='sigmoid', Nystroem.n_components=9), KNeighborsClassifier.n_neighbors=33, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='uniform')", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.5), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "BernoulliNB(FeatureAgglomeration(Normalizer(data, Normalizer.norm='l2'), FeatureAgglomeration.affinity='l2', FeatureAgglomeration.linkage='complete'), alpha=0.001, fit_prior=True)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "DecisionTreeClassifier(RBFSampler(RBFSampler(data, RBFSampler.gamma=0.4), RBFSampler.gamma=0.15000000000000002), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=3, min_samples_leaf=11, min_samples_split=14)", "KNeighborsClassifier(RBFSampler(RobustScaler(data), RBFSampler.gamma=0.55), KNeighborsClassifier.n_neighbors=26, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='uniform')", "KNeighborsClassifier(RBFSampler(data, RBFSampler.gamma=1.0), KNeighborsClassifier.n_neighbors=48, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='uniform')", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.9), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=12, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.35000000000000003)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='rbf', Nystroem.n_components=10), alpha=100.0, fit_prior=False)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='rbf', Nystroem.n_components=10), alpha=100.0, fit_prior=True)", "ExtraTreesClassifier(MinMaxScaler(Nystroem(data, Nystroem.gamma=0.8500000000000001, Nystroem.kernel='laplacian', Nystroem.n_components=5)), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=9, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(Nystroem(SelectPercentile(data, SelectPercentile.percentile=87, SelectPercentile.score_func=f_classif), Nystroem.gamma=0.2, Nystroem.kernel='rbf', Nystroem.n_components=10), alpha=100.0, fit_prior=False)", "BernoulliNB(SelectPercentile(Nystroem(data, Nystroem.gamma=0.2, Nystroem.kernel='rbf', Nystroem.n_components=10), SelectPercentile.percentile=95, SelectPercentile.score_func=f_classif), alpha=100.0, fit_prior=False)", "DecisionTreeClassifier(Nystroem(RBFSampler(data, RBFSampler.gamma=0.2), Nystroem.gamma=0.30000000000000004, Nystroem.kernel='sigmoid', Nystroem.n_components=8), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=6, min_samples_leaf=6, min_samples_split=4)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.2, Nystroem.kernel='rbf', Nystroem.n_components=10), alpha=100.0, fit_prior=False)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=1.0), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=9, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.7000000000000001))", "GaussianNB(RBFSampler(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), RBFSampler.gamma=0.1))", "MultinomialNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='ward'), alpha=10.0, fit_prior=False)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.9), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(RBFSampler(VarianceThreshold(PCA(data, PCA.iterated_power=7, PCA.svd_solver='randomized'), VarianceThreshold.threshold=0.1), RBFSampler.gamma=0.5), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.05, GradientBoostingClassifier.min_samples_leaf=12, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.05)", "GradientBoostingClassifier(RBFSampler(VarianceThreshold(data, VarianceThreshold.threshold=0.1), RBFSampler.gamma=0.5), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.05, GradientBoostingClassifier.min_samples_leaf=12, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.05)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='rbf', Nystroem.n_components=4), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.8500000000000001, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=1.0), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=9, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.75))", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.55), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=19, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.55), LogisticRegression.C=0.001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.75), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.05, RandomForestClassifier.min_samples_leaf=17, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "MultinomialNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='ward'), alpha=0.001, fit_prior=True)", "GaussianNB(Nystroem(data, Nystroem.gamma=0.75, Nystroem.kernel='sigmoid', Nystroem.n_components=2))", "ExtraTreesClassifier(RBFSampler(Normalizer(data, Normalizer.norm='max'), RBFSampler.gamma=1.0), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.05, min_samples_leaf=6, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "MultinomialNB(Nystroem(Normalizer(data, Normalizer.norm='l2'), Nystroem.gamma=0.9500000000000001, Nystroem.kernel='chi2', Nystroem.n_components=1), alpha=100.0, fit_prior=True)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.8500000000000001, Nystroem.kernel='laplacian', Nystroem.n_components=1), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.15000000000000002, min_samples_leaf=11, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(StandardScaler(Nystroem(data, Nystroem.gamma=0.8500000000000001, Nystroem.kernel='laplacian', Nystroem.n_components=1)), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.15000000000000002, min_samples_leaf=11, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.0), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.15000000000000002, min_samples_leaf=11, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(FeatureAgglomeration(RBFSampler(data, RBFSampler.gamma=0.0), FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='average'), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=7, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(Binarizer(Normalizer(data, Normalizer.norm='l1'), Binarizer.threshold=0.05), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.05, min_samples_leaf=6, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='rbf', Nystroem.n_components=1), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=7, RandomForestClassifier.min_samples_split=18, RandomForestClassifier.n_estimators=100)", "LogisticRegression(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='poly', Nystroem.n_components=6), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='polynomial', Nystroem.n_components=4), alpha=0.001, fit_prior=True)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='laplacian', Nystroem.n_components=10), alpha=10.0, fit_prior=False)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='laplacian', Nystroem.n_components=4), alpha=0.1, fit_prior=False)", "MultinomialNB(Binarizer(data, Binarizer.threshold=1.0), alpha=0.01, fit_prior=True)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='laplacian', Nystroem.n_components=10), alpha=0.1, fit_prior=False)", "RandomForestClassifier(SelectPercentile(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='sigmoid', Nystroem.n_components=10), SelectPercentile.percentile=46, SelectPercentile.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.6000000000000001, RandomForestClassifier.min_samples_leaf=7, RandomForestClassifier.min_samples_split=6, RandomForestClassifier.n_estimators=100)", "LogisticRegression(Nystroem(SelectFwe(data, SelectFwe.alpha=0.008, SelectFwe.score_func=f_classif), Nystroem.gamma=0.8500000000000001, Nystroem.kernel='laplacian', Nystroem.n_components=2), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.9), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=19, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='sigmoid', Nystroem.n_components=2), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=14, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)"], "sf-police-incidents": ["MultinomialNB(Nystroem(RBFSampler(data, RBFSampler.gamma=0.75), Nystroem.gamma=0.9, Nystroem.kernel='laplacian', Nystroem.n_components=7), alpha=0.001, fit_prior=True)", "GaussianNB(RBFSampler(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), RBFSampler.gamma=0.9500000000000001))", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), alpha=0.01, fit_prior=True)", "GaussianNB(Binarizer(Nystroem(data, Nystroem.gamma=0.75, Nystroem.kernel='poly', Nystroem.n_components=3), Binarizer.threshold=0.6000000000000001))", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.6000000000000001))", "BernoulliNB(Binarizer(Normalizer(data, Normalizer.norm='max'), Binarizer.threshold=0.9500000000000001), alpha=1.0, fit_prior=False)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.65), alpha=0.01, fit_prior=True)", "DecisionTreeClassifier(Binarizer(data, Binarizer.threshold=0.9500000000000001), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=8, min_samples_split=12)", "GaussianNB(SelectFwe(Nystroem(data, Nystroem.gamma=0.4, Nystroem.kernel='poly', Nystroem.n_components=4), SelectFwe.alpha=0.015, SelectFwe.score_func=f_classif))", "GaussianNB(Nystroem(data, Nystroem.gamma=0.1, Nystroem.kernel='polynomial', Nystroem.n_components=8))", "GaussianNB(Nystroem(data, Nystroem.gamma=0.2, Nystroem.kernel='sigmoid', Nystroem.n_components=4))", "GaussianNB(Normalizer(Nystroem(data, Nystroem.gamma=0.2, Nystroem.kernel='poly', Nystroem.n_components=4), Normalizer.norm='l2'))", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.45), alpha=100.0, fit_prior=False)", "GaussianNB(Binarizer(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), Binarizer.threshold=0.1))", "GaussianNB(RobustScaler(Normalizer(data, Normalizer.norm='l2')))", "GaussianNB(Nystroem(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), Nystroem.gamma=0.2, Nystroem.kernel='sigmoid', Nystroem.n_components=4))", "GaussianNB(Nystroem(data, Nystroem.gamma=0.2, Nystroem.kernel='poly', Nystroem.n_components=1))", "GaussianNB(Nystroem(data, Nystroem.gamma=0.2, Nystroem.kernel='poly', Nystroem.n_components=4))", "DecisionTreeClassifier(RobustScaler(Nystroem(data, Nystroem.gamma=0.1, Nystroem.kernel='poly', Nystroem.n_components=10)), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=17, min_samples_split=20)", "GaussianNB(Nystroem(FastICA(data, FastICA.tol=0.9, FastICA.whiten='unit-variance'), Nystroem.gamma=0.2, Nystroem.kernel='poly', Nystroem.n_components=4))", "GaussianNB(Nystroem(data, Nystroem.gamma=0.1, Nystroem.kernel='sigmoid', Nystroem.n_components=9))", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.1, Nystroem.kernel='sigmoid', Nystroem.n_components=9), alpha=0.01, fit_prior=False)", "GaussianNB(StandardScaler(PCA(Binarizer(data, Binarizer.threshold=0.25), PCA.iterated_power=5, PCA.svd_solver='randomized')))", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.1, Nystroem.kernel='sigmoid', Nystroem.n_components=9), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=4, min_samples_leaf=13, min_samples_split=9)", "LogisticRegression(MinMaxScaler(RBFSampler(data, RBFSampler.gamma=1.0)), LogisticRegression.C=0.1, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=1.0), LogisticRegression.C=0.1, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "BernoulliNB(VarianceThreshold(data, VarianceThreshold.threshold=0.8), alpha=0.1, fit_prior=False)", "BernoulliNB(Normalizer(VarianceThreshold(data, VarianceThreshold.threshold=0.8), Normalizer.norm='max'), alpha=0.1, fit_prior=True)", "BernoulliNB(VarianceThreshold(data, VarianceThreshold.threshold=0.9500000000000001), alpha=10.0, fit_prior=True)", "BernoulliNB(VarianceThreshold(data, VarianceThreshold.threshold=0.8), alpha=0.1, fit_prior=True)", "GaussianNB(RBFSampler(RBFSampler(data, RBFSampler.gamma=0.75), RBFSampler.gamma=0.55))", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.30000000000000004, Nystroem.kernel='cosine', Nystroem.n_components=3), alpha=0.1, fit_prior=False)", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.9500000000000001))", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.15000000000000002))", "BernoulliNB(VarianceThreshold(data, VarianceThreshold.threshold=0.5), alpha=0.001, fit_prior=True)", "LogisticRegression(VarianceThreshold(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), VarianceThreshold.threshold=0.5), LogisticRegression.C=0.0001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Nystroem(SelectFwe(data, SelectFwe.alpha=0.049, SelectFwe.score_func=f_classif), Nystroem.gamma=0.6000000000000001, Nystroem.kernel='poly', Nystroem.n_components=4), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Normalizer(data, Normalizer.norm='max'), LogisticRegression.C=0.0001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Normalizer(data, Normalizer.norm='l2'), LogisticRegression.C=0.0001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Normalizer(data, Normalizer.norm='max'), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "BernoulliNB(Nystroem(SelectFwe(data, SelectFwe.alpha=0.039, SelectFwe.score_func=f_classif), Nystroem.gamma=0.55, Nystroem.kernel='sigmoid', Nystroem.n_components=4), alpha=100.0, fit_prior=False)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='sigmoid', Nystroem.n_components=4), alpha=100.0, fit_prior=False)", "DecisionTreeClassifier(Nystroem(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), Nystroem.gamma=0.15000000000000002, Nystroem.kernel='laplacian', Nystroem.n_components=3), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=6, min_samples_leaf=18, min_samples_split=11)", "ExtraTreesClassifier(Nystroem(PCA(data, PCA.iterated_power=1, PCA.svd_solver='randomized'), Nystroem.gamma=0.4, Nystroem.kernel='rbf', Nystroem.n_components=2), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=18, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "GaussianNB(Nystroem(data, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='laplacian', Nystroem.n_components=4))", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='linear', Nystroem.n_components=4), alpha=100.0, fit_prior=False)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.2), alpha=0.1, fit_prior=True)", "DecisionTreeClassifier(Normalizer(Nystroem(data, Nystroem.gamma=0.5, Nystroem.kernel='laplacian', Nystroem.n_components=10), Normalizer.norm='l1'), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=5, min_samples_leaf=4, min_samples_split=5)", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.15000000000000002, Nystroem.kernel='laplacian', Nystroem.n_components=3), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=6, min_samples_leaf=18, min_samples_split=11)", "BernoulliNB(Normalizer(Nystroem(data, Nystroem.gamma=0.30000000000000004, Nystroem.kernel='linear', Nystroem.n_components=6), Normalizer.norm='max'), alpha=0.01, fit_prior=False)", "GaussianNB(Nystroem(SelectFwe(data, SelectFwe.alpha=0.009000000000000001, SelectFwe.score_func=f_classif), Nystroem.gamma=0.1, Nystroem.kernel='cosine', Nystroem.n_components=6))", "GaussianNB(Normalizer(Nystroem(data, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='poly', Nystroem.n_components=10), Normalizer.norm='l1'))", "BernoulliNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='complete'), alpha=1.0, fit_prior=False)", "BernoulliNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='complete'), alpha=10.0, fit_prior=True)", "GaussianNB(Binarizer(Normalizer(data, Normalizer.norm='l1'), Binarizer.threshold=0.5))", "GaussianNB(Nystroem(data, Nystroem.gamma=0.4, Nystroem.kernel='laplacian', Nystroem.n_components=4))", "BernoulliNB(VarianceThreshold(data, VarianceThreshold.threshold=0.9500000000000001), alpha=10.0, fit_prior=False)", "BernoulliNB(VarianceThreshold(data, VarianceThreshold.threshold=0.55), alpha=10.0, fit_prior=False)", "BernoulliNB(RBFSampler(SelectPercentile(data, SelectPercentile.percentile=74, SelectPercentile.score_func=f_classif), RBFSampler.gamma=0.8500000000000001), alpha=0.1, fit_prior=False)", "MultinomialNB(VarianceThreshold(data, VarianceThreshold.threshold=0.2), alpha=10.0, fit_prior=False)", "GaussianNB(StandardScaler(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized')))", "LogisticRegression(StandardScaler(RBFSampler(data, RBFSampler.gamma=0.7000000000000001)), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RBFSampler(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='linear', Nystroem.n_components=9), RBFSampler.gamma=0.7000000000000001), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "DecisionTreeClassifier(Nystroem(PCA(data, PCA.iterated_power=5, PCA.svd_solver='randomized'), Nystroem.gamma=0.55, Nystroem.kernel='sigmoid', Nystroem.n_components=1), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=16, min_samples_split=4)", "BernoulliNB(RobustScaler(Nystroem(data, Nystroem.gamma=0.65, Nystroem.kernel='laplacian', Nystroem.n_components=7)), alpha=0.01, fit_prior=False)", "GaussianNB(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='poly', Nystroem.n_components=10))", "GaussianNB(VarianceThreshold(Nystroem(data, Nystroem.gamma=0.75, Nystroem.kernel='poly', Nystroem.n_components=9), VarianceThreshold.threshold=0.1))", "GaussianNB(VarianceThreshold(RobustScaler(Nystroem(data, Nystroem.gamma=0.75, Nystroem.kernel='poly', Nystroem.n_components=9)), VarianceThreshold.threshold=0.1))", "GaussianNB(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='linear', Nystroem.n_components=9))", "LogisticRegression(VarianceThreshold(data, VarianceThreshold.threshold=0.45), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GaussianNB(Nystroem(data, Nystroem.gamma=0.25, Nystroem.kernel='cosine', Nystroem.n_components=3))", "GaussianNB(StandardScaler(PCA(data, PCA.iterated_power=3, PCA.svd_solver='randomized')))", "GaussianNB(Binarizer(Nystroem(data, Nystroem.gamma=0.45, Nystroem.kernel='laplacian', Nystroem.n_components=2), Binarizer.threshold=0.9500000000000001))", "GaussianNB(RBFSampler(Normalizer(data, Normalizer.norm='l1'), RBFSampler.gamma=0.45))", "GaussianNB(RBFSampler(RBFSampler(data, RBFSampler.gamma=0.45), RBFSampler.gamma=1.0))", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), alpha=0.01, fit_prior=False)", "GaussianNB(RobustScaler(RBFSampler(data, RBFSampler.gamma=0.45)))", "BernoulliNB(RBFSampler(SelectFwe(data, SelectFwe.alpha=0.007, SelectFwe.score_func=f_classif), RBFSampler.gamma=0.7000000000000001), alpha=0.01, fit_prior=False)", "GaussianNB(RBFSampler(SelectPercentile(data, SelectPercentile.percentile=38, SelectPercentile.score_func=f_classif), RBFSampler.gamma=0.8500000000000001))", "DecisionTreeClassifier(StandardScaler(Binarizer(data, Binarizer.threshold=1.0)), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=1, min_samples_leaf=9, min_samples_split=14)", "LogisticRegression(Nystroem(data, Nystroem.gamma=0.25, Nystroem.kernel='laplacian', Nystroem.n_components=3), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "MultinomialNB(Nystroem(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='ward'), Nystroem.gamma=1.0, Nystroem.kernel='poly', Nystroem.n_components=1), alpha=0.001, fit_prior=True)", "RandomForestClassifier(Binarizer(FeatureAgglomeration(data, FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='complete'), Binarizer.threshold=0.2), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=9, RandomForestClassifier.min_samples_split=11, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(Nystroem(VarianceThreshold(data, VarianceThreshold.threshold=0.5), Nystroem.gamma=0.55, Nystroem.kernel='sigmoid', Nystroem.n_components=3), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.6000000000000001, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "MultinomialNB(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='poly', Nystroem.n_components=1), alpha=0.001, fit_prior=True)", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), LogisticRegression.C=0.0001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.15000000000000002))", "MultinomialNB(Normalizer(VarianceThreshold(data, VarianceThreshold.threshold=0.2), Normalizer.norm='max'), alpha=0.001, fit_prior=True)", "MultinomialNB(VarianceThreshold(data, VarianceThreshold.threshold=0.2), alpha=0.001, fit_prior=True)"], "mfeat-factors": ["LogisticRegression(MinMaxScaler(VarianceThreshold(data, VarianceThreshold.threshold=1.0)), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MinMaxScaler(data), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GradientBoostingClassifier(MinMaxScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(StandardScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(MinMaxScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(MinMaxScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(MinMaxScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=13, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=8, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "LogisticRegression(StandardScaler(data), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.15000000000000002)), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(SelectFwe(data, SelectFwe.alpha=0.031, SelectFwe.score_func=f_classif)), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(MaxAbsScaler(data)), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(StandardScaler(data)), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(MaxAbsScaler(data)), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(SelectFwe(data, SelectFwe.alpha=0.013000000000000001, SelectFwe.score_func=f_classif)), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.3)), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(data), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(RobustScaler(data)), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(FastICA(FastICA(data, FastICA.tol=0.9, FastICA.whiten='unit-variance'), FastICA.tol=0.1, FastICA.whiten='unit-variance'), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.3)), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(data), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(MinMaxScaler(data)), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(data), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(FastICA(data, FastICA.tol=0.4, FastICA.whiten='unit-variance'), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(data), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(FastICA(data, FastICA.tol=0.1, FastICA.whiten='unit-variance'), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(FastICA(data, FastICA.tol=0.25, FastICA.whiten='unit-variance'), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(SelectPercentile(data, SelectPercentile.percentile=87, SelectPercentile.score_func=f_classif)), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(Normalizer(data, Normalizer.norm='l1')), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(data), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(Normalizer(data, Normalizer.norm='l1')), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(data), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(SelectFwe(data, SelectFwe.alpha=0.017, SelectFwe.score_func=f_classif)), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(data), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(SelectFwe(data, SelectFwe.alpha=0.029, SelectFwe.score_func=f_classif)), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(VarianceThreshold(RobustScaler(data), VarianceThreshold.threshold=0.15000000000000002), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(RobustScaler(data)), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(StandardScaler(data)), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(FastICA(data, FastICA.tol=0.35000000000000003, FastICA.whiten='unit-variance'), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(FastICA(data, FastICA.tol=0.4, FastICA.whiten='unit-variance'), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(FastICA(StandardScaler(data), FastICA.tol=0.4, FastICA.whiten='unit-variance'), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(VarianceThreshold(FastICA(data, FastICA.tol=0.4, FastICA.whiten='unit-variance'), VarianceThreshold.threshold=0.9500000000000001), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(Normalizer(data, Normalizer.norm='l1')), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(FastICA(RobustScaler(data), FastICA.tol=0.5, FastICA.whiten='unit-variance'), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(FastICA(PCA(data, PCA.iterated_power=9, PCA.svd_solver='randomized'), FastICA.tol=1.0, FastICA.whiten='unit-variance'), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(FastICA(data, FastICA.tol=0.8500000000000001, FastICA.whiten='unit-variance'), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(data), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(FastICA(data, FastICA.tol=0.35000000000000003, FastICA.whiten='unit-variance'), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(data), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(data), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(RobustScaler(data)), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(data), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(MinMaxScaler(data)), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(MaxAbsScaler(data)), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(data), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectFwe(RobustScaler(data), SelectFwe.alpha=0.027, SelectFwe.score_func=f_classif), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(FastICA(data, FastICA.tol=0.0, FastICA.whiten='unit-variance'), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(FastICA(data, FastICA.tol=0.8500000000000001, FastICA.whiten='unit-variance'), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(StandardScaler(data)), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(RobustScaler(StandardScaler(data))), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(RobustScaler(data)), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(data), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.6500000000000001)), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(data), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.7500000000000001)), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(data), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(StandardScaler(data)), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(MinMaxScaler(data)), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GradientBoostingClassifier(Normalizer(data, Normalizer.norm='l1'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.15000000000000002), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "GradientBoostingClassifier(RobustScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "LogisticRegression(VarianceThreshold(data, VarianceThreshold.threshold=0.45), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(data, LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectFwe(data, SelectFwe.alpha=0.008, SelectFwe.score_func=f_classif), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "RandomForestClassifier(Normalizer(data, Normalizer.norm='l1'), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=5, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Normalizer(data, Normalizer.norm='l2'), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(StandardScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "LogisticRegression(StandardScaler(data), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(StandardScaler(data)), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(data), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(data), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(FastICA(data, FastICA.tol=0.05, FastICA.whiten='unit-variance'), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(FastICA(data, FastICA.tol=0.5, FastICA.whiten='unit-variance'), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(VarianceThreshold(FastICA(data, FastICA.tol=0.7000000000000001, FastICA.whiten='unit-variance'), VarianceThreshold.threshold=0.9000000000000001), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(data), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(SelectFwe(RobustScaler(data), SelectFwe.alpha=0.048, SelectFwe.score_func=f_classif), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(FastICA(data, FastICA.tol=0.6000000000000001, FastICA.whiten='unit-variance'), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')"], "vehicle": ["LogisticRegression(PolynomialFeatures(StandardScaler(data), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GradientBoostingClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=8, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.05, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(PolynomialFeatures(MinMaxScaler(data), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.05, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.05, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "LogisticRegression(StandardScaler(StandardScaler(data)), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(RobustScaler(data)), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(data), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(VarianceThreshold(StandardScaler(data), VarianceThreshold.threshold=0.55), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(VarianceThreshold(data, VarianceThreshold.threshold=1.0)), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GradientBoostingClassifier(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(PCA(data, PCA.iterated_power=2, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(PCA(data, PCA.iterated_power=9, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(PCA(PCA(data, PCA.iterated_power=7, PCA.svd_solver='randomized'), PCA.iterated_power=8, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(PCA(StandardScaler(data), PCA.iterated_power=8, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(PCA(data, PCA.iterated_power=10, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(PCA(data, PCA.iterated_power=10, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "LogisticRegression(FastICA(Normalizer(data, Normalizer.norm='l2'), FastICA.tol=0.4, FastICA.whiten='unit-variance'), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(FastICA(Normalizer(data, Normalizer.norm='l2'), FastICA.tol=0.2, FastICA.whiten='unit-variance'), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(FastICA(Normalizer(data, Normalizer.norm='l2'), FastICA.tol=0.8500000000000001, FastICA.whiten='unit-variance'), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PCA(StandardScaler(data), PCA.iterated_power=1, PCA.svd_solver='randomized'), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PCA(StandardScaler(data), PCA.iterated_power=4, PCA.svd_solver='randomized'), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PCA(StandardScaler(data), PCA.iterated_power=7, PCA.svd_solver='randomized'), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PCA(StandardScaler(data), PCA.iterated_power=3, PCA.svd_solver='randomized'), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PCA(StandardScaler(data), PCA.iterated_power=6, PCA.svd_solver='randomized'), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PCA(StandardScaler(data), PCA.iterated_power=9, PCA.svd_solver='randomized'), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PCA(StandardScaler(data), PCA.iterated_power=5, PCA.svd_solver='randomized'), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(MaxAbsScaler(data)), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(data), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(VarianceThreshold(data, VarianceThreshold.threshold=1.0)), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.6000000000000001)), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(VarianceThreshold(StandardScaler(data), VarianceThreshold.threshold=0.1), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(StandardScaler(data)), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(RobustScaler(data)), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(data), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PCA(StandardScaler(data), PCA.iterated_power=8, PCA.svd_solver='randomized'), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(StandardScaler(data)), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GradientBoostingClassifier(PCA(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), PCA.iterated_power=3, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.55)", "GradientBoostingClassifier(PCA(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), PCA.iterated_power=5, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "LogisticRegression(RobustScaler(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False)), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GradientBoostingClassifier(PCA(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), PCA.iterated_power=5, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "LogisticRegression(PCA(StandardScaler(data), PCA.iterated_power=2, PCA.svd_solver='randomized'), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PCA(StandardScaler(data), PCA.iterated_power=8, PCA.svd_solver='randomized'), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PCA(StandardScaler(data), PCA.iterated_power=10, PCA.svd_solver='randomized'), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PCA(StandardScaler(data), PCA.iterated_power=7, PCA.svd_solver='randomized'), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PCA(StandardScaler(data), PCA.iterated_power=4, PCA.svd_solver='randomized'), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(PCA(StandardScaler(data), PCA.iterated_power=1, PCA.svd_solver='randomized'), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GradientBoostingClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=12, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "LogisticRegression(StandardScaler(data), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(data), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(MinMaxScaler(data)), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GradientBoostingClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "LogisticRegression(RobustScaler(RobustScaler(data)), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(data), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(MinMaxScaler(data)), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GradientBoostingClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "LogisticRegression(StandardScaler(RobustScaler(data)), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(data), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(MaxAbsScaler(data)), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(MinMaxScaler(data)), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.4)), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(data), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(RobustScaler(data)), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(VarianceThreshold(data, VarianceThreshold.threshold=0.7000000000000001)), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GradientBoostingClassifier(PolynomialFeatures(MinMaxScaler(data), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "LogisticRegression(FastICA(FastICA(data, FastICA.tol=0.65, FastICA.whiten='unit-variance'), FastICA.tol=0.0, FastICA.whiten='unit-variance'), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(FastICA(data, FastICA.tol=0.8500000000000001, FastICA.whiten='unit-variance')), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(FastICA(data, FastICA.tol=0.65, FastICA.whiten='unit-variance')), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(FastICA(data, FastICA.tol=0.2, FastICA.whiten='unit-variance')), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(FastICA(data, FastICA.tol=0.15000000000000002, FastICA.whiten='unit-variance')), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(FastICA(data, FastICA.tol=0.0, FastICA.whiten='unit-variance')), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(FastICA(data, FastICA.tol=0.35000000000000003, FastICA.whiten='unit-variance')), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(FastICA(data, FastICA.tol=0.05, FastICA.whiten='unit-variance')), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(FastICA(FastICA(data, FastICA.tol=0.65, FastICA.whiten='unit-variance'), FastICA.tol=0.05, FastICA.whiten='unit-variance'), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(FastICA(data, FastICA.tol=0.9, FastICA.whiten='unit-variance')), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')"], "jannis": ["ExtraTreesClassifier(SelectFwe(data, SelectFwe.alpha=0.034, SelectFwe.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=8, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectFwe(data, SelectFwe.alpha=0.019, SelectFwe.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=8, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MaxAbsScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=8, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RobustScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=8, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=8, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectPercentile(data, SelectPercentile.percentile=75, SelectPercentile.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=4, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=8, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=10, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=8, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectFwe(data, SelectFwe.alpha=0.019, SelectFwe.score_func=f_classif), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=8, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectFwe(data, SelectFwe.alpha=0.035, SelectFwe.score_func=f_classif), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=13, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectFwe(data, SelectFwe.alpha=0.015, SelectFwe.score_func=f_classif), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=19, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectFwe(data, SelectFwe.alpha=0.001, SelectFwe.score_func=f_classif), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=19, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=13, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectFwe(data, SelectFwe.alpha=0.035, SelectFwe.score_func=f_classif), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=19, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=19, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RobustScaler(data), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=19, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=19, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=19, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(VarianceThreshold(SelectPercentile(data, SelectPercentile.percentile=88, SelectPercentile.score_func=f_classif), VarianceThreshold.threshold=0.45), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6000000000000001, min_samples_leaf=5, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectFwe(data, SelectFwe.alpha=0.036000000000000004, SelectFwe.score_func=f_classif), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=3, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=4, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=4, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=4, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectPercentile(RobustScaler(data), SelectPercentile.percentile=81, SelectPercentile.score_func=f_classif), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=8, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RobustScaler(data), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=8, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=8, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=13, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=8, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=13, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=4, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=13, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=4, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RobustScaler(data), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=4, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=4, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RobustScaler(data), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=4, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=10, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=13, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=13, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=5, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=16, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MinMaxScaler(SelectFwe(data, SelectFwe.alpha=0.044, SelectFwe.score_func=f_classif)), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=5, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(StandardScaler(MinMaxScaler(SelectFwe(data, SelectFwe.alpha=0.022, SelectFwe.score_func=f_classif))), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=5, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RobustScaler(SelectFwe(data, SelectFwe.alpha=0.022, SelectFwe.score_func=f_classif)), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=5, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MinMaxScaler(SelectFwe(data, SelectFwe.alpha=0.022, SelectFwe.score_func=f_classif)), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=6, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=16, min_samples_split=18, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MinMaxScaler(SelectFwe(data, SelectFwe.alpha=0.022, SelectFwe.score_func=f_classif)), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=5, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=16, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MinMaxScaler(SelectFwe(data, SelectFwe.alpha=0.004, SelectFwe.score_func=f_classif)), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=6, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=16, min_samples_split=18, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectFwe(FastICA(data, FastICA.tol=0.6000000000000001, FastICA.whiten='unit-variance'), SelectFwe.alpha=0.041, SelectFwe.score_func=f_classif), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=9, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectFwe(FastICA(data, FastICA.tol=0.6000000000000001, FastICA.whiten='unit-variance'), SelectFwe.alpha=0.041, SelectFwe.score_func=f_classif), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=11, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectFwe(FastICA(StandardScaler(data), FastICA.tol=0.6000000000000001, FastICA.whiten='unit-variance'), SelectFwe.alpha=0.041, SelectFwe.score_func=f_classif), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=11, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(FastICA(StandardScaler(data), FastICA.tol=0.0, FastICA.whiten='unit-variance'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=18, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(FastICA(StandardScaler(data), FastICA.tol=0.0, FastICA.whiten='unit-variance'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=18, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(FastICA(data, FastICA.tol=0.1, FastICA.whiten='unit-variance'), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "DecisionTreeClassifier(MinMaxScaler(data), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=6, min_samples_leaf=3, min_samples_split=14)", "DecisionTreeClassifier(MinMaxScaler(RobustScaler(data)), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=6, min_samples_leaf=3, min_samples_split=14)", "LogisticRegression(RobustScaler(data), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "DecisionTreeClassifier(SelectFwe(MinMaxScaler(RobustScaler(data)), SelectFwe.alpha=0.026000000000000002, SelectFwe.score_func=f_classif), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=6, min_samples_leaf=3, min_samples_split=14)", "ExtraTreesClassifier(SelectPercentile(data, SelectPercentile.percentile=44, SelectPercentile.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=2, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Normalizer(SelectPercentile(data, SelectPercentile.percentile=44, SelectPercentile.score_func=f_classif), Normalizer.norm='max'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=2, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=2, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MinMaxScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=2, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MinMaxScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=2, min_samples_split=20, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MinMaxScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=4, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectPercentile(data, SelectPercentile.percentile=39, SelectPercentile.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=2, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RobustScaler(data), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=17, min_samples_split=18, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RobustScaler(MaxAbsScaler(data)), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=17, min_samples_split=18, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RobustScaler(data), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=17, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MinMaxScaler(data), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=19, min_samples_split=18, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.2), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.2, min_samples_leaf=3, min_samples_split=13, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(StandardScaler(data), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(data), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(data), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(data), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(data), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(data), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RobustScaler(StandardScaler(data)), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.2), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.2, min_samples_leaf=3, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=16, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=2, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectFwe(data, SelectFwe.alpha=0.028, SelectFwe.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=13, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=16, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectFwe(data, SelectFwe.alpha=0.002, SelectFwe.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=13, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=16, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectFwe(data, SelectFwe.alpha=0.002, SelectFwe.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=16, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectPercentile(MinMaxScaler(data), SelectPercentile.percentile=53, SelectPercentile.score_func=f_classif), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=13, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectFwe(data, SelectFwe.alpha=0.002, SelectFwe.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=16, min_samples_split=20, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectFwe(data, SelectFwe.alpha=0.002, SelectFwe.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=16, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)"], "riccardo": ["DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.55, Nystroem.kernel='laplacian', Nystroem.n_components=3), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=3, min_samples_leaf=17, min_samples_split=9)", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.0), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "MultinomialNB(Nystroem(VarianceThreshold(data, VarianceThreshold.threshold=0.45), Nystroem.gamma=0.30000000000000004, Nystroem.kernel='rbf', Nystroem.n_components=3), alpha=100.0, fit_prior=True)", "LogisticRegression(Nystroem(data, Nystroem.gamma=0.15000000000000002, Nystroem.kernel='laplacian', Nystroem.n_components=2), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "BernoulliNB(PCA(RBFSampler(data, RBFSampler.gamma=0.2), PCA.iterated_power=5, PCA.svd_solver='randomized'), alpha=0.001, fit_prior=True)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=2, min_samples_split=18)", "DecisionTreeClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.2), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=3, min_samples_leaf=12, min_samples_split=14)", "DecisionTreeClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.2), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=4, min_samples_leaf=2, min_samples_split=18)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=3, min_samples_leaf=2, min_samples_split=20)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=3, min_samples_leaf=2, min_samples_split=18)", "MultinomialNB(Nystroem(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), Nystroem.gamma=0.8500000000000001, Nystroem.kernel='rbf', Nystroem.n_components=1), alpha=0.01, fit_prior=True)", "DecisionTreeClassifier(PCA(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='rbf', Nystroem.n_components=1), PCA.iterated_power=9, PCA.svd_solver='randomized'), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=8, min_samples_leaf=10, min_samples_split=4)", "BernoulliNB(Nystroem(MinMaxScaler(data), Nystroem.gamma=0.55, Nystroem.kernel='rbf', Nystroem.n_components=4), alpha=0.01, fit_prior=True)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.75, Nystroem.kernel='laplacian', Nystroem.n_components=6), alpha=0.01, fit_prior=False)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), alpha=0.01, fit_prior=False)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), alpha=0.01, fit_prior=True)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.9), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7000000000000001)", "BernoulliNB(Binarizer(SelectPercentile(data, SelectPercentile.percentile=29, SelectPercentile.score_func=f_classif), Binarizer.threshold=0.5), alpha=10.0, fit_prior=False)", "BernoulliNB(StandardScaler(data), alpha=0.01, fit_prior=False)", "LogisticRegression(SelectFwe(MaxAbsScaler(data), SelectFwe.alpha=0.007, SelectFwe.score_func=f_classif), LogisticRegression.C=0.0001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='rbf', Nystroem.n_components=7), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.2)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='rbf', Nystroem.n_components=7), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "GaussianNB(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='rbf', Nystroem.n_components=7))", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='rbf', Nystroem.n_components=7), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.45, Nystroem.kernel='linear', Nystroem.n_components=9), alpha=0.01, fit_prior=False)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='linear', Nystroem.n_components=9), alpha=0.01, fit_prior=False)", "GaussianNB(MaxAbsScaler(Nystroem(data, Nystroem.gamma=0.4, Nystroem.kernel='polynomial', Nystroem.n_components=7)))", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.9), alpha=100.0, fit_prior=False)", "GradientBoostingClassifier(SelectPercentile(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), SelectPercentile.percentile=37, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=8, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.5)", "BernoulliNB(FastICA(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='linear', Nystroem.n_components=9), FastICA.tol=0.7000000000000001, FastICA.whiten='unit-variance'), alpha=0.01, fit_prior=False)", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='sigmoid', Nystroem.n_components=2), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=3, min_samples_leaf=13, min_samples_split=17)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='sigmoid', Nystroem.n_components=2), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=1.0, RandomForestClassifier.min_samples_leaf=11, RandomForestClassifier.min_samples_split=11, RandomForestClassifier.n_estimators=100)", "LogisticRegression(SelectPercentile(RBFSampler(data, RBFSampler.gamma=0.0), SelectPercentile.percentile=67, SelectPercentile.score_func=f_classif), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='sigmoid', Nystroem.n_components=2), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.7500000000000001, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.35000000000000003)", "GaussianNB(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='cosine', Nystroem.n_components=6))", "GaussianNB(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='cosine', Nystroem.n_components=4))", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GaussianNB(Nystroem(MinMaxScaler(data), Nystroem.gamma=0.35000000000000003, Nystroem.kernel='cosine', Nystroem.n_components=4))", "GaussianNB(Nystroem(SelectFwe(data, SelectFwe.alpha=0.044, SelectFwe.score_func=f_classif), Nystroem.gamma=0.35000000000000003, Nystroem.kernel='cosine', Nystroem.n_components=4))", "DecisionTreeClassifier(RobustScaler(data), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=13, min_samples_split=13)", "MultinomialNB(SelectPercentile(Nystroem(data, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='rbf', Nystroem.n_components=9), SelectPercentile.percentile=39, SelectPercentile.score_func=f_classif), alpha=1.0, fit_prior=False)", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.1, Nystroem.kernel='laplacian', Nystroem.n_components=7), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=6, min_samples_leaf=8, min_samples_split=6)", "BernoulliNB(FeatureAgglomeration(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), FeatureAgglomeration.affinity='manhattan', FeatureAgglomeration.linkage='complete'), alpha=0.01, fit_prior=True)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), alpha=0.001, fit_prior=True)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.8), alpha=0.01, fit_prior=True)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), alpha=10.0, fit_prior=True)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.8), alpha=0.01, fit_prior=False)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), alpha=0.01, fit_prior=False)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), alpha=0.01, fit_prior=True)", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.45))", "RandomForestClassifier(Binarizer(Normalizer(data, Normalizer.norm='l2'), Binarizer.threshold=1.0), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=6, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=2, min_samples_leaf=14, min_samples_split=14)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.65), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=2, min_samples_leaf=20, min_samples_split=14)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=2, min_samples_leaf=14, min_samples_split=14)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=2, min_samples_leaf=14, min_samples_split=10)", "GaussianNB(Binarizer(SelectFwe(data, SelectFwe.alpha=0.032, SelectFwe.score_func=f_classif), Binarizer.threshold=0.8))", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=10, min_samples_leaf=14, min_samples_split=8)", "DecisionTreeClassifier(MinMaxScaler(SelectFwe(data, SelectFwe.alpha=0.031, SelectFwe.score_func=f_classif)), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=2, min_samples_leaf=14, min_samples_split=14)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=2, min_samples_leaf=3, min_samples_split=14)", "DecisionTreeClassifier(StandardScaler(MaxAbsScaler(data)), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=2, min_samples_leaf=14, min_samples_split=14)", "BernoulliNB(Nystroem(Normalizer(data, Normalizer.norm='l1'), Nystroem.gamma=0.35000000000000003, Nystroem.kernel='linear', Nystroem.n_components=6), alpha=10.0, fit_prior=True)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.75), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=1, min_samples_leaf=19, min_samples_split=8)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.75), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=1, min_samples_leaf=19, min_samples_split=20)", "LogisticRegression(MinMaxScaler(RBFSampler(data, RBFSampler.gamma=0.45)), LogisticRegression.C=0.001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "DecisionTreeClassifier(Nystroem(MinMaxScaler(data), Nystroem.gamma=0.25, Nystroem.kernel='rbf', Nystroem.n_components=6), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=7, min_samples_leaf=18, min_samples_split=10)", "GaussianNB(RBFSampler(SelectFwe(data, SelectFwe.alpha=0.036000000000000004, SelectFwe.score_func=f_classif), RBFSampler.gamma=0.8500000000000001))", "LogisticRegression(MaxAbsScaler(RBFSampler(data, RBFSampler.gamma=0.2)), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.75), alpha=10.0, fit_prior=True)", "BernoulliNB(SelectPercentile(VarianceThreshold(data, VarianceThreshold.threshold=0.45), SelectPercentile.percentile=44, SelectPercentile.score_func=f_classif), alpha=10.0, fit_prior=False)", "BernoulliNB(MinMaxScaler(data), alpha=100.0, fit_prior=True)", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.5, Nystroem.kernel='sigmoid', Nystroem.n_components=2), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=4, min_samples_leaf=18, min_samples_split=17)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.9, Nystroem.kernel='cosine', Nystroem.n_components=6), alpha=0.01, fit_prior=True)", "DecisionTreeClassifier(FastICA(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), FastICA.tol=0.05, FastICA.whiten='unit-variance'), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=3, min_samples_leaf=18, min_samples_split=18)", "BernoulliNB(Nystroem(SelectFwe(data, SelectFwe.alpha=0.006, SelectFwe.score_func=f_classif), Nystroem.gamma=0.9, Nystroem.kernel='cosine', Nystroem.n_components=6), alpha=0.01, fit_prior=True)", "GaussianNB(RBFSampler(MinMaxScaler(data), RBFSampler.gamma=1.0))", "GradientBoostingClassifier(RBFSampler(MaxAbsScaler(data), RBFSampler.gamma=0.2), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=8, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "DecisionTreeClassifier(RBFSampler(Binarizer(data, Binarizer.threshold=0.25), RBFSampler.gamma=0.2), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=6, min_samples_leaf=11, min_samples_split=9)", "DecisionTreeClassifier(RobustScaler(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='polynomial', Nystroem.n_components=7)), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=4, min_samples_leaf=18, min_samples_split=17)", "GaussianNB(RBFSampler(Normalizer(data, Normalizer.norm='l1'), RBFSampler.gamma=1.0))", "BernoulliNB(MinMaxScaler(data), alpha=100.0, fit_prior=False)", "ExtraTreesClassifier(FeatureAgglomeration(RBFSampler(data, RBFSampler.gamma=0.0), FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='average'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=7, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(SelectPercentile(Nystroem(data, Nystroem.gamma=0.8, Nystroem.kernel='sigmoid', Nystroem.n_components=8), SelectPercentile.percentile=20, SelectPercentile.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.5, RandomForestClassifier.min_samples_leaf=7, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(Binarizer(RBFSampler(Binarizer(data, Binarizer.threshold=0.55), RBFSampler.gamma=0.05), Binarizer.threshold=0.4), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=4, min_samples_split=13, ExtraTreesClassifier.n_estimators=100)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=1, min_samples_leaf=4, min_samples_split=2)", "LogisticRegression(Nystroem(data, Nystroem.gamma=0.8500000000000001, Nystroem.kernel='polynomial', Nystroem.n_components=10), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "DecisionTreeClassifier(SelectFwe(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), SelectFwe.alpha=0.035, SelectFwe.score_func=f_classif), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=1, min_samples_leaf=4, min_samples_split=2)", "DecisionTreeClassifier(RBFSampler(MinMaxScaler(data), RBFSampler.gamma=0.15000000000000002), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=1, min_samples_leaf=4, min_samples_split=2)", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.75), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), alpha=10.0, fit_prior=True)", "GaussianNB(Normalizer(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), Normalizer.norm='l1'))"], "credit-g": ["LogisticRegression(Nystroem(data, Nystroem.gamma=0.65, Nystroem.kernel='additive_chi2', Nystroem.n_components=1), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Nystroem(data, Nystroem.gamma=0.55, Nystroem.kernel='additive_chi2', Nystroem.n_components=1), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='additive_chi2', Nystroem.n_components=1), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Nystroem(data, Nystroem.gamma=0.75, Nystroem.kernel='additive_chi2', Nystroem.n_components=1), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Nystroem(data, Nystroem.gamma=0.5, Nystroem.kernel='additive_chi2', Nystroem.n_components=1), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='additive_chi2', Nystroem.n_components=1), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Nystroem(data, Nystroem.gamma=0.4, Nystroem.kernel='additive_chi2', Nystroem.n_components=1), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Nystroem(data, Nystroem.gamma=0.65, Nystroem.kernel='additive_chi2', Nystroem.n_components=1), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Nystroem(data, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='additive_chi2', Nystroem.n_components=1), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='additive_chi2', Nystroem.n_components=1), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=1.0), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.05, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.5), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.05, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.25), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.05, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.4), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.05, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=8, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.55), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.05, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.25), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.05, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.8), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.05, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.25), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.05, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.25), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.05, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.9), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.05, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "LogisticRegression(Nystroem(data, Nystroem.gamma=0.1, Nystroem.kernel='additive_chi2', Nystroem.n_components=1), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Nystroem(data, Nystroem.gamma=0.2, Nystroem.kernel='additive_chi2', Nystroem.n_components=1), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.8), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.25), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.05, min_samples_leaf=7, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.1), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=6, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.05, min_samples_leaf=6, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.2), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.05, min_samples_leaf=6, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=1.0), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.05, min_samples_leaf=6, min_samples_split=20, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.4), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.05, min_samples_leaf=6, min_samples_split=18, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.05), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.55, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=19, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=18, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=4, RandomForestClassifier.min_samples_split=18, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=4, RandomForestClassifier.min_samples_split=18, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.4), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.55, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=6, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=18, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.1), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.5, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=9, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.45), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=19, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(SelectPercentile(data, SelectPercentile.percentile=81, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=8, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.05)", "MultinomialNB(Normalizer(data, Normalizer.norm='l1'), alpha=100.0, fit_prior=False)", "MultinomialNB(Normalizer(data, Normalizer.norm='l1'), alpha=100.0, fit_prior=True)", "ExtraTreesClassifier(Normalizer(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), Normalizer.norm='l1'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=2, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "MultinomialNB(Normalizer(data, Normalizer.norm='l1'), alpha=10.0, fit_prior=True)", "MultinomialNB(Normalizer(data, Normalizer.norm='l1'), alpha=10.0, fit_prior=False)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=4, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.4), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=3, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Normalizer(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), Normalizer.norm='max'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=3, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.45), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=4, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.55), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "GradientBoostingClassifier(FeatureAgglomeration(MaxAbsScaler(data), FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='complete'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=8, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7000000000000001)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.1), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.05, RandomForestClassifier.min_samples_leaf=8, RandomForestClassifier.min_samples_split=18, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.1), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.05, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.2), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.05, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=19, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=17, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.9), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.05, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.9), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.05, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.4), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.05, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=13, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.4), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.05, RandomForestClassifier.min_samples_leaf=5, RandomForestClassifier.min_samples_split=13, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.5), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.75), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=14, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=18, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.05, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=14, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.55), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.05, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=12, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=5, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.25), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.45)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.05, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=1.0), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=14, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.45), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=16, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.55), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.05, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=16, RandomForestClassifier.n_estimators=100)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.5), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=7, min_samples_leaf=14, min_samples_split=4)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.45), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.05, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=16, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.9), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.05, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=16, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.65), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.05, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=16, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.05), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.05, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=16, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.25), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.05, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.15000000000000002)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.9), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.05, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=16, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.8), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.05, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=5, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(PCA(RBFSampler(data, RBFSampler.gamma=0.4), PCA.iterated_power=3, PCA.svd_solver='randomized'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=4, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PCA(RBFSampler(data, RBFSampler.gamma=0.9), PCA.iterated_power=3, PCA.svd_solver='randomized'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.55, min_samples_leaf=4, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=2, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PCA(RBFSampler(data, RBFSampler.gamma=0.45), PCA.iterated_power=9, PCA.svd_solver='randomized'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=7, min_samples_split=18, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PCA(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), PCA.iterated_power=10, PCA.svd_solver='randomized'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.55, min_samples_leaf=4, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized'), RBFSampler.gamma=0.8500000000000001), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=4, min_samples_split=18, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(PCA(data, PCA.iterated_power=3, PCA.svd_solver='randomized'), RBFSampler.gamma=0.65), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=2, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=9, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PCA(RBFSampler(data, RBFSampler.gamma=0.45), PCA.iterated_power=3, PCA.svd_solver='randomized'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.55, min_samples_leaf=4, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.2), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')"], "dna": ["GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(SelectFwe(data, SelectFwe.alpha=0.019, SelectFwe.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(SelectFwe(data, SelectFwe.alpha=0.038, SelectFwe.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(MinMaxScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(RobustScaler(MaxAbsScaler(data)), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(SelectFwe(data, SelectFwe.alpha=0.019, SelectFwe.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(Normalizer(SelectPercentile(data, SelectPercentile.percentile=94, SelectPercentile.score_func=f_classif), Normalizer.norm='max'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.45)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=11, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.45)", "GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=11, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.45)", "GradientBoostingClassifier(SelectFwe(data, SelectFwe.alpha=0.038, SelectFwe.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.55)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=11, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=11, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(MaxAbsScaler(RobustScaler(data)), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=11, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.45)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=11, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.5)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.55)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.55)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=8, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=11, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=8, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(SelectFwe(data, SelectFwe.alpha=0.032, SelectFwe.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=8, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.55)", "GradientBoostingClassifier(RobustScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.55)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7000000000000001)", "GradientBoostingClassifier(StandardScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.55)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.55)", "GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.55)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(SelectFwe(data, SelectFwe.alpha=0.039, SelectFwe.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(RobustScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.55)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(StandardScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=11, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(MinMaxScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=8, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7000000000000001)", "GradientBoostingClassifier(StandardScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(StandardScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(MinMaxScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(SelectPercentile(data, SelectPercentile.percentile=46, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7000000000000001)", "GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=13, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(MinMaxScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=11, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(MinMaxScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=13, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=8, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=13, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7000000000000001)"], "wilt": ["ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.5), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=1, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.5), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=1, min_samples_split=13, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PCA(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), PCA.iterated_power=10, PCA.svd_solver='randomized'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=1, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(PCA(data, PCA.iterated_power=4, PCA.svd_solver='randomized'), RBFSampler.gamma=0.30000000000000004), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=1, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.5), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.9), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=1, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PCA(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), PCA.iterated_power=8, PCA.svd_solver='randomized'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=1, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PCA(RBFSampler(data, RBFSampler.gamma=0.5), PCA.iterated_power=7, PCA.svd_solver='randomized'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=1, min_samples_split=13, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=1, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=1, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.8500000000000001, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.15000000000000002)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.2)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.65), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.15000000000000002)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.1), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.2)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.5), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.8500000000000001, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.2)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.25), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.55, RandomForestClassifier.min_samples_leaf=12, RandomForestClassifier.min_samples_split=11, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.2)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.9), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.35000000000000003)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.8), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.2)", "GradientBoostingClassifier(SelectPercentile(data, SelectPercentile.percentile=56, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.65), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=4, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PCA(RBFSampler(data, RBFSampler.gamma=0.1), PCA.iterated_power=10, PCA.svd_solver='randomized'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=4, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(PCA(data, PCA.iterated_power=7, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6000000000000001, min_samples_leaf=2, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.1), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=2, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(PCA(data, PCA.iterated_power=10, PCA.svd_solver='randomized'), RBFSampler.gamma=0.6000000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6000000000000001, min_samples_leaf=2, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PCA(RBFSampler(data, RBFSampler.gamma=0.55), PCA.iterated_power=8, PCA.svd_solver='randomized'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6000000000000001, min_samples_leaf=2, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PCA(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), PCA.iterated_power=10, PCA.svd_solver='randomized'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.2, min_samples_leaf=3, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.5), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=4, min_samples_split=20, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(PCA(data, PCA.iterated_power=4, PCA.svd_solver='randomized'), RBFSampler.gamma=0.55), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=2, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.55, min_samples_leaf=1, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "ExtraTreesClassifier(RBFSampler(PCA(data, PCA.iterated_power=7, PCA.svd_solver='randomized'), RBFSampler.gamma=0.6000000000000001), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.15000000000000002, min_samples_leaf=1, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(PCA(data, PCA.iterated_power=7, PCA.svd_solver='randomized'), RBFSampler.gamma=0.15000000000000002), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=1, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(PCA(data, PCA.iterated_power=7, PCA.svd_solver='randomized'), RBFSampler.gamma=0.1), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=1, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(FastICA(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), FastICA.tol=0.1, FastICA.whiten='unit-variance'), LogisticRegression.C=0.1, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(PCA(RBFSampler(data, RBFSampler.gamma=0.9), PCA.iterated_power=8, PCA.svd_solver='randomized'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=1, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), RBFSampler.gamma=0.4), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=1, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PCA(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), PCA.iterated_power=1, PCA.svd_solver='randomized'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=1, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(PCA(data, PCA.iterated_power=7, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.7500000000000001, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7000000000000001)", "GradientBoostingClassifier(FastICA(data, FastICA.tol=0.0, FastICA.whiten='unit-variance'), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.6000000000000001, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.55)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "ExtraTreesClassifier(PCA(RBFSampler(data, RBFSampler.gamma=0.1), PCA.iterated_power=6, PCA.svd_solver='randomized'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=4, min_samples_split=13, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PCA(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), PCA.iterated_power=7, PCA.svd_solver='randomized'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=1, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(PCA(data, PCA.iterated_power=2, PCA.svd_solver='randomized'), RBFSampler.gamma=0.35000000000000003), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=2, min_samples_split=20, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PCA(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), PCA.iterated_power=7, PCA.svd_solver='randomized'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=1, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PCA(RBFSampler(data, RBFSampler.gamma=0.2), PCA.iterated_power=7, PCA.svd_solver='randomized'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=1, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PCA(RBFSampler(data, RBFSampler.gamma=0.9), PCA.iterated_power=7, PCA.svd_solver='randomized'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=1, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PCA(RBFSampler(data, RBFSampler.gamma=0.05), PCA.iterated_power=7, PCA.svd_solver='randomized'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=1, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.15000000000000002)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.8), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=1, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.1), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.15000000000000002)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=2, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=1.0), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6000000000000001, min_samples_leaf=2, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.55), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.15000000000000002)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.9), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.9500000000000001, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.15000000000000002)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.75), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.9500000000000001, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.2)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.15000000000000002)", "GradientBoostingClassifier(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.8500000000000001, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=8, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.05)", "ExtraTreesClassifier(RBFSampler(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized'), RBFSampler.gamma=0.75), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=1, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(PCA(data, PCA.iterated_power=2, PCA.svd_solver='randomized'), RBFSampler.gamma=0.30000000000000004), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PCA(RBFSampler(data, RBFSampler.gamma=0.55), PCA.iterated_power=6, PCA.svd_solver='randomized'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=1, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=1, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PCA(RBFSampler(data, RBFSampler.gamma=0.45), PCA.iterated_power=7, PCA.svd_solver='randomized'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6000000000000001, min_samples_leaf=1, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.2), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6000000000000001, min_samples_leaf=1, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=1, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.9), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=5, RandomForestClassifier.min_samples_split=19, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.9), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=1, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.4), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=2, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=2, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.25), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=2, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=2, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.1), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=2, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.4), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=3, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.25), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=2, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.65), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=3, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.4), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=2, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=2, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=2, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(FastICA(RBFSampler(data, RBFSampler.gamma=0.5), FastICA.tol=0.0, FastICA.whiten='unit-variance'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6000000000000001, min_samples_leaf=2, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.4), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=2, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PCA(RBFSampler(data, RBFSampler.gamma=0.8), PCA.iterated_power=5, PCA.svd_solver='randomized'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=2, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(FastICA(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), FastICA.tol=0.0, FastICA.whiten='unit-variance'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6000000000000001, min_samples_leaf=3, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PCA(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), PCA.iterated_power=5, PCA.svd_solver='randomized'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=3, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6000000000000001, min_samples_leaf=2, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)"], "qsar-biodeg": ["ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.30000000000000004, Nystroem.kernel='rbf', Nystroem.n_components=4), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=3, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.25, Nystroem.kernel='rbf', Nystroem.n_components=1), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=3, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.8500000000000001, Nystroem.kernel='rbf', Nystroem.n_components=4), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.2, min_samples_leaf=3, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.8500000000000001, Nystroem.kernel='rbf', Nystroem.n_components=2), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=3, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.5, Nystroem.kernel='rbf', Nystroem.n_components=10), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.2, min_samples_leaf=3, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.45, Nystroem.kernel='laplacian', Nystroem.n_components=6), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=3, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='rbf', Nystroem.n_components=3), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.2, min_samples_leaf=3, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.5, Nystroem.kernel='laplacian', Nystroem.n_components=5), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.2, min_samples_leaf=3, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.9500000000000001, Nystroem.kernel='laplacian', Nystroem.n_components=5), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.2, min_samples_leaf=3, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.8, Nystroem.kernel='rbf', Nystroem.n_components=3), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.2, min_samples_leaf=3, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "GaussianNB(Nystroem(VarianceThreshold(data, VarianceThreshold.threshold=0.45), Nystroem.gamma=0.75, Nystroem.kernel='laplacian', Nystroem.n_components=1))", "KNeighborsClassifier(Binarizer(Normalizer(data, Normalizer.norm='l1'), Binarizer.threshold=0.25), KNeighborsClassifier.n_neighbors=45, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='uniform')", "GaussianNB(Nystroem(data, Nystroem.gamma=0.75, Nystroem.kernel='laplacian', Nystroem.n_components=1))", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.65, Nystroem.kernel='sigmoid', Nystroem.n_components=9), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.55, min_samples_leaf=1, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.45, Nystroem.kernel='sigmoid', Nystroem.n_components=4), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=1, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.8, Nystroem.kernel='sigmoid', Nystroem.n_components=7), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=1, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.65, Nystroem.kernel='sigmoid', Nystroem.n_components=1), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=1, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.05, Nystroem.kernel='sigmoid', Nystroem.n_components=5), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=1, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.25, Nystroem.kernel='sigmoid', Nystroem.n_components=9), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=1, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.8500000000000001, Nystroem.kernel='sigmoid', Nystroem.n_components=7), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=1, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(VarianceThreshold(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='ward'), VarianceThreshold.threshold=0.9000000000000001), alpha=100.0, fit_prior=True)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=10, RandomForestClassifier.min_samples_split=14, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='polynomial', Nystroem.n_components=8), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.2, min_samples_leaf=2, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.15000000000000002, Nystroem.kernel='sigmoid', Nystroem.n_components=2), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.2, min_samples_leaf=1, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='sigmoid', Nystroem.n_components=1), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=1, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.1, Nystroem.kernel='sigmoid', Nystroem.n_components=2), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=2, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.0), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.2, min_samples_leaf=2, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.8500000000000001, Nystroem.kernel='sigmoid', Nystroem.n_components=1), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=1, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.9, Nystroem.kernel='sigmoid', Nystroem.n_components=9), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.2, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.65, Nystroem.kernel='sigmoid', Nystroem.n_components=10), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=1, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.8500000000000001, Nystroem.kernel='rbf', Nystroem.n_components=1), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.2, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.30000000000000004, Nystroem.kernel='rbf', Nystroem.n_components=1), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.05, Nystroem.kernel='sigmoid', Nystroem.n_components=4), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.2, min_samples_leaf=1, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.75, Nystroem.kernel='rbf', Nystroem.n_components=1), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.75, Nystroem.kernel='rbf', Nystroem.n_components=1), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.75, Nystroem.kernel='sigmoid', Nystroem.n_components=3), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='sigmoid', Nystroem.n_components=4), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=1, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.05, Nystroem.kernel='sigmoid', Nystroem.n_components=3), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='sigmoid', Nystroem.n_components=5), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.2, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.0), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=1, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.5, Nystroem.kernel='rbf', Nystroem.n_components=1), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=2, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='rbf', Nystroem.n_components=3), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6000000000000001, min_samples_leaf=2, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='rbf', Nystroem.n_components=4), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=2, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.55, Nystroem.kernel='sigmoid', Nystroem.n_components=5), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6000000000000001, min_samples_leaf=2, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.30000000000000004, Nystroem.kernel='sigmoid', Nystroem.n_components=10), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=2, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.5, Nystroem.kernel='sigmoid', Nystroem.n_components=7), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6000000000000001, min_samples_leaf=2, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.75, Nystroem.kernel='sigmoid', Nystroem.n_components=2), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=2, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.0), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=2, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='sigmoid', Nystroem.n_components=5), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6000000000000001, min_samples_leaf=2, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.0), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=2, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RBFSampler.gamma=0.15000000000000002), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=6, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='laplacian', Nystroem.n_components=8), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=6, min_samples_split=20, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.8, Nystroem.kernel='rbf', Nystroem.n_components=1), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=2, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.15000000000000002, Nystroem.kernel='sigmoid', Nystroem.n_components=5), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=1, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='laplacian', Nystroem.n_components=6), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=1, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.9, Nystroem.kernel='sigmoid', Nystroem.n_components=1), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=2, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='sigmoid', Nystroem.n_components=2), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=1, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.05, Nystroem.kernel='sigmoid', Nystroem.n_components=3), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=1, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='polynomial', Nystroem.n_components=10), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=1, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='poly', Nystroem.n_components=2), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=1, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(MinMaxScaler(RBFSampler(data, RBFSampler.gamma=0.2)), alpha=10.0, fit_prior=True)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.4, Nystroem.kernel='rbf', Nystroem.n_components=1), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=1, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.45, Nystroem.kernel='rbf', Nystroem.n_components=1), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=1, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='rbf', Nystroem.n_components=3), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=1, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(VarianceThreshold(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l2', FeatureAgglomeration.linkage='complete'), VarianceThreshold.threshold=0.8500000000000001), alpha=0.1, fit_prior=True)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='laplacian', Nystroem.n_components=2), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=1, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='sigmoid', Nystroem.n_components=4), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=1, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='sigmoid', Nystroem.n_components=8), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=1, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.05, Nystroem.kernel='sigmoid', Nystroem.n_components=2), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='sigmoid', Nystroem.n_components=4), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=1, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.9500000000000001, Nystroem.kernel='laplacian', Nystroem.n_components=2), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=2, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.65, Nystroem.kernel='laplacian', Nystroem.n_components=2), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=2, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.55, Nystroem.kernel='laplacian', Nystroem.n_components=8), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.2, min_samples_leaf=2, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.5, Nystroem.kernel='sigmoid', Nystroem.n_components=7), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=2, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='polynomial', Nystroem.n_components=6), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.55, min_samples_leaf=6, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.2, Nystroem.kernel='sigmoid', Nystroem.n_components=8), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=3, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.55, Nystroem.kernel='sigmoid', Nystroem.n_components=2), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=3, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.1, Nystroem.kernel='sigmoid', Nystroem.n_components=2), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=5, RandomForestClassifier.min_samples_split=5, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.55, Nystroem.kernel='sigmoid', Nystroem.n_components=4), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=3, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.65, Nystroem.kernel='sigmoid', Nystroem.n_components=4), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=1, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RBFSampler.gamma=0.8), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=16, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.2, Nystroem.kernel='rbf', Nystroem.n_components=1), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.55, min_samples_leaf=1, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='rbf', Nystroem.n_components=1), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=1, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.2, Nystroem.kernel='sigmoid', Nystroem.n_components=2), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=1, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.55, Nystroem.kernel='sigmoid', Nystroem.n_components=2), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.15000000000000002, Nystroem.kernel='sigmoid', Nystroem.n_components=10), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.0), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.55, min_samples_leaf=1, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.9500000000000001, Nystroem.kernel='sigmoid', Nystroem.n_components=5), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.2, Nystroem.kernel='sigmoid', Nystroem.n_components=8), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.55, min_samples_leaf=1, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.75, Nystroem.kernel='sigmoid', Nystroem.n_components=7), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)"], "blood-transfusion-service-center": ["MultinomialNB(Normalizer(data, Normalizer.norm='max'), alpha=10.0, fit_prior=True)", "MultinomialNB(Normalizer(data, Normalizer.norm='max'), alpha=10.0, fit_prior=False)", "MultinomialNB(Normalizer(data, Normalizer.norm='max'), alpha=100.0, fit_prior=False)", "MultinomialNB(Normalizer(data, Normalizer.norm='max'), alpha=100.0, fit_prior=True)", "ExtraTreesClassifier(FastICA(PCA(data, PCA.iterated_power=10, PCA.svd_solver='randomized'), FastICA.tol=0.9, FastICA.whiten='unit-variance'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=11, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(FastICA(PCA(data, PCA.iterated_power=2, PCA.svd_solver='randomized'), FastICA.tol=0.8, FastICA.whiten='unit-variance'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=7, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=12, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.05)", "GradientBoostingClassifier(Normalizer(RBFSampler(data, RBFSampler.gamma=0.9), Normalizer.norm='max'), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.9500000000000001, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=8, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.5, Nystroem.kernel='rbf', Nystroem.n_components=8), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.9500000000000001, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(Normalizer(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='rbf', Nystroem.n_components=3), Normalizer.norm='max'), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.9500000000000001, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "MultinomialNB(Normalizer(data, Normalizer.norm='l2'), alpha=100.0, fit_prior=True)", "MultinomialNB(Normalizer(data, Normalizer.norm='max'), alpha=100.0, fit_prior=True)", "ExtraTreesClassifier(FastICA(PCA(data, PCA.iterated_power=3, PCA.svd_solver='randomized'), FastICA.tol=0.6000000000000001, FastICA.whiten='unit-variance'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=17, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(FastICA(PCA(data, PCA.iterated_power=3, PCA.svd_solver='randomized'), FastICA.tol=0.75, FastICA.whiten='unit-variance'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=17, min_samples_split=18, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(FastICA(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized'), FastICA.tol=0.6000000000000001, FastICA.whiten='unit-variance'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.05, min_samples_leaf=11, min_samples_split=20, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(Nystroem(data, Nystroem.gamma=0.8500000000000001, Nystroem.kernel='additive_chi2', Nystroem.n_components=1), LogisticRegression.C=0.1, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(FastICA(PCA(data, PCA.iterated_power=3, PCA.svd_solver='randomized'), FastICA.tol=0.8500000000000001, FastICA.whiten='unit-variance'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=17, min_samples_split=20, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(FastICA(PCA(data, PCA.iterated_power=3, PCA.svd_solver='randomized'), FastICA.tol=0.1, FastICA.whiten='unit-variance'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=17, min_samples_split=20, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(FastICA(PCA(data, PCA.iterated_power=9, PCA.svd_solver='randomized'), FastICA.tol=0.35000000000000003, FastICA.whiten='unit-variance'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.2, min_samples_leaf=17, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(Nystroem(data, Nystroem.gamma=0.55, Nystroem.kernel='additive_chi2', Nystroem.n_components=1), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "MultinomialNB(Normalizer(data, Normalizer.norm='max'), alpha=10.0, fit_prior=True)", "MultinomialNB(Normalizer(data, Normalizer.norm='max'), alpha=10.0, fit_prior=False)", "MultinomialNB(Normalizer(data, Normalizer.norm='max'), alpha=100.0, fit_prior=False)", "MultinomialNB(Normalizer(data, Normalizer.norm='l2'), alpha=100.0, fit_prior=False)", "MultinomialNB(Normalizer(data, Normalizer.norm='l2'), alpha=100.0, fit_prior=True)", "MultinomialNB(Normalizer(data, Normalizer.norm='l1'), alpha=100.0, fit_prior=False)", "ExtraTreesClassifier(FastICA(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized'), FastICA.tol=0.15000000000000002, FastICA.whiten='unit-variance'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=15, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(FastICA(PCA(data, PCA.iterated_power=3, PCA.svd_solver='randomized'), FastICA.tol=0.25, FastICA.whiten='unit-variance'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.15000000000000002, min_samples_leaf=14, min_samples_split=20, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(FastICA(PCA(data, PCA.iterated_power=5, PCA.svd_solver='randomized'), FastICA.tol=0.9500000000000001, FastICA.whiten='unit-variance'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.55, min_samples_leaf=17, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(FastICA(PCA(data, PCA.iterated_power=9, PCA.svd_solver='randomized'), FastICA.tol=0.5, FastICA.whiten='unit-variance'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.55, min_samples_leaf=14, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "MultinomialNB(Normalizer(data, Normalizer.norm='l2'), alpha=10.0, fit_prior=False)", "ExtraTreesClassifier(Binarizer(MaxAbsScaler(data), Binarizer.threshold=0.9), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.15000000000000002, min_samples_leaf=9, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.9500000000000001, Nystroem.kernel='rbf', Nystroem.n_components=10), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=15, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.45, Nystroem.kernel='rbf', Nystroem.n_components=3), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=15, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='rbf', Nystroem.n_components=8), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=15, min_samples_split=20, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='rbf', Nystroem.n_components=5), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=15, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.8, Nystroem.kernel='rbf', Nystroem.n_components=8), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.2, min_samples_leaf=16, min_samples_split=19, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='laplacian', Nystroem.n_components=7), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.2, min_samples_leaf=15, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='rbf', Nystroem.n_components=8), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.2, min_samples_leaf=15, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.45)", "MultinomialNB(Normalizer(data, Normalizer.norm='l1'), alpha=100.0, fit_prior=True)", "GradientBoostingClassifier(FastICA(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), FastICA.tol=0.9500000000000001, FastICA.whiten='unit-variance'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7000000000000001)", "GradientBoostingClassifier(FastICA(PCA(data, PCA.iterated_power=3, PCA.svd_solver='randomized'), FastICA.tol=0.05, FastICA.whiten='unit-variance'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.45)", "GradientBoostingClassifier(FastICA(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), FastICA.tol=0.5, FastICA.whiten='unit-variance'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.45)", "GradientBoostingClassifier(FastICA(PCA(data, PCA.iterated_power=10, PCA.svd_solver='randomized'), FastICA.tol=0.9, FastICA.whiten='unit-variance'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7000000000000001)", "GradientBoostingClassifier(FastICA(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), FastICA.tol=0.35000000000000003, FastICA.whiten='unit-variance'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.45)", "GradientBoostingClassifier(FastICA(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), FastICA.tol=0.30000000000000004, FastICA.whiten='unit-variance'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.55)", "GradientBoostingClassifier(FastICA(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), FastICA.tol=0.0, FastICA.whiten='unit-variance'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7000000000000001)", "GradientBoostingClassifier(FastICA(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), FastICA.tol=0.75, FastICA.whiten='unit-variance'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.45)", "GradientBoostingClassifier(FastICA(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), FastICA.tol=0.65, FastICA.whiten='unit-variance'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.45)", "MultinomialNB(Normalizer(data, Normalizer.norm='max'), alpha=10.0, fit_prior=False)", "ExtraTreesClassifier(FastICA(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), FastICA.tol=0.5, FastICA.whiten='unit-variance'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=15, min_samples_split=19, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(FastICA(PCA(data, PCA.iterated_power=5, PCA.svd_solver='randomized'), FastICA.tol=0.4, FastICA.whiten='unit-variance'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=20, min_samples_split=20, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(FastICA(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), FastICA.tol=0.7000000000000001, FastICA.whiten='unit-variance'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=20, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(FastICA(PCA(data, PCA.iterated_power=1, PCA.svd_solver='randomized'), FastICA.tol=0.9500000000000001, FastICA.whiten='unit-variance'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=18, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(FastICA(PCA(data, PCA.iterated_power=5, PCA.svd_solver='randomized'), FastICA.tol=0.05, FastICA.whiten='unit-variance'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=18, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(FastICA(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), FastICA.tol=0.25, FastICA.whiten='unit-variance'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=18, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(FastICA(PCA(data, PCA.iterated_power=4, PCA.svd_solver='randomized'), FastICA.tol=0.5, FastICA.whiten='unit-variance'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=20, min_samples_split=20, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(FastICA(PCA(data, PCA.iterated_power=10, PCA.svd_solver='randomized'), FastICA.tol=0.30000000000000004, FastICA.whiten='unit-variance'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=16, min_samples_split=19, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(FastICA(PCA(data, PCA.iterated_power=10, PCA.svd_solver='randomized'), FastICA.tol=0.35000000000000003, FastICA.whiten='unit-variance'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=7, min_samples_split=18, ExtraTreesClassifier.n_estimators=100)", "MultinomialNB(Normalizer(data, Normalizer.norm='l2'), alpha=10.0, fit_prior=True)", "MultinomialNB(Normalizer(data, Normalizer.norm='max'), alpha=10.0, fit_prior=True)", "MultinomialNB(Normalizer(data, Normalizer.norm='l1'), alpha=10.0, fit_prior=True)", "MultinomialNB(Normalizer(SelectFwe(data, SelectFwe.alpha=0.01, SelectFwe.score_func=f_classif), Normalizer.norm='l1'), alpha=10.0, fit_prior=True)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='rbf', Nystroem.n_components=9), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.2, min_samples_leaf=15, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.8500000000000001, Nystroem.kernel='laplacian', Nystroem.n_components=9), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.2, min_samples_leaf=8, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.55, Nystroem.kernel='rbf', Nystroem.n_components=10), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.05, min_samples_leaf=18, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='rbf', Nystroem.n_components=8), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.05, min_samples_leaf=18, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='rbf', Nystroem.n_components=5), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.2, min_samples_leaf=8, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.45, Nystroem.kernel='laplacian', Nystroem.n_components=6), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.05, min_samples_leaf=8, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(FastICA(PCA(data, PCA.iterated_power=3, PCA.svd_solver='randomized'), FastICA.tol=0.6000000000000001, FastICA.whiten='unit-variance'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=11, min_samples_split=18, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(FastICA(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized'), FastICA.tol=0.2, FastICA.whiten='unit-variance'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=14, min_samples_split=13, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(FastICA(PCA(data, PCA.iterated_power=5, PCA.svd_solver='randomized'), FastICA.tol=0.30000000000000004, FastICA.whiten='unit-variance'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=14, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(FastICA(PCA(data, PCA.iterated_power=3, PCA.svd_solver='randomized'), FastICA.tol=0.0, FastICA.whiten='unit-variance'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=19, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(FastICA(PCA(data, PCA.iterated_power=3, PCA.svd_solver='randomized'), FastICA.tol=0.35000000000000003, FastICA.whiten='unit-variance'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=14, min_samples_split=13, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(FastICA(PCA(data, PCA.iterated_power=5, PCA.svd_solver='randomized'), FastICA.tol=0.05, FastICA.whiten='unit-variance'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6000000000000001, min_samples_leaf=11, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(FastICA(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), FastICA.tol=0.15000000000000002, FastICA.whiten='unit-variance'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=11, min_samples_split=19, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(FastICA(PCA(data, PCA.iterated_power=5, PCA.svd_solver='randomized'), FastICA.tol=0.55, FastICA.whiten='unit-variance'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=11, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(FastICA(PCA(data, PCA.iterated_power=5, PCA.svd_solver='randomized'), FastICA.tol=0.6000000000000001, FastICA.whiten='unit-variance'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=11, min_samples_split=18, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(FastICA(PCA(data, PCA.iterated_power=5, PCA.svd_solver='randomized'), FastICA.tol=1.0, FastICA.whiten='unit-variance'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=19, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(SelectPercentile(data, SelectPercentile.percentile=56, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "GradientBoostingClassifier(SelectPercentile(data, SelectPercentile.percentile=56, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "GradientBoostingClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.05), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.05, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.9500000000000001, Nystroem.kernel='laplacian', Nystroem.n_components=1), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.9500000000000001, RandomForestClassifier.min_samples_leaf=14, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "GaussianNB(FeatureAgglomeration(Nystroem(data, Nystroem.gamma=0.25, Nystroem.kernel='rbf', Nystroem.n_components=4), FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='average'))", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.45, Nystroem.kernel='rbf', Nystroem.n_components=5), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.9000000000000001, RandomForestClassifier.min_samples_leaf=14, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.65, Nystroem.kernel='rbf', Nystroem.n_components=2), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.9500000000000001, RandomForestClassifier.min_samples_leaf=14, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.30000000000000004, Nystroem.kernel='chi2', Nystroem.n_components=1), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.9500000000000001, RandomForestClassifier.min_samples_leaf=14, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.45, Nystroem.kernel='rbf', Nystroem.n_components=3), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.9500000000000001, RandomForestClassifier.min_samples_leaf=14, RandomForestClassifier.min_samples_split=10, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.9, Nystroem.kernel='rbf', Nystroem.n_components=3), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.9500000000000001, RandomForestClassifier.min_samples_leaf=14, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)"], "sylvine": ["ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.8), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=1, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.25), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=1, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.4), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=1, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=1, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.1), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6000000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectPercentile(RBFSampler(data, RBFSampler.gamma=0.55), SelectPercentile.percentile=53, SelectPercentile.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=3, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.1), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=1, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.65), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.55, min_samples_leaf=3, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.2), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=1, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(SelectPercentile(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), SelectPercentile.percentile=53, SelectPercentile.score_func=f_classif), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.65), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=1, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=1, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6000000000000001, min_samples_leaf=1, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.55, min_samples_leaf=1, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.2), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.8500000000000001, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=1, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.9), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=14, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.2), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6000000000000001, min_samples_leaf=1, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.4), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6000000000000001, min_samples_leaf=1, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.45), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=6, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6000000000000001, min_samples_leaf=6, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=1.0), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=6, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.2), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.65), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.55, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.2), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.55, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.9), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.45), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=1, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.05), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=1, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.75), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6000000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=1, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6000000000000001, min_samples_leaf=1, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "KNeighborsClassifier(RBFSampler(data, RBFSampler.gamma=0.8), KNeighborsClassifier.n_neighbors=43, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='uniform')", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=1, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.55), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6000000000000001, min_samples_leaf=1, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.9), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=1, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.2), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.5), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=1, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6000000000000001, min_samples_leaf=1, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.9), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6000000000000001, min_samples_leaf=1, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.55), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=1, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.8), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6000000000000001, min_samples_leaf=1, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.2), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6000000000000001, min_samples_leaf=1, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=1.0), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=1, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=1, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=1, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.75), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=1, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "KNeighborsClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), KNeighborsClassifier.n_neighbors=8, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='distance')", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.05), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.75))", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.55), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=5, RandomForestClassifier.min_samples_split=10, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.25), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=1, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "KNeighborsClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), KNeighborsClassifier.n_neighbors=8, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='uniform')", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.8), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=7, RandomForestClassifier.min_samples_split=18, RandomForestClassifier.n_estimators=100)", "KNeighborsClassifier(Normalizer(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), Normalizer.norm='l1'), KNeighborsClassifier.n_neighbors=26, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='distance')", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.8500000000000001, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=8, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.05), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.8500000000000001, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.55, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=1.0), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=1, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=1, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=1, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.55), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=1, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.1), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=1, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.9), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=8, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=1, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.9), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.25), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=1, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(SelectPercentile(data, SelectPercentile.percentile=71, SelectPercentile.score_func=f_classif), RBFSampler.gamma=0.45), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=1, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.2), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6000000000000001, min_samples_leaf=1, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(SelectPercentile(data, SelectPercentile.percentile=71, SelectPercentile.score_func=f_classif), RBFSampler.gamma=0.7000000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=1, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectPercentile(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), SelectPercentile.percentile=71, SelectPercentile.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=1, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(SelectPercentile(data, SelectPercentile.percentile=71, SelectPercentile.score_func=f_classif), RBFSampler.gamma=1.0), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=1, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.55), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=1, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectPercentile(RBFSampler(data, RBFSampler.gamma=0.65), SelectPercentile.percentile=71, SelectPercentile.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=1, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(SelectPercentile(data, SelectPercentile.percentile=71, SelectPercentile.score_func=f_classif), RBFSampler.gamma=0.30000000000000004), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(SelectPercentile(data, SelectPercentile.percentile=71, SelectPercentile.score_func=f_classif), RBFSampler.gamma=0.4), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=1, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)"], "albert": ["DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.0), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=2, min_samples_leaf=2, min_samples_split=16)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.0), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=2, min_samples_leaf=2, min_samples_split=16)", "GradientBoostingClassifier(Binarizer(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='rbf', Nystroem.n_components=7), Binarizer.threshold=0.8500000000000001), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='rbf', Nystroem.n_components=7), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.9))", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.75, Nystroem.kernel='cosine', Nystroem.n_components=1), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=4, min_samples_leaf=20, min_samples_split=17)", "DecisionTreeClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l1', FeatureAgglomeration.linkage='complete'), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=1, min_samples_leaf=1, min_samples_split=7)", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='linear', Nystroem.n_components=9), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=4, min_samples_leaf=20, min_samples_split=17)", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='linear', Nystroem.n_components=9), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=9, min_samples_leaf=20, min_samples_split=17)", "DecisionTreeClassifier(Nystroem(SelectPercentile(data, SelectPercentile.percentile=36, SelectPercentile.score_func=f_classif), Nystroem.gamma=0.7000000000000001, Nystroem.kernel='linear', Nystroem.n_components=9), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=4, min_samples_leaf=20, min_samples_split=17)", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.45))", "GaussianNB(MinMaxScaler(PCA(data, PCA.iterated_power=2, PCA.svd_solver='randomized')))", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.65, Nystroem.kernel='laplacian', Nystroem.n_components=5), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=7, min_samples_leaf=7, min_samples_split=8)", "BernoulliNB(RBFSampler(MinMaxScaler(data), RBFSampler.gamma=0.0), alpha=1.0, fit_prior=True)", "RandomForestClassifier(RBFSampler(MinMaxScaler(data), RBFSampler.gamma=0.0), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.7500000000000001, RandomForestClassifier.min_samples_leaf=17, RandomForestClassifier.min_samples_split=18, RandomForestClassifier.n_estimators=100)", "DecisionTreeClassifier(FastICA(Nystroem(data, Nystroem.gamma=0.65, Nystroem.kernel='laplacian', Nystroem.n_components=5), FastICA.tol=0.15000000000000002, FastICA.whiten='unit-variance'), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=7, min_samples_leaf=7, min_samples_split=8)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.9, Nystroem.kernel='cosine', Nystroem.n_components=6), alpha=0.01, fit_prior=True)", "GaussianNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l1', FeatureAgglomeration.linkage='average'))", "GaussianNB(PCA(data, PCA.iterated_power=2, PCA.svd_solver='randomized'))", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.9, Nystroem.kernel='cosine', Nystroem.n_components=6), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=4, min_samples_leaf=18, min_samples_split=17)", "GaussianNB(StandardScaler(SelectPercentile(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), SelectPercentile.percentile=65, SelectPercentile.score_func=f_classif)))", "GaussianNB(StandardScaler(RBFSampler(data, RBFSampler.gamma=0.6000000000000001)))", "BernoulliNB(RBFSampler(RobustScaler(data), RBFSampler.gamma=0.9), alpha=0.01, fit_prior=False)", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.4))", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), alpha=0.1, fit_prior=False)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), alpha=0.01, fit_prior=False)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='laplacian', Nystroem.n_components=7), alpha=0.01, fit_prior=False)", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.8500000000000001, Nystroem.kernel='laplacian', Nystroem.n_components=9), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=7, min_samples_leaf=7, min_samples_split=9)", "MultinomialNB(SelectPercentile(Nystroem(data, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='rbf', Nystroem.n_components=9), SelectPercentile.percentile=39, SelectPercentile.score_func=f_classif), alpha=1.0, fit_prior=False)", "DecisionTreeClassifier(Binarizer(RBFSampler(data, RBFSampler.gamma=1.0), Binarizer.threshold=0.4), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=7, min_samples_split=9)", "BernoulliNB(PCA(RBFSampler(data, RBFSampler.gamma=0.2), PCA.iterated_power=5, PCA.svd_solver='randomized'), alpha=0.001, fit_prior=True)", "BernoulliNB(PCA(RBFSampler(SelectPercentile(data, SelectPercentile.percentile=60, SelectPercentile.score_func=f_classif), RBFSampler.gamma=0.2), PCA.iterated_power=5, PCA.svd_solver='randomized'), alpha=0.001, fit_prior=True)", "MultinomialNB(Nystroem(VarianceThreshold(data, VarianceThreshold.threshold=0.45), Nystroem.gamma=0.30000000000000004, Nystroem.kernel='rbf', Nystroem.n_components=3), alpha=100.0, fit_prior=True)", "MultinomialNB(FeatureAgglomeration(Binarizer(data, Binarizer.threshold=0.8500000000000001), FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='ward'), alpha=1.0, fit_prior=True)", "DecisionTreeClassifier(FeatureAgglomeration(Normalizer(data, Normalizer.norm='max'), FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='ward'), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=3, min_samples_leaf=12, min_samples_split=14)", "DecisionTreeClassifier(FeatureAgglomeration(Binarizer(data, Binarizer.threshold=0.8500000000000001), FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='ward'), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=3, min_samples_leaf=12, min_samples_split=14)", "DecisionTreeClassifier(FeatureAgglomeration(Binarizer(data, Binarizer.threshold=0.8500000000000001), FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='ward'), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=3, min_samples_leaf=12, min_samples_split=14)", "GradientBoostingClassifier(RobustScaler(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l1', FeatureAgglomeration.linkage='complete')), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.15000000000000002)", "LogisticRegression(data, LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GaussianNB(PCA(data, PCA.iterated_power=1, PCA.svd_solver='randomized'))", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.55))", "LogisticRegression(RobustScaler(RBFSampler(data, RBFSampler.gamma=0.05)), LogisticRegression.C=0.0001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GaussianNB(FeatureAgglomeration(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='cosine', Nystroem.n_components=4), FeatureAgglomeration.affinity='manhattan', FeatureAgglomeration.linkage='average'))", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='cosine', Nystroem.n_components=4), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.8500000000000001, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='cosine', Nystroem.n_components=4), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=4, min_samples_leaf=6, min_samples_split=15)", "GaussianNB(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='cosine', Nystroem.n_components=4))", "DecisionTreeClassifier(Nystroem(MinMaxScaler(data), Nystroem.gamma=0.45, Nystroem.kernel='sigmoid', Nystroem.n_components=5), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=4, min_samples_leaf=13, min_samples_split=17)", "LogisticRegression(FeatureAgglomeration(data, FeatureAgglomeration.affinity='manhattan', FeatureAgglomeration.linkage='average'), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GaussianNB(PCA(SelectPercentile(data, SelectPercentile.percentile=67, SelectPercentile.score_func=f_classif), PCA.iterated_power=2, PCA.svd_solver='randomized'))", "DecisionTreeClassifier(FeatureAgglomeration(SelectPercentile(data, SelectPercentile.percentile=67, SelectPercentile.score_func=f_classif), FeatureAgglomeration.affinity='l1', FeatureAgglomeration.linkage='average'), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=4, min_samples_leaf=6, min_samples_split=18)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), alpha=0.01, fit_prior=False)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), alpha=0.01, fit_prior=False)", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.7000000000000001))", "LogisticRegression(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='rbf', Nystroem.n_components=4), LogisticRegression.C=0.0001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(FeatureAgglomeration(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='rbf', Nystroem.n_components=4), FeatureAgglomeration.affinity='l2', FeatureAgglomeration.linkage='complete'), LogisticRegression.C=0.0001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "MultinomialNB(Nystroem(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), Nystroem.gamma=0.8500000000000001, Nystroem.kernel='rbf', Nystroem.n_components=1), alpha=0.01, fit_prior=True)", "BernoulliNB(Nystroem(MinMaxScaler(data), Nystroem.gamma=0.55, Nystroem.kernel='rbf', Nystroem.n_components=4), alpha=0.01, fit_prior=True)", "DecisionTreeClassifier(PCA(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='rbf', Nystroem.n_components=1), PCA.iterated_power=9, PCA.svd_solver='randomized'), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=8, min_samples_leaf=10, min_samples_split=4)", "GaussianNB(Nystroem(SelectFwe(data, SelectFwe.alpha=0.037, SelectFwe.score_func=f_classif), Nystroem.gamma=0.05, Nystroem.kernel='rbf', Nystroem.n_components=6))", "BernoulliNB(RBFSampler(SelectPercentile(data, SelectPercentile.percentile=91, SelectPercentile.score_func=f_classif), RBFSampler.gamma=0.45), alpha=0.1, fit_prior=True)", "GaussianNB(RBFSampler(SelectFwe(data, SelectFwe.alpha=0.036000000000000004, SelectFwe.score_func=f_classif), RBFSampler.gamma=0.8500000000000001))", "GaussianNB(PCA(Nystroem(data, Nystroem.gamma=0.8, Nystroem.kernel='laplacian', Nystroem.n_components=10), PCA.iterated_power=3, PCA.svd_solver='randomized'))", "BernoulliNB(MinMaxScaler(FeatureAgglomeration(data, FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='average')), alpha=10.0, fit_prior=True)", "GaussianNB(RBFSampler(SelectPercentile(data, SelectPercentile.percentile=22, SelectPercentile.score_func=f_classif), RBFSampler.gamma=0.8500000000000001))", "LogisticRegression(MaxAbsScaler(RBFSampler(data, RBFSampler.gamma=0.2)), LogisticRegression.C=20.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GaussianNB(RBFSampler(SelectPercentile(data, SelectPercentile.percentile=22, SelectPercentile.score_func=f_classif), RBFSampler.gamma=0.55))", "BernoulliNB(Nystroem(Normalizer(data, Normalizer.norm='l1'), Nystroem.gamma=0.35000000000000003, Nystroem.kernel='linear', Nystroem.n_components=6), alpha=10.0, fit_prior=True)", "GaussianNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='manhattan', FeatureAgglomeration.linkage='complete'))", "DecisionTreeClassifier(MinMaxScaler(Binarizer(Normalizer(data, Normalizer.norm='l2'), Binarizer.threshold=0.25)), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=9, min_samples_leaf=16, min_samples_split=10)", "DecisionTreeClassifier(Nystroem(MinMaxScaler(data), Nystroem.gamma=0.25, Nystroem.kernel='rbf', Nystroem.n_components=6), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=7, min_samples_leaf=18, min_samples_split=10)", "BernoulliNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l1', FeatureAgglomeration.linkage='complete'), alpha=100.0, fit_prior=False)", "DecisionTreeClassifier(RBFSampler(PCA(data, PCA.iterated_power=7, PCA.svd_solver='randomized'), RBFSampler.gamma=0.0), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=4, min_samples_leaf=1, min_samples_split=10)", "GaussianNB(RBFSampler(Binarizer(data, Binarizer.threshold=0.55), RBFSampler.gamma=0.0))", "DecisionTreeClassifier(Nystroem(RBFSampler(data, RBFSampler.gamma=0.0), Nystroem.gamma=1.0, Nystroem.kernel='polynomial', Nystroem.n_components=7), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=4, min_samples_leaf=1, min_samples_split=10)", "RandomForestClassifier(Binarizer(Normalizer(data, Normalizer.norm='l2'), Binarizer.threshold=1.0), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=6, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='laplacian', Nystroem.n_components=5), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=3, min_samples_leaf=13, min_samples_split=10)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.0), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=4, min_samples_leaf=1, min_samples_split=10)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.25), alpha=100.0, fit_prior=True)", "DecisionTreeClassifier(FeatureAgglomeration(MinMaxScaler(data), FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='average'), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=4, min_samples_leaf=13, min_samples_split=7)", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.75, Nystroem.kernel='poly', Nystroem.n_components=1), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=4, min_samples_leaf=1, min_samples_split=10)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=1, min_samples_leaf=7, min_samples_split=2)", "GaussianNB(PCA(RBFSampler(data, RBFSampler.gamma=0.8), PCA.iterated_power=2, PCA.svd_solver='randomized'))", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.4), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.05)", "DecisionTreeClassifier(FeatureAgglomeration(RBFSampler(data, RBFSampler.gamma=0.8), FeatureAgglomeration.affinity='l2', FeatureAgglomeration.linkage='average'), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=10, min_samples_leaf=10, min_samples_split=2)", "RandomForestClassifier(SelectPercentile(Nystroem(data, Nystroem.gamma=0.8, Nystroem.kernel='sigmoid', Nystroem.n_components=8), SelectPercentile.percentile=20, SelectPercentile.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.5, RandomForestClassifier.min_samples_leaf=7, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "GaussianNB(MinMaxScaler(PCA(data, PCA.iterated_power=2, PCA.svd_solver='randomized')))", "ExtraTreesClassifier(FeatureAgglomeration(RBFSampler(data, RBFSampler.gamma=0.0), FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='average'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=7, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "GaussianNB(Normalizer(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), Normalizer.norm='l1'))", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=1, min_samples_leaf=4, min_samples_split=2)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.05)"], "helena": ["LogisticRegression(FastICA(data, FastICA.tol=0.4, FastICA.whiten='unit-variance'), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=19, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Normalizer(MaxAbsScaler(data), Normalizer.norm='max'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=18, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=19, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=18, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=13, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=13, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Normalizer(MaxAbsScaler(data), Normalizer.norm='max'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=18, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=18, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=17, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=16, min_samples_split=18, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=14, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(MinMaxScaler(data), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=6, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(VarianceThreshold(data, VarianceThreshold.threshold=1.0), LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=3, min_samples_leaf=2, min_samples_split=11)", "LogisticRegression(RobustScaler(RobustScaler(data)), LogisticRegression.C=0.0001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "BernoulliNB(VarianceThreshold(data, VarianceThreshold.threshold=0.8500000000000001), alpha=0.1, fit_prior=True)", "DecisionTreeClassifier(Normalizer(data, Normalizer.norm='l1'), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=6, min_samples_leaf=12, min_samples_split=16)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=6, min_samples_leaf=12, min_samples_split=10)", "LogisticRegression(RobustScaler(data), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(RobustScaler(MinMaxScaler(data)), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=17, min_samples_split=18, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=11, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MinMaxScaler(data), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(PCA(data, PCA.iterated_power=4, PCA.svd_solver='randomized'), alpha=1.0, fit_prior=True)", "LogisticRegression(SelectFwe(data, SelectFwe.alpha=0.007, SelectFwe.score_func=f_classif), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(Nystroem(MinMaxScaler(data), Nystroem.gamma=1.0, Nystroem.kernel='polynomial', Nystroem.n_components=6), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=2, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(Binarizer(SelectFwe(data, SelectFwe.alpha=0.04, SelectFwe.score_func=f_classif), Binarizer.threshold=0.25), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=15, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "DecisionTreeClassifier(MaxAbsScaler(data), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=4, min_samples_leaf=3, min_samples_split=19)", "DecisionTreeClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=4, min_samples_leaf=8, min_samples_split=7)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=20, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=18, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MaxAbsScaler(data), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=15, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectFwe(data, SelectFwe.alpha=0.028, SelectFwe.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=6, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=6, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectFwe(data, SelectFwe.alpha=0.028, SelectFwe.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=6, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(StandardScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=6, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RobustScaler(StandardScaler(data)), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=6, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(StandardScaler(data), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=6, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(StandardScaler(data), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.1, min_samples_leaf=6, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(MaxAbsScaler(data), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MaxAbsScaler(data), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(Normalizer(data, Normalizer.norm='l1'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.2, min_samples_leaf=16, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(MinMaxScaler(data), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(MinMaxScaler(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized')), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "BernoulliNB(PCA(MaxAbsScaler(data), PCA.iterated_power=10, PCA.svd_solver='randomized'), alpha=10.0, fit_prior=True)", "BernoulliNB(PCA(MaxAbsScaler(data), PCA.iterated_power=10, PCA.svd_solver='randomized'), alpha=100.0, fit_prior=True)", "BernoulliNB(PCA(data, PCA.iterated_power=1, PCA.svd_solver='randomized'), alpha=10.0, fit_prior=True)", "BernoulliNB(PCA(FastICA(data, FastICA.tol=0.65, FastICA.whiten='unit-variance'), PCA.iterated_power=10, PCA.svd_solver='randomized'), alpha=10.0, fit_prior=True)", "BernoulliNB(FastICA(data, FastICA.tol=0.5, FastICA.whiten='unit-variance'), alpha=10.0, fit_prior=True)", "ExtraTreesClassifier(Normalizer(data, Normalizer.norm='max'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=14, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(MinMaxScaler(data), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.05, RandomForestClassifier.min_samples_leaf=9, RandomForestClassifier.min_samples_split=10, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectPercentile(Binarizer(data, Binarizer.threshold=0.4), SelectPercentile.percentile=48, SelectPercentile.score_func=f_classif), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=20, RandomForestClassifier.min_samples_split=14, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.05, min_samples_leaf=3, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(PCA(data, PCA.iterated_power=7, PCA.svd_solver='randomized'), alpha=100.0, fit_prior=False)", "ExtraTreesClassifier(Binarizer(VarianceThreshold(data, VarianceThreshold.threshold=0.45), Binarizer.threshold=0.1), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=17, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=5, min_samples_leaf=8, min_samples_split=4)", "GaussianNB(MinMaxScaler(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l1', FeatureAgglomeration.linkage='average')))", "DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=3, min_samples_leaf=9, min_samples_split=4)", "BernoulliNB(data, alpha=0.01, fit_prior=True)", "LogisticRegression(FastICA(MaxAbsScaler(data), FastICA.tol=0.35000000000000003, FastICA.whiten='unit-variance'), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(FastICA(RobustScaler(data), FastICA.tol=0.35000000000000003, FastICA.whiten='unit-variance'), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(StandardScaler(data), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=19, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=18, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=16, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=16, min_samples_split=18, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=19, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=13, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=12, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)"], "madeline": ["GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=13, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "KNeighborsClassifier(RBFSampler(data, RBFSampler.gamma=0.2), KNeighborsClassifier.n_neighbors=7, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='uniform')", "RandomForestClassifier(RBFSampler(SelectFwe(data, SelectFwe.alpha=0.032, SelectFwe.score_func=f_classif), RBFSampler.gamma=0.65), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(SelectPercentile(data, SelectPercentile.percentile=82, SelectPercentile.score_func=f_classif), RBFSampler.gamma=0.8500000000000001), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.55, RandomForestClassifier.min_samples_leaf=5, RandomForestClassifier.min_samples_split=20, RandomForestClassifier.n_estimators=100)", "KNeighborsClassifier(MinMaxScaler(RBFSampler(data, RBFSampler.gamma=0.9500000000000001)), KNeighborsClassifier.n_neighbors=46, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='uniform')", "DecisionTreeClassifier(FastICA(data, FastICA.tol=0.1, FastICA.whiten='unit-variance'), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=10, min_samples_leaf=9, min_samples_split=14)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.55), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=5, RandomForestClassifier.min_samples_split=20, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.25), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=10, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=3, min_samples_leaf=17, min_samples_split=4)", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.7000000000000001))", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.25, Nystroem.kernel='poly', Nystroem.n_components=1), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.55, min_samples_leaf=11, min_samples_split=19, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=5, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=7, min_samples_split=19, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=4, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=2, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), alpha=0.01, fit_prior=True)", "ExtraTreesClassifier(RBFSampler(SelectPercentile(data, SelectPercentile.percentile=5, SelectPercentile.score_func=f_classif), RBFSampler.gamma=0.05), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=4, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=4, min_samples_split=19, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.5), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=12, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.05), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=11, GradientBoostingClassifier.min_samples_split=17, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7000000000000001)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.25), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=7, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.3)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=1, min_samples_split=13, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(MaxAbsScaler(RBFSampler(data, RBFSampler.gamma=0.15000000000000002)), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=10, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.8), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=10, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.25), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=13, RandomForestClassifier.min_samples_split=5, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.55, RandomForestClassifier.min_samples_leaf=13, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.05, Nystroem.kernel='polynomial', Nystroem.n_components=1), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=5, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)", "BernoulliNB(MinMaxScaler(data), alpha=1.0, fit_prior=False)", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.05, Nystroem.kernel='polynomial', Nystroem.n_components=1), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=9, min_samples_leaf=5, min_samples_split=20)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=9, min_samples_leaf=13, min_samples_split=13)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.4), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=13, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.5), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=1, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.45), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=13, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=17, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.45), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=2, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.4), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=2, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=13, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=7, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "DecisionTreeClassifier(FastICA(data, FastICA.tol=0.1, FastICA.whiten='unit-variance'), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=7, min_samples_leaf=16, min_samples_split=9)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.2), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.8, RandomForestClassifier.min_samples_leaf=19, RandomForestClassifier.min_samples_split=12, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(SelectFwe(data, SelectFwe.alpha=0.023, SelectFwe.score_func=f_classif), RBFSampler.gamma=0.7000000000000001), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=7, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.75))", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=7, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MaxAbsScaler(RBFSampler(data, RBFSampler.gamma=0.8)), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=7, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.75), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=7, RandomForestClassifier.min_samples_split=18, RandomForestClassifier.n_estimators=100)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.45), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=4, min_samples_leaf=8, min_samples_split=7)", "DecisionTreeClassifier(FastICA(MinMaxScaler(data), FastICA.tol=0.6000000000000001, FastICA.whiten='unit-variance'), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=4, min_samples_leaf=8, min_samples_split=7)", "GradientBoostingClassifier(FastICA(StandardScaler(data), FastICA.tol=0.25, FastICA.whiten='unit-variance'), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=12, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.35000000000000003)", "ExtraTreesClassifier(Binarizer(data, Binarizer.threshold=0.2), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=11, min_samples_split=16, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.75), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=7, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(MinMaxScaler(RBFSampler(data, RBFSampler.gamma=0.8500000000000001)), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.5, RandomForestClassifier.min_samples_leaf=18, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.55), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=13, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RobustScaler(RBFSampler(data, RBFSampler.gamma=0.75)), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=5, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=6, min_samples_leaf=16, min_samples_split=8)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=1.0), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=2, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.1), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=5, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6000000000000001, min_samples_leaf=5, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "GaussianNB(Nystroem(Binarizer(data, Binarizer.threshold=0.8500000000000001), Nystroem.gamma=0.35000000000000003, Nystroem.kernel='polynomial', Nystroem.n_components=4))", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.05), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=4, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.9), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=14, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.75), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=6, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.4), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=4, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "KNeighborsClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), KNeighborsClassifier.n_neighbors=23, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='uniform')", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.05), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=4, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=4, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=4, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.8), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=10, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.25), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=12, RandomForestClassifier.min_samples_split=9, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=1, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.65), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=1, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.1), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(SelectFwe(data, SelectFwe.alpha=0.022, SelectFwe.score_func=f_classif), RBFSampler.gamma=0.65), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=1, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(RBFSampler(VarianceThreshold(data, VarianceThreshold.threshold=0.4), RBFSampler.gamma=0.9), alpha=0.1, fit_prior=True)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.45), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=1, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=1, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(SelectFwe(data, SelectFwe.alpha=0.004, SelectFwe.score_func=f_classif), RBFSampler.gamma=0.30000000000000004), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=13, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.05), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(SelectFwe(data, SelectFwe.alpha=0.041, SelectFwe.score_func=f_classif), RBFSampler.gamma=1.0), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=1, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.65), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=13, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MaxAbsScaler(RBFSampler(data, RBFSampler.gamma=0.9)), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=3, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=5, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "KNeighborsClassifier(RBFSampler(data, RBFSampler.gamma=0.75), KNeighborsClassifier.n_neighbors=47, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='distance')", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=1.0), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=6, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.5), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=5, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.25), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=3, min_samples_split=18, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=5, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "KNeighborsClassifier(Nystroem(data, Nystroem.gamma=0.9, Nystroem.kernel='polynomial', Nystroem.n_components=1), KNeighborsClassifier.n_neighbors=44, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='distance')", "ExtraTreesClassifier(MinMaxScaler(RBFSampler(data, RBFSampler.gamma=0.2)), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=5, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)"], "GesturePhaseSegmentationProcessed": ["RandomForestClassifier(MaxAbsScaler(RobustScaler(data)), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(StandardScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectPercentile(data, SelectPercentile.percentile=72, SelectPercentile.score_func=f_classif), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectPercentile(RobustScaler(data), SelectPercentile.percentile=72, SelectPercentile.score_func=f_classif), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=4, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RobustScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.15000000000000002, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectPercentile(data, SelectPercentile.percentile=83, SelectPercentile.score_func=f_classif), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.1, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.5, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(SelectPercentile(data, SelectPercentile.percentile=72, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=10, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.5, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MinMaxScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.5, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RobustScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.5, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RobustScaler(SelectPercentile(data, SelectPercentile.percentile=84, SelectPercentile.score_func=f_classif)), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RobustScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.5, RandomForestClassifier.min_samples_leaf=2, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=6, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(data, SelectFwe.alpha=0.047, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(MaxAbsScaler(data), SelectFwe.alpha=0.047, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=1, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=6, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=6, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=6, min_samples_split=13, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=6, min_samples_split=13, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(SelectPercentile(data, SelectPercentile.percentile=62, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=1.0, GradientBoostingClassifier.min_samples_leaf=14, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.55)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=3, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(StandardScaler(data), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.55, min_samples_leaf=6, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MaxAbsScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=3, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(StandardScaler(MinMaxScaler(data)), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(StandardScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(StandardScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(StandardScaler(MaxAbsScaler(data)), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7000000000000001)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=3, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(data, SelectFwe.alpha=0.039, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=10, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=3, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(data, SelectFwe.alpha=0.039, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=6, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(data, SelectFwe.alpha=0.012, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=6, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(MinMaxScaler(data), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=3, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(data, SelectFwe.alpha=0.018000000000000002, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=6, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=6, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.6000000000000001, RandomForestClassifier.min_samples_leaf=6, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(RobustScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RobustScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=1, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(StandardScaler(RobustScaler(data)), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=1, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=1, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RobustScaler(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False)), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=1, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MinMaxScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.7500000000000001)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=1, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MinMaxScaler(RobustScaler(data)), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(MinMaxScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=11, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(SelectPercentile(data, SelectPercentile.percentile=90, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.6500000000000001, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(MaxAbsScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(RobustScaler(data), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.5, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=11, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=5, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MinMaxScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=5, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(SelectPercentile(data, SelectPercentile.percentile=69, SelectPercentile.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=1, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=1, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.55, min_samples_leaf=1, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=1, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=1, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(MinMaxScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=5, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=1, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=1, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(MinMaxScaler(data), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=5, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(RobustScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=1, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)"], "MiniBooNE": ["DecisionTreeClassifier(FeatureAgglomeration(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='laplacian', Nystroem.n_components=9), FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='average'), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=4, min_samples_leaf=7, min_samples_split=10)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.55, Nystroem.kernel='laplacian', Nystroem.n_components=10), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=15, min_samples_split=15, ExtraTreesClassifier.n_estimators=100)", "GaussianNB(RobustScaler(data))", "RandomForestClassifier(Normalizer(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='polynomial', Nystroem.n_components=1), Normalizer.norm='l1'), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=17, RandomForestClassifier.min_samples_split=14, RandomForestClassifier.n_estimators=100)", "GaussianNB(StandardScaler(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False)))", "GaussianNB(data)", "GaussianNB(MaxAbsScaler(RobustScaler(data)))", "GaussianNB(MaxAbsScaler(data))", "GaussianNB(StandardScaler(data))", "GaussianNB(StandardScaler(SelectFwe(data, SelectFwe.alpha=0.048, SelectFwe.score_func=f_classif)))", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.75))", "GaussianNB(FeatureAgglomeration(Nystroem(data, Nystroem.gamma=0.25, Nystroem.kernel='rbf', Nystroem.n_components=4), FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='average'))", "GradientBoostingClassifier(MaxAbsScaler(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='laplacian', Nystroem.n_components=8)), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.6000000000000001, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=3, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8500000000000001)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.8500000000000001, Nystroem.kernel='cosine', Nystroem.n_components=2), alpha=10.0, fit_prior=True)", "BernoulliNB(MinMaxScaler(StandardScaler(data)), alpha=1.0, fit_prior=True)", "KNeighborsClassifier(Normalizer(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), Normalizer.norm='l1'), KNeighborsClassifier.n_neighbors=9, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='distance')", "BernoulliNB(PolynomialFeatures(MinMaxScaler(data), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), alpha=0.001, fit_prior=True)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.8500000000000001, Nystroem.kernel='cosine', Nystroem.n_components=2), alpha=1.0, fit_prior=True)", "GaussianNB(data)", "GaussianNB(MaxAbsScaler(data))", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.4, Nystroem.kernel='laplacian', Nystroem.n_components=5), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=13, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.0), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=17, min_samples_split=17, ExtraTreesClassifier.n_estimators=100)", "GaussianNB(Nystroem(VarianceThreshold(data, VarianceThreshold.threshold=0.45), Nystroem.gamma=0.45, Nystroem.kernel='laplacian', Nystroem.n_components=1))", "GaussianNB(Nystroem(VarianceThreshold(data, VarianceThreshold.threshold=0.45), Nystroem.gamma=0.75, Nystroem.kernel='laplacian', Nystroem.n_components=1))", "GradientBoostingClassifier(Binarizer(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), Binarizer.threshold=0.05), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=3, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=15, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9500000000000001)", "KNeighborsClassifier(RBFSampler(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RBFSampler.gamma=0.25), KNeighborsClassifier.n_neighbors=20, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='uniform')", "GaussianNB(Binarizer(Nystroem(data, Nystroem.gamma=0.8500000000000001, Nystroem.kernel='linear', Nystroem.n_components=2), Binarizer.threshold=0.8))", "GaussianNB(data)", "KNeighborsClassifier(Binarizer(Normalizer(data, Normalizer.norm='l1'), Binarizer.threshold=0.25), KNeighborsClassifier.n_neighbors=45, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='uniform')", "KNeighborsClassifier(Binarizer(RobustScaler(Binarizer(data, Binarizer.threshold=0.1)), Binarizer.threshold=0.9), KNeighborsClassifier.n_neighbors=18, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='distance')", "GaussianNB(PolynomialFeatures(Nystroem(data, Nystroem.gamma=0.65, Nystroem.kernel='sigmoid', Nystroem.n_components=5), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False))", "ExtraTreesClassifier(Normalizer(Nystroem(VarianceThreshold(data, VarianceThreshold.threshold=0.45), Nystroem.gamma=0.5, Nystroem.kernel='laplacian', Nystroem.n_components=10), Normalizer.norm='l1'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.2, min_samples_leaf=9, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Binarizer(Normalizer(data, Normalizer.norm='l1'), Binarizer.threshold=0.9500000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=11, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(Normalizer(Nystroem(data, Nystroem.gamma=0.5, Nystroem.kernel='laplacian', Nystroem.n_components=10), Normalizer.norm='l1'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.2, min_samples_leaf=9, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.2))", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.8), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=8, min_samples_leaf=4, min_samples_split=19)", "GaussianNB(RobustScaler(data))", "GaussianNB(RobustScaler(MinMaxScaler(data)))", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.8500000000000001, Nystroem.kernel='sigmoid', Nystroem.n_components=9), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=7, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PCA(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='sigmoid', Nystroem.n_components=1), PCA.iterated_power=1, PCA.svd_solver='randomized'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=7, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.0), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.25), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=5, min_samples_leaf=20, min_samples_split=8)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.05), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=1, min_samples_leaf=20, min_samples_split=8)", "LogisticRegression(FastICA(Nystroem(data, Nystroem.gamma=0.45, Nystroem.kernel='sigmoid', Nystroem.n_components=1), FastICA.tol=0.25, FastICA.whiten='unit-variance'), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "BernoulliNB(SelectPercentile(data, SelectPercentile.percentile=1, SelectPercentile.score_func=f_classif), alpha=0.01, fit_prior=True)", "BernoulliNB(SelectFwe(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l2', FeatureAgglomeration.linkage='complete'), SelectFwe.alpha=0.044, SelectFwe.score_func=f_classif), alpha=0.1, fit_prior=False)", "GaussianNB(Nystroem(data, Nystroem.gamma=0.65, Nystroem.kernel='sigmoid', Nystroem.n_components=8))", "BernoulliNB(MinMaxScaler(data), alpha=0.01, fit_prior=False)", "GaussianNB(data)", "GaussianNB(StandardScaler(StandardScaler(data)))", "BernoulliNB(Nystroem(RBFSampler(data, RBFSampler.gamma=0.55), Nystroem.gamma=0.5, Nystroem.kernel='rbf', Nystroem.n_components=6), alpha=1.0, fit_prior=True)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='rbf', Nystroem.n_components=6), alpha=1.0, fit_prior=True)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.5, Nystroem.kernel='rbf', Nystroem.n_components=6), alpha=1.0, fit_prior=True)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.4), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=2, min_samples_leaf=18, min_samples_split=7)", "DecisionTreeClassifier(RBFSampler(VarianceThreshold(data, VarianceThreshold.threshold=0.25), RBFSampler.gamma=0.75), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=2, min_samples_leaf=13, min_samples_split=19)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.4), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=2, min_samples_leaf=8, min_samples_split=7)", "GaussianNB(RobustScaler(data))", "GaussianNB(PolynomialFeatures(SelectPercentile(data, SelectPercentile.percentile=86, SelectPercentile.score_func=f_classif), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False))", "GaussianNB(data)", "GaussianNB(MaxAbsScaler(RobustScaler(data)))", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.30000000000000004, Nystroem.kernel='rbf', Nystroem.n_components=7), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=5, min_samples_leaf=5, min_samples_split=4)", "LogisticRegression(MinMaxScaler(RBFSampler(data, RBFSampler.gamma=0.0)), LogisticRegression.C=0.0001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(Nystroem(data, Nystroem.gamma=0.8, Nystroem.kernel='rbf', Nystroem.n_components=7), LogisticRegression.C=0.0001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GaussianNB(RobustScaler(data))", "BernoulliNB(SelectFwe(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='ward'), SelectFwe.alpha=0.015, SelectFwe.score_func=f_classif), alpha=0.001, fit_prior=False)", "BernoulliNB(FeatureAgglomeration(Normalizer(data, Normalizer.norm='max'), FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='ward'), alpha=0.001, fit_prior=False)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=8, min_samples_leaf=7, min_samples_split=8)", "GaussianNB(data)", "GaussianNB(VarianceThreshold(data, VarianceThreshold.threshold=0.45))", "GaussianNB(MaxAbsScaler(data))", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.0), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=6, min_samples_leaf=12, min_samples_split=11)", "GaussianNB(RBFSampler(Binarizer(data, Binarizer.threshold=0.05), RBFSampler.gamma=0.0))", "LogisticRegression(Nystroem(data, Nystroem.gamma=0.30000000000000004, Nystroem.kernel='rbf', Nystroem.n_components=6), LogisticRegression.C=10.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.15000000000000002, Nystroem.kernel='laplacian', Nystroem.n_components=1), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=3, min_samples_leaf=2, min_samples_split=11)", "BernoulliNB(PolynomialFeatures(Nystroem(data, Nystroem.gamma=0.5, Nystroem.kernel='rbf', Nystroem.n_components=2), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), alpha=1.0, fit_prior=False)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.8, Nystroem.kernel='rbf', Nystroem.n_components=9), alpha=10.0, fit_prior=True)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.5), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=6, min_samples_leaf=12, min_samples_split=11)", "BernoulliNB(FeatureAgglomeration(RBFSampler(data, RBFSampler.gamma=0.2), FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='average'), alpha=10.0, fit_prior=True)", "GaussianNB(RobustScaler(MaxAbsScaler(data)))", "GaussianNB(RobustScaler(data))", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.45), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.25, Nystroem.kernel='laplacian', Nystroem.n_components=2), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.7500000000000001, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.5)", "LogisticRegression(FastICA(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), FastICA.tol=0.1, FastICA.whiten='unit-variance'), LogisticRegression.C=0.1, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "BernoulliNB(Nystroem(PCA(data, PCA.iterated_power=2, PCA.svd_solver='randomized'), Nystroem.gamma=0.15000000000000002, Nystroem.kernel='rbf', Nystroem.n_components=4), alpha=0.001, fit_prior=True)", "GaussianNB(RobustScaler(data))", "BernoulliNB(MinMaxScaler(SelectPercentile(data, SelectPercentile.percentile=24, SelectPercentile.score_func=f_classif)), alpha=0.001, fit_prior=True)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.2), alpha=0.001, fit_prior=True)", "GaussianNB(data)", "GaussianNB(StandardScaler(StandardScaler(data)))", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')"], "airlines": ["GaussianNB(RBFSampler(data, RBFSampler.gamma=0.30000000000000004))", "BernoulliNB(SelectPercentile(data, SelectPercentile.percentile=48, SelectPercentile.score_func=f_classif), alpha=0.1, fit_prior=True)", "GaussianNB(Binarizer(data, Binarizer.threshold=0.4))", "GaussianNB(Binarizer(Binarizer(data, Binarizer.threshold=0.1), Binarizer.threshold=0.35000000000000003))", "GradientBoostingClassifier(Binarizer(data, Binarizer.threshold=0.4), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=17, GradientBoostingClassifier.min_samples_split=7, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "DecisionTreeClassifier(Binarizer(data, Binarizer.threshold=0.9), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=5, min_samples_leaf=14, min_samples_split=3)", "DecisionTreeClassifier(Binarizer(data, Binarizer.threshold=0.6000000000000001), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=5, min_samples_leaf=14, min_samples_split=3)", "BernoulliNB(Normalizer(data, Normalizer.norm='l1'), alpha=10.0, fit_prior=False)", "BernoulliNB(data, alpha=0.01, fit_prior=False)", "BernoulliNB(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), alpha=0.01, fit_prior=False)", "MultinomialNB(Nystroem(RBFSampler(data, RBFSampler.gamma=0.75), Nystroem.gamma=0.9, Nystroem.kernel='laplacian', Nystroem.n_components=7), alpha=0.001, fit_prior=True)", "DecisionTreeClassifier(SelectPercentile(RBFSampler(data, RBFSampler.gamma=0.45), SelectPercentile.percentile=52, SelectPercentile.score_func=f_classif), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=4, min_samples_leaf=10, min_samples_split=2)", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.6000000000000001))", "DecisionTreeClassifier(Binarizer(data, Binarizer.threshold=0.9500000000000001), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=8, min_samples_split=12)", "DecisionTreeClassifier(Binarizer(data, Binarizer.threshold=0.9500000000000001), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=13, min_samples_split=12)", "GaussianNB(RBFSampler(VarianceThreshold(data, VarianceThreshold.threshold=0.5), RBFSampler.gamma=0.6000000000000001))", "GaussianNB(Binarizer(Nystroem(data, Nystroem.gamma=0.75, Nystroem.kernel='poly', Nystroem.n_components=3), Binarizer.threshold=0.6000000000000001))", "BernoulliNB(SelectPercentile(data, SelectPercentile.percentile=52, SelectPercentile.score_func=f_classif), alpha=0.01, fit_prior=True)", "DecisionTreeClassifier(PCA(Binarizer(data, Binarizer.threshold=0.55), PCA.iterated_power=5, PCA.svd_solver='randomized'), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=3, min_samples_leaf=11, min_samples_split=8)", "DecisionTreeClassifier(Binarizer(data, Binarizer.threshold=0.25), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=4, min_samples_leaf=10, min_samples_split=2)", "BernoulliNB(VarianceThreshold(data, VarianceThreshold.threshold=0.8), alpha=0.1, fit_prior=True)", "BernoulliNB(VarianceThreshold(data, VarianceThreshold.threshold=0.8), alpha=0.1, fit_prior=False)", "MultinomialNB(Nystroem(data, Nystroem.gamma=0.5, Nystroem.kernel='sigmoid', Nystroem.n_components=2), alpha=1.0, fit_prior=True)", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.8500000000000001, Nystroem.kernel='sigmoid', Nystroem.n_components=3), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=2, min_samples_leaf=11, min_samples_split=11)", "GaussianNB(SelectFwe(RBFSampler(data, RBFSampler.gamma=0.0), SelectFwe.alpha=0.002, SelectFwe.score_func=f_classif))", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.9, Nystroem.kernel='sigmoid', Nystroem.n_components=6), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=2, min_samples_leaf=11, min_samples_split=6)", "DecisionTreeClassifier(StandardScaler(MinMaxScaler(Nystroem(data, Nystroem.gamma=0.4, Nystroem.kernel='laplacian', Nystroem.n_components=2))), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=6, min_samples_leaf=7, min_samples_split=8)", "GaussianNB(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='laplacian', Nystroem.n_components=8))", "GaussianNB(FeatureAgglomeration(RBFSampler(data, RBFSampler.gamma=1.0), FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='complete'))", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.75, Nystroem.kernel='chi2', Nystroem.n_components=3), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.7500000000000001, GradientBoostingClassifier.min_samples_leaf=12, GradientBoostingClassifier.min_samples_split=5, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=1.0)", "BernoulliNB(VarianceThreshold(VarianceThreshold(data, VarianceThreshold.threshold=0.7000000000000001), VarianceThreshold.threshold=0.9500000000000001), alpha=10.0, fit_prior=False)", "BernoulliNB(VarianceThreshold(data, VarianceThreshold.threshold=0.5), alpha=10.0, fit_prior=False)", "BernoulliNB(VarianceThreshold(data, VarianceThreshold.threshold=0.7000000000000001), alpha=10.0, fit_prior=False)", "BernoulliNB(VarianceThreshold(data, VarianceThreshold.threshold=0.55), alpha=10.0, fit_prior=False)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.0, Nystroem.kernel='laplacian', Nystroem.n_components=9), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=15, RandomForestClassifier.min_samples_split=20, RandomForestClassifier.n_estimators=100)", "BernoulliNB(SelectPercentile(data, SelectPercentile.percentile=2, SelectPercentile.score_func=f_classif), alpha=100.0, fit_prior=True)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.8500000000000001, Nystroem.kernel='rbf', Nystroem.n_components=3), alpha=0.001, fit_prior=False)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.8, Nystroem.kernel='rbf', Nystroem.n_components=8), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.8500000000000001, RandomForestClassifier.min_samples_leaf=9, RandomForestClassifier.min_samples_split=12, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(Nystroem(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l1', FeatureAgglomeration.linkage='complete'), Nystroem.gamma=0.8, Nystroem.kernel='rbf', Nystroem.n_components=8), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.8500000000000001, RandomForestClassifier.min_samples_leaf=9, RandomForestClassifier.min_samples_split=12, RandomForestClassifier.n_estimators=100)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.9), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=4, min_samples_leaf=3, min_samples_split=12)", "ExtraTreesClassifier(Nystroem(PCA(data, PCA.iterated_power=1, PCA.svd_solver='randomized'), Nystroem.gamma=0.4, Nystroem.kernel='rbf', Nystroem.n_components=2), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=18, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.0), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=1, min_samples_leaf=4, min_samples_split=11)", "BernoulliNB(SelectPercentile(data, SelectPercentile.percentile=10, SelectPercentile.score_func=f_classif), alpha=10.0, fit_prior=False)", "GaussianNB(Nystroem(VarianceThreshold(data, VarianceThreshold.threshold=0.25), Nystroem.gamma=0.45, Nystroem.kernel='rbf', Nystroem.n_components=10))", "DecisionTreeClassifier(Normalizer(Nystroem(data, Nystroem.gamma=0.5, Nystroem.kernel='laplacian', Nystroem.n_components=10), Normalizer.norm='l1'), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=5, min_samples_leaf=4, min_samples_split=5)", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.8))", "LogisticRegression(RBFSampler(SelectFwe(data, SelectFwe.alpha=0.049, SelectFwe.score_func=f_classif), RBFSampler.gamma=0.9500000000000001), LogisticRegression.C=0.0001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GaussianNB(RBFSampler(SelectPercentile(data, SelectPercentile.percentile=68, SelectPercentile.score_func=f_classif), RBFSampler.gamma=0.75))", "DecisionTreeClassifier(Binarizer(data, Binarizer.threshold=0.0), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=1, min_samples_leaf=7, min_samples_split=9)", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.05, Nystroem.kernel='chi2', Nystroem.n_components=2), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=4, min_samples_split=8)", "GaussianNB(Nystroem(data, Nystroem.gamma=0.1, Nystroem.kernel='laplacian', Nystroem.n_components=5))", "GradientBoostingClassifier(Nystroem(VarianceThreshold(data, VarianceThreshold.threshold=0.5), Nystroem.gamma=0.55, Nystroem.kernel='sigmoid', Nystroem.n_components=3), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.6000000000000001, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.8)", "BernoulliNB(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='poly', Nystroem.n_components=1), alpha=0.001, fit_prior=True)", "MultinomialNB(Binarizer(FeatureAgglomeration(data, FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='complete'), Binarizer.threshold=0.2), alpha=0.001, fit_prior=True)", "MultinomialNB(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='chi2', Nystroem.n_components=1), alpha=0.001, fit_prior=True)", "MultinomialNB(Nystroem(SelectFwe(data, SelectFwe.alpha=0.009000000000000001, SelectFwe.score_func=f_classif), Nystroem.gamma=1.0, Nystroem.kernel='chi2', Nystroem.n_components=1), alpha=0.001, fit_prior=True)", "MultinomialNB(Binarizer(FeatureAgglomeration(data, FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='complete'), Binarizer.threshold=0.4), alpha=0.001, fit_prior=True)", "RandomForestClassifier(Binarizer(FeatureAgglomeration(data, FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='complete'), Binarizer.threshold=0.2), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=9, RandomForestClassifier.min_samples_split=11, RandomForestClassifier.n_estimators=100)", "MultinomialNB(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='poly', Nystroem.n_components=1), alpha=0.001, fit_prior=True)", "BernoulliNB(Nystroem(RobustScaler(data), Nystroem.gamma=0.55, Nystroem.kernel='laplacian', Nystroem.n_components=5), alpha=0.001, fit_prior=False)", "MultinomialNB(Nystroem(data, Nystroem.gamma=0.2, Nystroem.kernel='linear', Nystroem.n_components=1), alpha=0.01, fit_prior=True)", "GradientBoostingClassifier(RBFSampler(SelectFwe(data, SelectFwe.alpha=0.021, SelectFwe.score_func=f_classif), RBFSampler.gamma=0.0), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "GaussianNB(Binarizer(Nystroem(data, Nystroem.gamma=0.45, Nystroem.kernel='laplacian', Nystroem.n_components=2), Binarizer.threshold=0.9500000000000001))", "BernoulliNB(VarianceThreshold(data, VarianceThreshold.threshold=0.9000000000000001), alpha=0.1, fit_prior=True)", "GaussianNB(Nystroem(data, Nystroem.gamma=0.8, Nystroem.kernel='rbf', Nystroem.n_components=9))", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.65, Nystroem.kernel='rbf', Nystroem.n_components=9), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=6, min_samples_leaf=13, min_samples_split=14)", "GaussianNB(StandardScaler(PCA(data, PCA.iterated_power=3, PCA.svd_solver='randomized')))", "GradientBoostingClassifier(Nystroem(SelectFwe(data, SelectFwe.alpha=0.021, SelectFwe.score_func=f_classif), Nystroem.gamma=0.2, Nystroem.kernel='laplacian', Nystroem.n_components=5), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.2, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=18, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)", "ExtraTreesClassifier(PolynomialFeatures(Nystroem(data, Nystroem.gamma=0.75, Nystroem.kernel='chi2', Nystroem.n_components=4), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6000000000000001, min_samples_leaf=19, min_samples_split=13, ExtraTreesClassifier.n_estimators=100)", "GaussianNB(Nystroem(FeatureAgglomeration(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='complete'), Nystroem.gamma=0.05, Nystroem.kernel='chi2', Nystroem.n_components=8))", "GaussianNB(FastICA(PCA(data, PCA.iterated_power=5, PCA.svd_solver='randomized'), FastICA.tol=0.45, FastICA.whiten='unit-variance'))", "BernoulliNB(SelectPercentile(data, SelectPercentile.percentile=33, SelectPercentile.score_func=f_classif), alpha=100.0, fit_prior=False)", "BernoulliNB(Nystroem(MinMaxScaler(data), Nystroem.gamma=0.5, Nystroem.kernel='rbf', Nystroem.n_components=2), alpha=0.001, fit_prior=False)", "BernoulliNB(Nystroem(Nystroem(data, Nystroem.gamma=0.1, Nystroem.kernel='chi2', Nystroem.n_components=5), Nystroem.gamma=0.5, Nystroem.kernel='rbf', Nystroem.n_components=2), alpha=0.001, fit_prior=False)", "BernoulliNB(Nystroem(MaxAbsScaler(data), Nystroem.gamma=0.15000000000000002, Nystroem.kernel='laplacian', Nystroem.n_components=1), alpha=0.1, fit_prior=False)", "RandomForestClassifier(Binarizer(SelectPercentile(data, SelectPercentile.percentile=29, SelectPercentile.score_func=f_classif), Binarizer.threshold=0.6000000000000001), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.2, RandomForestClassifier.min_samples_leaf=15, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.6000000000000001, Nystroem.kernel='sigmoid', Nystroem.n_components=7), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=10, min_samples_leaf=15, min_samples_split=15)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.9), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=2, min_samples_leaf=7, min_samples_split=5)", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.8500000000000001, Nystroem.kernel='chi2', Nystroem.n_components=4), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=4, min_samples_leaf=13, min_samples_split=17)", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='chi2', Nystroem.n_components=4), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=2, min_samples_leaf=7, min_samples_split=5)", "BernoulliNB(VarianceThreshold(data, VarianceThreshold.threshold=0.5), alpha=100.0, fit_prior=False)", "BernoulliNB(VarianceThreshold(data, VarianceThreshold.threshold=0.45), alpha=0.01, fit_prior=False)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.8), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=5, min_samples_leaf=13, min_samples_split=2)", "GaussianNB(RBFSampler(RBFSampler(data, RBFSampler.gamma=0.75), RBFSampler.gamma=0.55))", "GaussianNB(Binarizer(SelectPercentile(data, SelectPercentile.percentile=53, SelectPercentile.score_func=f_classif), Binarizer.threshold=0.1))", "BernoulliNB(PolynomialFeatures(SelectPercentile(data, SelectPercentile.percentile=51, SelectPercentile.score_func=f_classif), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), alpha=0.01, fit_prior=True)", "BernoulliNB(SelectPercentile(data, SelectPercentile.percentile=53, SelectPercentile.score_func=f_classif), alpha=1.0, fit_prior=True)", "DecisionTreeClassifier(FastICA(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), FastICA.tol=0.8500000000000001, FastICA.whiten='unit-variance'), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=9, min_samples_leaf=2, min_samples_split=6)", "BernoulliNB(SelectPercentile(data, SelectPercentile.percentile=84, SelectPercentile.score_func=f_classif), alpha=0.1, fit_prior=False)", "MultinomialNB(Binarizer(SelectFwe(data, SelectFwe.alpha=0.048, SelectFwe.score_func=f_classif), Binarizer.threshold=0.15000000000000002), alpha=10.0, fit_prior=True)"], "eucalyptus": ["ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6000000000000001, min_samples_leaf=1, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=1, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6000000000000001, min_samples_leaf=1, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6000000000000001, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=1, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=4, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(MinMaxScaler(data), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=2, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RobustScaler(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False)), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=3, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(MaxAbsScaler(data), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=3, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(MinMaxScaler(data), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=3, min_samples_split=3, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=3, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(MinMaxScaler(data), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=1, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(MaxAbsScaler(data), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=2, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=3, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(VarianceThreshold(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), VarianceThreshold.threshold=0.7500000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=1, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=1, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(VarianceThreshold(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), VarianceThreshold.threshold=0.2), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=1, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=1, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RobustScaler(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False)), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=1, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=1, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=1, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=1, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=1, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(MinMaxScaler(data), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=1, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.25, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.55, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(MinMaxScaler(data), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.55, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=1, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(MinMaxScaler(data), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=1, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RobustScaler(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False)), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=1, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(MinMaxScaler(data), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=1, min_samples_split=13, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=10, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=6, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=7, RandomForestClassifier.min_samples_split=9, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.5, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(MaxAbsScaler(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False)), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.25, RandomForestClassifier.min_samples_leaf=7, RandomForestClassifier.min_samples_split=9, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.45), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.5, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.5, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.5, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=1, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=1, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=1, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.5, min_samples_leaf=1, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=2, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=2, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=2, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9500000000000001, min_samples_leaf=1, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=3, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(MinMaxScaler(data), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=3, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=3, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(VarianceThreshold(data, VarianceThreshold.threshold=0.45), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=1, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=3, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(StandardScaler(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False)), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=3, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(VarianceThreshold(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), VarianceThreshold.threshold=0.1), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=3, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.55, min_samples_leaf=3, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=3, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(MaxAbsScaler(data), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8, min_samples_leaf=3, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.55, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=1, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.6000000000000001, min_samples_leaf=2, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=3, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=1, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=1, min_samples_split=4, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=1, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=1, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=1, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=5, min_samples_split=11, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=5, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(data, SelectFwe.alpha=0.037, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.5, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(RobustScaler(data), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.55, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.35000000000000003, RandomForestClassifier.min_samples_leaf=3, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.5, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=9, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(data, SelectFwe.alpha=0.033, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.55, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "RandomForestClassifier(SelectFwe(data, SelectFwe.alpha=0.036000000000000004, SelectFwe.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.6000000000000001, RandomForestClassifier.min_samples_leaf=1, RandomForestClassifier.min_samples_split=6, RandomForestClassifier.n_estimators=100)"], "christine": ["RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.9), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=8, RandomForestClassifier.min_samples_split=9, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.05), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.1, GradientBoostingClassifier.min_samples_leaf=12, GradientBoostingClassifier.min_samples_split=13, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.4), alpha=1.0, fit_prior=False)", "ExtraTreesClassifier(RBFSampler(VarianceThreshold(data, VarianceThreshold.threshold=0.55), RBFSampler.gamma=0.30000000000000004), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=10, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)", "MultinomialNB(Nystroem(VarianceThreshold(data, VarianceThreshold.threshold=0.45), Nystroem.gamma=0.30000000000000004, Nystroem.kernel='rbf', Nystroem.n_components=3), alpha=100.0, fit_prior=True)", "DecisionTreeClassifier(RobustScaler(Nystroem(data, Nystroem.gamma=0.8, Nystroem.kernel='laplacian', Nystroem.n_components=4)), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=3, min_samples_leaf=12, min_samples_split=14)", "ExtraTreesClassifier(Nystroem(data, Nystroem.gamma=0.25, Nystroem.kernel='rbf', Nystroem.n_components=7), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=13, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(Nystroem(data, Nystroem.gamma=0.1, Nystroem.kernel='linear', Nystroem.n_components=10), alpha=10.0, fit_prior=True)", "DecisionTreeClassifier(Binarizer(Nystroem(data, Nystroem.gamma=0.5, Nystroem.kernel='cosine', Nystroem.n_components=3), Binarizer.threshold=0.35000000000000003), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=4, min_samples_leaf=17, min_samples_split=9)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.5), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=3, min_samples_leaf=12, min_samples_split=14)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), alpha=1.0, fit_prior=False)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.75), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=16, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.1)", "GaussianNB(RBFSampler(SelectFwe(data, SelectFwe.alpha=0.036000000000000004, SelectFwe.score_func=f_classif), RBFSampler.gamma=0.8500000000000001))", "ExtraTreesClassifier(SelectPercentile(RBFSampler(data, RBFSampler.gamma=0.1), SelectPercentile.percentile=88, SelectPercentile.score_func=f_classif), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=12, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.05, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.4), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7500000000000001, min_samples_leaf=6, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(Binarizer(MaxAbsScaler(FeatureAgglomeration(data, FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='complete')), Binarizer.threshold=0.65), alpha=0.1, fit_prior=True)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.55, Nystroem.kernel='sigmoid', Nystroem.n_components=3), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.05, GradientBoostingClassifier.min_samples_leaf=2, GradientBoostingClassifier.min_samples_split=19, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "RandomForestClassifier(Nystroem(data, Nystroem.gamma=0.5, Nystroem.kernel='chi2', Nystroem.n_components=5), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.8, RandomForestClassifier.min_samples_leaf=9, RandomForestClassifier.min_samples_split=2, RandomForestClassifier.n_estimators=100)", "BernoulliNB(Nystroem(Normalizer(data, Normalizer.norm='l1'), Nystroem.gamma=0.35000000000000003, Nystroem.kernel='linear', Nystroem.n_components=6), alpha=10.0, fit_prior=True)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=7, min_samples_leaf=1, min_samples_split=5)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='rbf', Nystroem.n_components=7), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='rbf', Nystroem.n_components=7), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='rbf', Nystroem.n_components=7), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.5)", "GradientBoostingClassifier(SelectPercentile(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), SelectPercentile.percentile=37, SelectPercentile.score_func=f_classif), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=8, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.5)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=7, min_samples_leaf=1, min_samples_split=4)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.2), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=2, min_samples_leaf=19, min_samples_split=9)", "BernoulliNB(SelectPercentile(Normalizer(data, Normalizer.norm='l1'), SelectPercentile.percentile=4, SelectPercentile.score_func=f_classif), alpha=10.0, fit_prior=False)", "GaussianNB(Binarizer(data, Binarizer.threshold=0.5))", "BernoulliNB(FastICA(data, FastICA.tol=0.2, FastICA.whiten='unit-variance'), alpha=10.0, fit_prior=False)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=3, min_samples_leaf=13, min_samples_split=10)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=6, min_samples_leaf=9, min_samples_split=18)", "RandomForestClassifier(RBFSampler(SelectFwe(data, SelectFwe.alpha=0.026000000000000002, SelectFwe.score_func=f_classif), RBFSampler.gamma=0.9500000000000001), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.6000000000000001, RandomForestClassifier.min_samples_leaf=17, RandomForestClassifier.min_samples_split=20, RandomForestClassifier.n_estimators=100)", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.65))", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.5)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=10, min_samples_leaf=14, min_samples_split=8)", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.30000000000000004, Nystroem.kernel='rbf', Nystroem.n_components=6), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=9, GradientBoostingClassifier.max_features=0.25, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.5)", "RandomForestClassifier(Binarizer(Normalizer(data, Normalizer.norm='l2'), Binarizer.threshold=1.0), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.3, RandomForestClassifier.min_samples_leaf=6, RandomForestClassifier.min_samples_split=3, RandomForestClassifier.n_estimators=100)", "GaussianNB(Binarizer(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='chi2', Nystroem.n_components=3), Binarizer.threshold=0.55))", "RandomForestClassifier(Binarizer(RBFSampler(data, RBFSampler.gamma=0.05), Binarizer.threshold=1.0), RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.4, RandomForestClassifier.min_samples_leaf=15, RandomForestClassifier.min_samples_split=12, RandomForestClassifier.n_estimators=100)", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.05))", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.30000000000000004), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "DecisionTreeClassifier(Normalizer(RBFSampler(data, RBFSampler.gamma=0.2), Normalizer.norm='l1'), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=6, min_samples_leaf=6, min_samples_split=3)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=1, min_samples_leaf=4, min_samples_split=2)", "RandomForestClassifier(SelectPercentile(Nystroem(data, Nystroem.gamma=0.8, Nystroem.kernel='sigmoid', Nystroem.n_components=8), SelectPercentile.percentile=20, SelectPercentile.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.5, RandomForestClassifier.min_samples_leaf=7, RandomForestClassifier.min_samples_split=4, RandomForestClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(Binarizer(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='sigmoid', Nystroem.n_components=2), Binarizer.threshold=0.55), RBFSampler.gamma=0.05), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=4, min_samples_split=13, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(FeatureAgglomeration(RBFSampler(data, RBFSampler.gamma=0.0), FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='average'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=7, min_samples_split=8, ExtraTreesClassifier.n_estimators=100)", "GaussianNB(Binarizer(Nystroem(data, Nystroem.gamma=0.35000000000000003, Nystroem.kernel='rbf', Nystroem.n_components=2), Binarizer.threshold=0.2))", "GaussianNB(Normalizer(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), Normalizer.norm='l1'))", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.2), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=10, min_samples_leaf=18, min_samples_split=8)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.9), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=4, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)", "GaussianNB(RBFSampler(data, RBFSampler.gamma=0.9))", "LogisticRegression(Nystroem(data, Nystroem.gamma=0.05, Nystroem.kernel='sigmoid', Nystroem.n_components=3), LogisticRegression.C=0.0001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GaussianNB(Nystroem(data, Nystroem.gamma=0.15000000000000002, Nystroem.kernel='rbf', Nystroem.n_components=9))", "GradientBoostingClassifier(Nystroem(data, Nystroem.gamma=0.2, Nystroem.kernel='rbf', Nystroem.n_components=7), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.8, GradientBoostingClassifier.min_samples_leaf=20, GradientBoostingClassifier.min_samples_split=4, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.8), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=13, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(FastICA(data, FastICA.tol=0.8500000000000001, FastICA.whiten='unit-variance'), RBFSampler.gamma=0.75), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=3, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.5)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.1), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=13, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)", "DecisionTreeClassifier(FastICA(data, FastICA.tol=0.65, FastICA.whiten='unit-variance'), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=4, min_samples_leaf=19, min_samples_split=15)", "DecisionTreeClassifier(SelectPercentile(FastICA(data, FastICA.tol=0.5, FastICA.whiten='unit-variance'), SelectPercentile.percentile=31, SelectPercentile.score_func=f_classif), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=4, min_samples_leaf=4, min_samples_split=17)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.45), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=8, min_samples_leaf=13, min_samples_split=11)", "RandomForestClassifier(RBFSampler(VarianceThreshold(data, VarianceThreshold.threshold=0.25), RBFSampler.gamma=1.0), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.55, RandomForestClassifier.min_samples_leaf=19, RandomForestClassifier.min_samples_split=6, RandomForestClassifier.n_estimators=100)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.1), GradientBoostingClassifier.learning_rate=1.0, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.15000000000000002, GradientBoostingClassifier.min_samples_leaf=9, GradientBoostingClassifier.min_samples_split=11, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.8500000000000001), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=4, min_samples_leaf=3, min_samples_split=17)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.65), alpha=100.0, fit_prior=True)", "DecisionTreeClassifier(FastICA(RBFSampler(data, RBFSampler.gamma=0.35000000000000003), FastICA.tol=0.05, FastICA.whiten='unit-variance'), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=3, min_samples_leaf=18, min_samples_split=18)", "GaussianNB(Nystroem(data, Nystroem.gamma=0.9500000000000001, Nystroem.kernel='laplacian', Nystroem.n_components=1))", "BernoulliNB(FeatureAgglomeration(MinMaxScaler(data), FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='ward'), alpha=100.0, fit_prior=True)", "LogisticRegression(Nystroem(data, Nystroem.gamma=0.9, Nystroem.kernel='rbf', Nystroem.n_components=6), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.0), LogisticRegression.C=25.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), alpha=0.01, fit_prior=True)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.9), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=2, min_samples_split=5, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(RBFSampler(data, RBFSampler.gamma=0.9), alpha=10.0, fit_prior=True)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.9), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.45, min_samples_leaf=2, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)", "BernoulliNB(Nystroem(MinMaxScaler(data), Nystroem.gamma=0.55, Nystroem.kernel='rbf', Nystroem.n_components=4), alpha=0.01, fit_prior=True)", "BernoulliNB(Nystroem(Nystroem(data, Nystroem.gamma=0.25, Nystroem.kernel='poly', Nystroem.n_components=7), Nystroem.gamma=0.9500000000000001, Nystroem.kernel='chi2', Nystroem.n_components=8), alpha=0.1, fit_prior=True)", "DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.75, Nystroem.kernel='rbf', Nystroem.n_components=1), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=7, min_samples_leaf=17, min_samples_split=5)", "LogisticRegression(Nystroem(data, Nystroem.gamma=0.4, Nystroem.kernel='sigmoid', Nystroem.n_components=7), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "DecisionTreeClassifier(PCA(Nystroem(data, Nystroem.gamma=0.7000000000000001, Nystroem.kernel='rbf', Nystroem.n_components=1), PCA.iterated_power=9, PCA.svd_solver='randomized'), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=8, min_samples_leaf=10, min_samples_split=4)", "MultinomialNB(Nystroem(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), Nystroem.gamma=0.8500000000000001, Nystroem.kernel='rbf', Nystroem.n_components=1), alpha=0.01, fit_prior=True)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.9500000000000001), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=9, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "ExtraTreesClassifier(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.4, min_samples_leaf=9, min_samples_split=7, ExtraTreesClassifier.n_estimators=100)", "LogisticRegression(RBFSampler(StandardScaler(data), RBFSampler.gamma=0.8500000000000001), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GradientBoostingClassifier(FastICA(RBFSampler(data, RBFSampler.gamma=0.45), FastICA.tol=0.9500000000000001, FastICA.whiten='unit-variance'), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.2)", "GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=0.45), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.2)", "GaussianNB(RBFSampler(MinMaxScaler(data), RBFSampler.gamma=0.45))", "BernoulliNB(MaxAbsScaler(RBFSampler(data, RBFSampler.gamma=0.7000000000000001)), alpha=0.01, fit_prior=False)", "LogisticRegression(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), LogisticRegression.C=0.5, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')", "GradientBoostingClassifier(PCA(RBFSampler(data, RBFSampler.gamma=0.45), PCA.iterated_power=8, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=10, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=8, GradientBoostingClassifier.min_samples_split=2, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.2)", "DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.9), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=7, min_samples_split=9)"]}